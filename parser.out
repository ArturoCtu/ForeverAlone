Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FROM

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID addProgram SEMICOLON programa1 END
Rule 2     addProgram -> <empty>
Rule 3     programa1 -> vars funcion principal
Rule 4     principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
Rule 5     addMain -> <empty>
Rule 6     vars -> VAR vars1
Rule 7     vars -> empty
Rule 8     vars1 -> tipo vars2 SEMICOLON varsadd
Rule 9     vars2 -> ID addVariable arr vars3
Rule 10    vars3 -> COMMA vars2
Rule 11    vars3 -> empty
Rule 12    varsadd -> vars1
Rule 13    varsadd -> empty
Rule 14    tipo -> INT
Rule 15    tipo -> FLOAT
Rule 16    tipo -> CHAR
Rule 17    tipo -> STRING
Rule 18    arr -> LSQRBRACKET CTEI RSQRBRACKET
Rule 19    arr -> empty
Rule 20    parameters -> parameters2
Rule 21    parameters -> empty
Rule 22    parameters2 -> tipo ID addVariable
Rule 23    parameters2 -> tipo ID addVariable parameters3
Rule 24    parameters3 -> COMMA ID addVariable parameters3
Rule 25    parameters3 -> COMMA tipo ID addVariable parameters3
Rule 26    parameters3 -> COMMA ID addVariable
Rule 27    parameters3 -> COMMA tipo ID addVariable
Rule 28    funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
Rule 29    funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
Rule 30    funcion -> empty
Rule 31    addFunction -> <empty>
Rule 32    retorno -> RETURN ID SEMICOLON
Rule 33    estatuto -> estatuto2 estatuto
Rule 34    estatuto -> empty
Rule 35    estatuto2 -> asignacion SEMICOLON
Rule 36    estatuto2 -> llamada SEMICOLON
Rule 37    estatuto2 -> lectura SEMICOLON
Rule 38    estatuto2 -> escritura SEMICOLON
Rule 39    estatuto2 -> for
Rule 40    estatuto2 -> if
Rule 41    estatuto2 -> while
Rule 42    asignacion -> ID addId arr EQUAL addOperator expresion quadEqual
Rule 43    llamada -> ID LPARENTHESIS expresion RPARENTHESIS
Rule 44    lectura -> READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
Rule 45    escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS
Rule 46    escritura1 -> printOperator expresion printQuad escritura2
Rule 47    escritura2 -> COMMA escritura1
Rule 48    escritura2 -> empty
Rule 49    for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
Rule 50    if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
Rule 51    else -> ELSE elseQuad LBRACKET estatuto RBRACKET
Rule 52    else -> empty
Rule 53    while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile
Rule 54    expresion -> nexp orQuad expresion1
Rule 55    expresion1 -> OR addOperator expresion
Rule 56    expresion1 -> empty
Rule 57    nexp -> comexp andQuad nexp1
Rule 58    nexp1 -> AND addOperator nexp
Rule 59    nexp1 -> empty
Rule 60    comexp -> sumexp compQuad compex1 compQuad
Rule 61    compex1 -> GTHAN addOperator sumexp
Rule 62    compex1 -> LTHAN addOperator sumexp
Rule 63    compex1 -> GTHANEQ addOperator sumexp
Rule 64    compex1 -> LTHANEQ addOperator sumexp
Rule 65    compex1 -> DIFFERENT addOperator sumexp
Rule 66    compex1 -> EQUALS addOperator sumexp
Rule 67    compex1 -> empty
Rule 68    sumexp -> mulexp plusQuad sumexp1
Rule 69    sumexp1 -> PLUS addOperator sumexp
Rule 70    sumexp1 -> MINUS addOperator sumexp
Rule 71    sumexp1 -> empty
Rule 72    mulexp -> pexp multQuad mulexp1
Rule 73    mulexp1 -> MULTIPLICATION addOperator mulexp
Rule 74    mulexp1 -> DIVISION addOperator mulexp
Rule 75    mulexp1 -> empty
Rule 76    pexp -> CTEI addOperandCte
Rule 77    pexp -> CTEF addOperandCte
Rule 78    pexp -> CTEC addOperandCte
Rule 79    pexp -> CTESTRING addOperandCte
Rule 80    pexp -> llamada
Rule 81    pexp -> ID addOperandVar
Rule 82    pexp -> LPARENTHESIS expresion RPARENTHESIS
Rule 83    empty -> <empty>

Terminals, with rules where they appear

AND                  : 58
CHAR                 : 16
COMMA                : 10 24 25 26 27 47 49
CTEC                 : 78
CTEF                 : 77
CTEI                 : 18 76
CTESTRING            : 79
DIFFERENT            : 65
DIVISION             : 74
ELSE                 : 51
END                  : 1
EQUAL                : 42
EQUALS               : 66
FLOAT                : 15
FOR                  : 49
FROM                 : 
FUNCTION             : 28 29
GTHAN                : 61
GTHANEQ              : 63
ID                   : 1 9 22 23 24 25 26 27 28 29 32 42 43 81
IF                   : 50
INT                  : 14
LBRACKET             : 4 28 29 49 50 51 53
LPARENTHESIS         : 4 28 29 43 44 45 50 53 82
LSQRBRACKET          : 18
LTHAN                : 62
LTHANEQ              : 64
MAIN                 : 4
MINUS                : 70
MULTIPLICATION       : 73
OR                   : 55
PLUS                 : 69
PRINT                : 45
PROGRAM              : 1
RBRACKET             : 4 28 29 49 50 51 53
READ                 : 44
RETURN               : 32
RPARENTHESIS         : 4 28 29 43 44 45 50 53 82
RSQRBRACKET          : 18
SEMICOLON            : 1 8 32 35 36 37 38
STRING               : 17
THEN                 : 50
TO                   : 49
VAR                  : 6
VOID                 : 29
WHILE                : 53
error                : 

Nonterminals, with rules where they appear

addFunction          : 28 29
addId                : 42
addMain              : 4
addOperandCte        : 76 77 78 79
addOperandVar        : 81
addOperator          : 42 55 58 61 62 63 64 65 66 69 70 73 74
addProgram           : 1
addVariable          : 9 22 23 24 25 26 27
andQuad              : 57
arr                  : 9 42
asignacion           : 35 49
comexp               : 57
compQuad             : 60 60
compex1              : 60
else                 : 50
elseQuad             : 51
empty                : 7 11 13 19 21 30 34 48 52 56 59 67 71 75
endFor               : 49
endIf                : 50
endWhile             : 53
escritura            : 38
escritura1           : 45 47
escritura2           : 46
estatuto             : 4 28 29 33 49 50 51 53
estatuto2            : 33
expresion            : 42 43 44 46 49 50 53 55 82
expresion1           : 54
for                  : 39
forOperator          : 49
forQuad              : 49
funcion              : 3 28 29
if                   : 40
ifQuad               : 50
lectura              : 37
llamada              : 36 80
mulexp               : 68 73 74
mulexp1              : 72
multQuad             : 72
nexp                 : 54 58
nexp1                : 57
orQuad               : 54
parameters           : 4 28 29
parameters2          : 20
parameters3          : 23 24 25
pexp                 : 72
plusQuad             : 68
principal            : 3
printOperator        : 46
printQuad            : 46
programa             : 0
programa1            : 1
quadEqual            : 42
readOperator         : 44
readQuad             : 44
retorno              : 28
sumexp               : 60 61 62 63 64 65 66 69 70
sumexp1              : 68
tipo                 : 8 22 23 25 27 28
vars                 : 3 4 28 29
vars1                : 6 12
vars2                : 8 10
vars3                : 9
varsadd              : 8
while                : 41
whileOperator        : 53
whileQuad            : 53


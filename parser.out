Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON programa1 END
Rule 2     programa1 -> vars funcion principal
Rule 3     principal -> MAIN LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
Rule 4     vars -> VAR vars1
Rule 5     vars -> empty
Rule 6     vars1 -> tipo vars2 SEMICOLON varsadd
Rule 7     vars2 -> ID arr vars3
Rule 8     vars3 -> COMMA vars2
Rule 9     vars3 -> empty
Rule 10    varsadd -> vars1
Rule 11    varsadd -> empty
Rule 12    tipo -> INT
Rule 13    tipo -> FLOAT
Rule 14    tipo -> CHAR
Rule 15    tipo -> STRING
Rule 16    arr -> LSQRBRACKET CTEI RSQRBRACKET
Rule 17    arr -> empty
Rule 18    parameters -> parameters2
Rule 19    parameters -> empty
Rule 20    parameters2 -> tipo ID
Rule 21    parameters2 -> tipo ID parameters3
Rule 22    parameters3 -> COMMA ID parameters3
Rule 23    parameters3 -> COMMA tipo ID parameters3
Rule 24    parameters3 -> COMMA ID
Rule 25    parameters3 -> COMMA tipo ID
Rule 26    funcion -> FUNCTION tipo ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
Rule 27    funcion -> FUNCTION VOID ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
Rule 28    funcion -> empty
Rule 29    retorno -> RETURN ID SEMICOLON
Rule 30    estatuto -> estatuto2 estatuto
Rule 31    estatuto -> empty
Rule 32    estatuto2 -> asignacion SEMICOLON
Rule 33    estatuto2 -> llamada SEMICOLON
Rule 34    estatuto2 -> lectura SEMICOLON
Rule 35    estatuto2 -> escritura SEMICOLON
Rule 36    estatuto2 -> for
Rule 37    estatuto2 -> if
Rule 38    estatuto2 -> while
Rule 39    asignacion -> ID arr EQUALS expresion
Rule 40    llamada -> ID LPARENTHESIS expresion RPARENTHESIS
Rule 41    lectura -> READ LPARENTHESIS vars2 RPARENTHESIS
Rule 42    escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS
Rule 43    escritura1 -> expresion escritura2
Rule 44    escritura2 -> COMMA escritura1
Rule 45    escritura2 -> empty
Rule 46    for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
Rule 47    if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
Rule 48    else -> ELSE LBRACKET estatuto RBRACKET
Rule 49    else -> empty
Rule 50    while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET
Rule 51    expresion -> nexp expresion1
Rule 52    expresion1 -> OR expresion
Rule 53    expresion1 -> empty
Rule 54    nexp -> comexp nexp1
Rule 55    nexp1 -> AND nexp
Rule 56    nexp1 -> empty
Rule 57    comexp -> sumexp compex1
Rule 58    compex1 -> GTHAN sumexp
Rule 59    compex1 -> LTHAN sumexp
Rule 60    compex1 -> GTHANEQ sumexp
Rule 61    compex1 -> LTHANEQ sumexp
Rule 62    compex1 -> DIFFERENT sumexp
Rule 63    compex1 -> empty
Rule 64    sumexp -> mulexp sumexp1
Rule 65    sumexp1 -> PLUS sumexp
Rule 66    sumexp1 -> MINUS sumexp
Rule 67    sumexp1 -> empty
Rule 68    mulexp -> pexp mulexp1
Rule 69    mulexp1 -> MULTIPLICATION mulexp
Rule 70    mulexp1 -> DIVISION mulexp
Rule 71    mulexp1 -> empty
Rule 72    pexp -> CTEI
Rule 73    pexp -> CTEF
Rule 74    pexp -> CTEC
Rule 75    pexp -> CTESTRING
Rule 76    pexp -> llamada
Rule 77    pexp -> ID
Rule 78    pexp -> LPARENTHESIS expresion RPARENTHESIS
Rule 79    empty -> <empty>

Terminals, with rules where they appear

AND                  : 55
CHAR                 : 14
COMMA                : 8 22 23 24 25 44 46
CTEC                 : 74
CTEF                 : 73
CTEI                 : 16 72
CTESTRING            : 75
DIFFERENT            : 62
DIVISION             : 70
ELSE                 : 48
END                  : 1
EQUALS               : 39
FLOAT                : 13
FOR                  : 46
FROM                 : 46
FUNCTION             : 26 27
GTHAN                : 58
GTHANEQ              : 60
ID                   : 1 7 20 21 22 23 24 25 26 27 29 39 40 77
IF                   : 47
INT                  : 12
LBRACKET             : 3 26 27 46 47 48 50
LPARENTHESIS         : 3 26 27 40 41 42 46 47 50 78
LSQRBRACKET          : 16
LTHAN                : 59
LTHANEQ              : 61
MAIN                 : 3
MINUS                : 66
MULTIPLICATION       : 69
OR                   : 52
PLUS                 : 65
PRINT                : 42
PROGRAM              : 1
RBRACKET             : 3 26 27 46 47 48 50
READ                 : 41
RETURN               : 29
RPARENTHESIS         : 3 26 27 40 41 42 46 47 50 78
RSQRBRACKET          : 16
SEMICOLON            : 1 6 29 32 33 34 35
STRING               : 15
THEN                 : 47
TO                   : 46
VAR                  : 4
VOID                 : 27
WHILE                : 50
error                : 

Nonterminals, with rules where they appear

arr                  : 7 39
asignacion           : 32 46
comexp               : 54
compex1              : 57
else                 : 47
empty                : 5 9 11 17 19 28 31 45 49 53 56 63 67 71
escritura            : 35
escritura1           : 42 44
escritura2           : 43
estatuto             : 3 26 27 30 46 47 48 50
estatuto2            : 30
expresion            : 39 40 43 46 47 50 52 78
expresion1           : 51
for                  : 36
funcion              : 2 26 27
if                   : 37
lectura              : 34
llamada              : 33 76
mulexp               : 64 69 70
mulexp1              : 68
nexp                 : 51 55
nexp1                : 54
parameters           : 3 26 27
parameters2          : 18
parameters3          : 21 22 23
pexp                 : 68
principal            : 2
programa             : 0
programa1            : 1
retorno              : 26
sumexp               : 57 58 59 60 61 62 65 66
sumexp1              : 64
tipo                 : 6 20 21 23 25 26
vars                 : 2 3 26 27
vars1                : 4 10
vars2                : 6 8 41
vars3                : 7
varsadd              : 6
while                : 38

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON programa1 END

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID SEMICOLON programa1 END

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . SEMICOLON programa1 END

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . programa1 END
    (2) programa1 -> . vars funcion principal
    (4) vars -> . VAR vars1
    (5) vars -> . empty
    (79) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 79 (empty -> .)
    MAIN            reduce using rule 79 (empty -> .)

    programa1                      shift and go to state 5
    vars                           shift and go to state 6
    empty                          shift and go to state 8

state 5

    (1) programa -> PROGRAM ID SEMICOLON programa1 . END

    END             shift and go to state 9


state 6

    (2) programa1 -> vars . funcion principal
    (26) funcion -> . FUNCTION tipo ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (27) funcion -> . FUNCTION VOID ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (28) funcion -> . empty
    (79) empty -> .

    FUNCTION        shift and go to state 11
    MAIN            reduce using rule 79 (empty -> .)

    funcion                        shift and go to state 10
    empty                          shift and go to state 12

state 7

    (4) vars -> VAR . vars1
    (6) vars1 -> . tipo vars2 SEMICOLON varsadd
    (12) tipo -> . INT
    (13) tipo -> . FLOAT
    (14) tipo -> . CHAR
    (15) tipo -> . STRING

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18

    vars1                          shift and go to state 13
    tipo                           shift and go to state 14

state 8

    (5) vars -> empty .

    FUNCTION        reduce using rule 5 (vars -> empty .)
    MAIN            reduce using rule 5 (vars -> empty .)
    LBRACKET        reduce using rule 5 (vars -> empty .)


state 9

    (1) programa -> PROGRAM ID SEMICOLON programa1 END .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON programa1 END .)


state 10

    (2) programa1 -> vars funcion . principal
    (3) principal -> . MAIN LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET

    MAIN            shift and go to state 20

    principal                      shift and go to state 19

state 11

    (26) funcion -> FUNCTION . tipo ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (27) funcion -> FUNCTION . VOID ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (12) tipo -> . INT
    (13) tipo -> . FLOAT
    (14) tipo -> . CHAR
    (15) tipo -> . STRING

    VOID            shift and go to state 22
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18

    tipo                           shift and go to state 21

state 12

    (28) funcion -> empty .

    MAIN            reduce using rule 28 (funcion -> empty .)


state 13

    (4) vars -> VAR vars1 .

    FUNCTION        reduce using rule 4 (vars -> VAR vars1 .)
    MAIN            reduce using rule 4 (vars -> VAR vars1 .)
    LBRACKET        reduce using rule 4 (vars -> VAR vars1 .)


state 14

    (6) vars1 -> tipo . vars2 SEMICOLON varsadd
    (7) vars2 -> . ID arr vars3

    ID              shift and go to state 24

    vars2                          shift and go to state 23

state 15

    (12) tipo -> INT .

    ID              reduce using rule 12 (tipo -> INT .)


state 16

    (13) tipo -> FLOAT .

    ID              reduce using rule 13 (tipo -> FLOAT .)


state 17

    (14) tipo -> CHAR .

    ID              reduce using rule 14 (tipo -> CHAR .)


state 18

    (15) tipo -> STRING .

    ID              reduce using rule 15 (tipo -> STRING .)


state 19

    (2) programa1 -> vars funcion principal .

    END             reduce using rule 2 (programa1 -> vars funcion principal .)


state 20

    (3) principal -> MAIN . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET

    LPARENTHESIS    shift and go to state 25


state 21

    (26) funcion -> FUNCTION tipo . ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion

    ID              shift and go to state 26


state 22

    (27) funcion -> FUNCTION VOID . ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion

    ID              shift and go to state 27


state 23

    (6) vars1 -> tipo vars2 . SEMICOLON varsadd

    SEMICOLON       shift and go to state 28


state 24

    (7) vars2 -> ID . arr vars3
    (16) arr -> . LSQRBRACKET CTEI RSQRBRACKET
    (17) arr -> . empty
    (79) empty -> .

    LSQRBRACKET     shift and go to state 30
    COMMA           reduce using rule 79 (empty -> .)
    SEMICOLON       reduce using rule 79 (empty -> .)
    RPARENTHESIS    reduce using rule 79 (empty -> .)

    arr                            shift and go to state 29
    empty                          shift and go to state 31

state 25

    (3) principal -> MAIN LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
    (18) parameters -> . parameters2
    (19) parameters -> . empty
    (20) parameters2 -> . tipo ID
    (21) parameters2 -> . tipo ID parameters3
    (79) empty -> .
    (12) tipo -> . INT
    (13) tipo -> . FLOAT
    (14) tipo -> . CHAR
    (15) tipo -> . STRING

    RPARENTHESIS    reduce using rule 79 (empty -> .)
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18

    parameters                     shift and go to state 32
    parameters2                    shift and go to state 33
    empty                          shift and go to state 34
    tipo                           shift and go to state 35

state 26

    (26) funcion -> FUNCTION tipo ID . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion

    LPARENTHESIS    shift and go to state 36


state 27

    (27) funcion -> FUNCTION VOID ID . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion

    LPARENTHESIS    shift and go to state 37


state 28

    (6) vars1 -> tipo vars2 SEMICOLON . varsadd
    (10) varsadd -> . vars1
    (11) varsadd -> . empty
    (6) vars1 -> . tipo vars2 SEMICOLON varsadd
    (79) empty -> .
    (12) tipo -> . INT
    (13) tipo -> . FLOAT
    (14) tipo -> . CHAR
    (15) tipo -> . STRING

    FUNCTION        reduce using rule 79 (empty -> .)
    MAIN            reduce using rule 79 (empty -> .)
    LBRACKET        reduce using rule 79 (empty -> .)
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18

    tipo                           shift and go to state 14
    varsadd                        shift and go to state 38
    vars1                          shift and go to state 39
    empty                          shift and go to state 40

state 29

    (7) vars2 -> ID arr . vars3
    (8) vars3 -> . COMMA vars2
    (9) vars3 -> . empty
    (79) empty -> .

    COMMA           shift and go to state 42
    SEMICOLON       reduce using rule 79 (empty -> .)
    RPARENTHESIS    reduce using rule 79 (empty -> .)

    vars3                          shift and go to state 41
    empty                          shift and go to state 43

state 30

    (16) arr -> LSQRBRACKET . CTEI RSQRBRACKET

    CTEI            shift and go to state 44


state 31

    (17) arr -> empty .

    COMMA           reduce using rule 17 (arr -> empty .)
    SEMICOLON       reduce using rule 17 (arr -> empty .)
    RPARENTHESIS    reduce using rule 17 (arr -> empty .)
    EQUALS          reduce using rule 17 (arr -> empty .)


state 32

    (3) principal -> MAIN LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto RBRACKET

    RPARENTHESIS    shift and go to state 45


state 33

    (18) parameters -> parameters2 .

    RPARENTHESIS    reduce using rule 18 (parameters -> parameters2 .)


state 34

    (19) parameters -> empty .

    RPARENTHESIS    reduce using rule 19 (parameters -> empty .)


state 35

    (20) parameters2 -> tipo . ID
    (21) parameters2 -> tipo . ID parameters3

    ID              shift and go to state 46


state 36

    (26) funcion -> FUNCTION tipo ID LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (18) parameters -> . parameters2
    (19) parameters -> . empty
    (20) parameters2 -> . tipo ID
    (21) parameters2 -> . tipo ID parameters3
    (79) empty -> .
    (12) tipo -> . INT
    (13) tipo -> . FLOAT
    (14) tipo -> . CHAR
    (15) tipo -> . STRING

    RPARENTHESIS    reduce using rule 79 (empty -> .)
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18

    tipo                           shift and go to state 35
    parameters                     shift and go to state 47
    parameters2                    shift and go to state 33
    empty                          shift and go to state 34

state 37

    (27) funcion -> FUNCTION VOID ID LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (18) parameters -> . parameters2
    (19) parameters -> . empty
    (20) parameters2 -> . tipo ID
    (21) parameters2 -> . tipo ID parameters3
    (79) empty -> .
    (12) tipo -> . INT
    (13) tipo -> . FLOAT
    (14) tipo -> . CHAR
    (15) tipo -> . STRING

    RPARENTHESIS    reduce using rule 79 (empty -> .)
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18

    parameters                     shift and go to state 48
    parameters2                    shift and go to state 33
    empty                          shift and go to state 34
    tipo                           shift and go to state 35

state 38

    (6) vars1 -> tipo vars2 SEMICOLON varsadd .

    FUNCTION        reduce using rule 6 (vars1 -> tipo vars2 SEMICOLON varsadd .)
    MAIN            reduce using rule 6 (vars1 -> tipo vars2 SEMICOLON varsadd .)
    LBRACKET        reduce using rule 6 (vars1 -> tipo vars2 SEMICOLON varsadd .)


state 39

    (10) varsadd -> vars1 .

    FUNCTION        reduce using rule 10 (varsadd -> vars1 .)
    MAIN            reduce using rule 10 (varsadd -> vars1 .)
    LBRACKET        reduce using rule 10 (varsadd -> vars1 .)


state 40

    (11) varsadd -> empty .

    FUNCTION        reduce using rule 11 (varsadd -> empty .)
    MAIN            reduce using rule 11 (varsadd -> empty .)
    LBRACKET        reduce using rule 11 (varsadd -> empty .)


state 41

    (7) vars2 -> ID arr vars3 .

    SEMICOLON       reduce using rule 7 (vars2 -> ID arr vars3 .)
    RPARENTHESIS    reduce using rule 7 (vars2 -> ID arr vars3 .)


state 42

    (8) vars3 -> COMMA . vars2
    (7) vars2 -> . ID arr vars3

    ID              shift and go to state 24

    vars2                          shift and go to state 49

state 43

    (9) vars3 -> empty .

    SEMICOLON       reduce using rule 9 (vars3 -> empty .)
    RPARENTHESIS    reduce using rule 9 (vars3 -> empty .)


state 44

    (16) arr -> LSQRBRACKET CTEI . RSQRBRACKET

    RSQRBRACKET     shift and go to state 50


state 45

    (3) principal -> MAIN LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto RBRACKET
    (4) vars -> . VAR vars1
    (5) vars -> . empty
    (79) empty -> .

    VAR             shift and go to state 7
    LBRACKET        reduce using rule 79 (empty -> .)

    vars                           shift and go to state 51
    empty                          shift and go to state 8

state 46

    (20) parameters2 -> tipo ID .
    (21) parameters2 -> tipo ID . parameters3
    (22) parameters3 -> . COMMA ID parameters3
    (23) parameters3 -> . COMMA tipo ID parameters3
    (24) parameters3 -> . COMMA ID
    (25) parameters3 -> . COMMA tipo ID

    RPARENTHESIS    reduce using rule 20 (parameters2 -> tipo ID .)
    COMMA           shift and go to state 53

    parameters3                    shift and go to state 52

state 47

    (26) funcion -> FUNCTION tipo ID LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion

    RPARENTHESIS    shift and go to state 54


state 48

    (27) funcion -> FUNCTION VOID ID LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion

    RPARENTHESIS    shift and go to state 55


state 49

    (8) vars3 -> COMMA vars2 .

    SEMICOLON       reduce using rule 8 (vars3 -> COMMA vars2 .)
    RPARENTHESIS    reduce using rule 8 (vars3 -> COMMA vars2 .)


state 50

    (16) arr -> LSQRBRACKET CTEI RSQRBRACKET .

    COMMA           reduce using rule 16 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)
    SEMICOLON       reduce using rule 16 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)
    RPARENTHESIS    reduce using rule 16 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)
    EQUALS          reduce using rule 16 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)


state 51

    (3) principal -> MAIN LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 56


state 52

    (21) parameters2 -> tipo ID parameters3 .

    RPARENTHESIS    reduce using rule 21 (parameters2 -> tipo ID parameters3 .)


state 53

    (22) parameters3 -> COMMA . ID parameters3
    (23) parameters3 -> COMMA . tipo ID parameters3
    (24) parameters3 -> COMMA . ID
    (25) parameters3 -> COMMA . tipo ID
    (12) tipo -> . INT
    (13) tipo -> . FLOAT
    (14) tipo -> . CHAR
    (15) tipo -> . STRING

    ID              shift and go to state 57
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18

    tipo                           shift and go to state 58

state 54

    (26) funcion -> FUNCTION tipo ID LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto retorno RBRACKET funcion
    (4) vars -> . VAR vars1
    (5) vars -> . empty
    (79) empty -> .

    VAR             shift and go to state 7
    LBRACKET        reduce using rule 79 (empty -> .)

    vars                           shift and go to state 59
    empty                          shift and go to state 8

state 55

    (27) funcion -> FUNCTION VOID ID LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto RBRACKET funcion
    (4) vars -> . VAR vars1
    (5) vars -> . empty
    (79) empty -> .

    VAR             shift and go to state 7
    LBRACKET        reduce using rule 79 (empty -> .)

    vars                           shift and go to state 60
    empty                          shift and go to state 8

state 56

    (3) principal -> MAIN LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto RBRACKET
    (30) estatuto -> . estatuto2 estatuto
    (31) estatuto -> . empty
    (32) estatuto2 -> . asignacion SEMICOLON
    (33) estatuto2 -> . llamada SEMICOLON
    (34) estatuto2 -> . lectura SEMICOLON
    (35) estatuto2 -> . escritura SEMICOLON
    (36) estatuto2 -> . for
    (37) estatuto2 -> . if
    (38) estatuto2 -> . while
    (79) empty -> .
    (39) asignacion -> . ID arr EQUALS expresion
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (41) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (42) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (46) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (47) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (50) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 79 (empty -> .)
    ID              shift and go to state 71
    READ            shift and go to state 72
    PRINT           shift and go to state 73
    FOR             shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76

    estatuto                       shift and go to state 61
    estatuto2                      shift and go to state 62
    empty                          shift and go to state 63
    asignacion                     shift and go to state 64
    llamada                        shift and go to state 65
    lectura                        shift and go to state 66
    escritura                      shift and go to state 67
    for                            shift and go to state 68
    if                             shift and go to state 69
    while                          shift and go to state 70

state 57

    (22) parameters3 -> COMMA ID . parameters3
    (24) parameters3 -> COMMA ID .
    (22) parameters3 -> . COMMA ID parameters3
    (23) parameters3 -> . COMMA tipo ID parameters3
    (24) parameters3 -> . COMMA ID
    (25) parameters3 -> . COMMA tipo ID

    RPARENTHESIS    reduce using rule 24 (parameters3 -> COMMA ID .)
    COMMA           shift and go to state 53

    parameters3                    shift and go to state 77

state 58

    (23) parameters3 -> COMMA tipo . ID parameters3
    (25) parameters3 -> COMMA tipo . ID

    ID              shift and go to state 78


state 59

    (26) funcion -> FUNCTION tipo ID LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto retorno RBRACKET funcion

    LBRACKET        shift and go to state 79


state 60

    (27) funcion -> FUNCTION VOID ID LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto RBRACKET funcion

    LBRACKET        shift and go to state 80


state 61

    (3) principal -> MAIN LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 81


state 62

    (30) estatuto -> estatuto2 . estatuto
    (30) estatuto -> . estatuto2 estatuto
    (31) estatuto -> . empty
    (32) estatuto2 -> . asignacion SEMICOLON
    (33) estatuto2 -> . llamada SEMICOLON
    (34) estatuto2 -> . lectura SEMICOLON
    (35) estatuto2 -> . escritura SEMICOLON
    (36) estatuto2 -> . for
    (37) estatuto2 -> . if
    (38) estatuto2 -> . while
    (79) empty -> .
    (39) asignacion -> . ID arr EQUALS expresion
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (41) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (42) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (46) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (47) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (50) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 79 (empty -> .)
    RETURN          reduce using rule 79 (empty -> .)
    ID              shift and go to state 71
    READ            shift and go to state 72
    PRINT           shift and go to state 73
    FOR             shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76

    estatuto2                      shift and go to state 62
    estatuto                       shift and go to state 82
    empty                          shift and go to state 63
    asignacion                     shift and go to state 64
    llamada                        shift and go to state 65
    lectura                        shift and go to state 66
    escritura                      shift and go to state 67
    for                            shift and go to state 68
    if                             shift and go to state 69
    while                          shift and go to state 70

state 63

    (31) estatuto -> empty .

    RBRACKET        reduce using rule 31 (estatuto -> empty .)
    RETURN          reduce using rule 31 (estatuto -> empty .)


state 64

    (32) estatuto2 -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 83


state 65

    (33) estatuto2 -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 84


state 66

    (34) estatuto2 -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 85


state 67

    (35) estatuto2 -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 86


state 68

    (36) estatuto2 -> for .

    ID              reduce using rule 36 (estatuto2 -> for .)
    READ            reduce using rule 36 (estatuto2 -> for .)
    PRINT           reduce using rule 36 (estatuto2 -> for .)
    FOR             reduce using rule 36 (estatuto2 -> for .)
    IF              reduce using rule 36 (estatuto2 -> for .)
    WHILE           reduce using rule 36 (estatuto2 -> for .)
    RBRACKET        reduce using rule 36 (estatuto2 -> for .)
    RETURN          reduce using rule 36 (estatuto2 -> for .)


state 69

    (37) estatuto2 -> if .

    ID              reduce using rule 37 (estatuto2 -> if .)
    READ            reduce using rule 37 (estatuto2 -> if .)
    PRINT           reduce using rule 37 (estatuto2 -> if .)
    FOR             reduce using rule 37 (estatuto2 -> if .)
    IF              reduce using rule 37 (estatuto2 -> if .)
    WHILE           reduce using rule 37 (estatuto2 -> if .)
    RBRACKET        reduce using rule 37 (estatuto2 -> if .)
    RETURN          reduce using rule 37 (estatuto2 -> if .)


state 70

    (38) estatuto2 -> while .

    ID              reduce using rule 38 (estatuto2 -> while .)
    READ            reduce using rule 38 (estatuto2 -> while .)
    PRINT           reduce using rule 38 (estatuto2 -> while .)
    FOR             reduce using rule 38 (estatuto2 -> while .)
    IF              reduce using rule 38 (estatuto2 -> while .)
    WHILE           reduce using rule 38 (estatuto2 -> while .)
    RBRACKET        reduce using rule 38 (estatuto2 -> while .)
    RETURN          reduce using rule 38 (estatuto2 -> while .)


state 71

    (39) asignacion -> ID . arr EQUALS expresion
    (40) llamada -> ID . LPARENTHESIS expresion RPARENTHESIS
    (16) arr -> . LSQRBRACKET CTEI RSQRBRACKET
    (17) arr -> . empty
    (79) empty -> .

    LPARENTHESIS    shift and go to state 88
    LSQRBRACKET     shift and go to state 30
    EQUALS          reduce using rule 79 (empty -> .)

    arr                            shift and go to state 87
    empty                          shift and go to state 31

state 72

    (41) lectura -> READ . LPARENTHESIS vars2 RPARENTHESIS

    LPARENTHESIS    shift and go to state 89


state 73

    (42) escritura -> PRINT . LPARENTHESIS escritura1 RPARENTHESIS

    LPARENTHESIS    shift and go to state 90


state 74

    (46) for -> FOR . LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    LPARENTHESIS    shift and go to state 91


state 75

    (47) if -> IF . LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else

    LPARENTHESIS    shift and go to state 92


state 76

    (50) while -> WHILE . LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    LPARENTHESIS    shift and go to state 93


state 77

    (22) parameters3 -> COMMA ID parameters3 .

    RPARENTHESIS    reduce using rule 22 (parameters3 -> COMMA ID parameters3 .)


state 78

    (23) parameters3 -> COMMA tipo ID . parameters3
    (25) parameters3 -> COMMA tipo ID .
    (22) parameters3 -> . COMMA ID parameters3
    (23) parameters3 -> . COMMA tipo ID parameters3
    (24) parameters3 -> . COMMA ID
    (25) parameters3 -> . COMMA tipo ID

    RPARENTHESIS    reduce using rule 25 (parameters3 -> COMMA tipo ID .)
    COMMA           shift and go to state 53

    parameters3                    shift and go to state 94

state 79

    (26) funcion -> FUNCTION tipo ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto retorno RBRACKET funcion
    (30) estatuto -> . estatuto2 estatuto
    (31) estatuto -> . empty
    (32) estatuto2 -> . asignacion SEMICOLON
    (33) estatuto2 -> . llamada SEMICOLON
    (34) estatuto2 -> . lectura SEMICOLON
    (35) estatuto2 -> . escritura SEMICOLON
    (36) estatuto2 -> . for
    (37) estatuto2 -> . if
    (38) estatuto2 -> . while
    (79) empty -> .
    (39) asignacion -> . ID arr EQUALS expresion
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (41) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (42) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (46) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (47) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (50) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RETURN          reduce using rule 79 (empty -> .)
    ID              shift and go to state 71
    READ            shift and go to state 72
    PRINT           shift and go to state 73
    FOR             shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76

    estatuto                       shift and go to state 95
    estatuto2                      shift and go to state 62
    empty                          shift and go to state 63
    asignacion                     shift and go to state 64
    llamada                        shift and go to state 65
    lectura                        shift and go to state 66
    escritura                      shift and go to state 67
    for                            shift and go to state 68
    if                             shift and go to state 69
    while                          shift and go to state 70

state 80

    (27) funcion -> FUNCTION VOID ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto RBRACKET funcion
    (30) estatuto -> . estatuto2 estatuto
    (31) estatuto -> . empty
    (32) estatuto2 -> . asignacion SEMICOLON
    (33) estatuto2 -> . llamada SEMICOLON
    (34) estatuto2 -> . lectura SEMICOLON
    (35) estatuto2 -> . escritura SEMICOLON
    (36) estatuto2 -> . for
    (37) estatuto2 -> . if
    (38) estatuto2 -> . while
    (79) empty -> .
    (39) asignacion -> . ID arr EQUALS expresion
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (41) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (42) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (46) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (47) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (50) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 79 (empty -> .)
    ID              shift and go to state 71
    READ            shift and go to state 72
    PRINT           shift and go to state 73
    FOR             shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76

    estatuto                       shift and go to state 96
    estatuto2                      shift and go to state 62
    empty                          shift and go to state 63
    asignacion                     shift and go to state 64
    llamada                        shift and go to state 65
    lectura                        shift and go to state 66
    escritura                      shift and go to state 67
    for                            shift and go to state 68
    if                             shift and go to state 69
    while                          shift and go to state 70

state 81

    (3) principal -> MAIN LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET .

    END             reduce using rule 3 (principal -> MAIN LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET .)


state 82

    (30) estatuto -> estatuto2 estatuto .

    RBRACKET        reduce using rule 30 (estatuto -> estatuto2 estatuto .)
    RETURN          reduce using rule 30 (estatuto -> estatuto2 estatuto .)


state 83

    (32) estatuto2 -> asignacion SEMICOLON .

    ID              reduce using rule 32 (estatuto2 -> asignacion SEMICOLON .)
    READ            reduce using rule 32 (estatuto2 -> asignacion SEMICOLON .)
    PRINT           reduce using rule 32 (estatuto2 -> asignacion SEMICOLON .)
    FOR             reduce using rule 32 (estatuto2 -> asignacion SEMICOLON .)
    IF              reduce using rule 32 (estatuto2 -> asignacion SEMICOLON .)
    WHILE           reduce using rule 32 (estatuto2 -> asignacion SEMICOLON .)
    RBRACKET        reduce using rule 32 (estatuto2 -> asignacion SEMICOLON .)
    RETURN          reduce using rule 32 (estatuto2 -> asignacion SEMICOLON .)


state 84

    (33) estatuto2 -> llamada SEMICOLON .

    ID              reduce using rule 33 (estatuto2 -> llamada SEMICOLON .)
    READ            reduce using rule 33 (estatuto2 -> llamada SEMICOLON .)
    PRINT           reduce using rule 33 (estatuto2 -> llamada SEMICOLON .)
    FOR             reduce using rule 33 (estatuto2 -> llamada SEMICOLON .)
    IF              reduce using rule 33 (estatuto2 -> llamada SEMICOLON .)
    WHILE           reduce using rule 33 (estatuto2 -> llamada SEMICOLON .)
    RBRACKET        reduce using rule 33 (estatuto2 -> llamada SEMICOLON .)
    RETURN          reduce using rule 33 (estatuto2 -> llamada SEMICOLON .)


state 85

    (34) estatuto2 -> lectura SEMICOLON .

    ID              reduce using rule 34 (estatuto2 -> lectura SEMICOLON .)
    READ            reduce using rule 34 (estatuto2 -> lectura SEMICOLON .)
    PRINT           reduce using rule 34 (estatuto2 -> lectura SEMICOLON .)
    FOR             reduce using rule 34 (estatuto2 -> lectura SEMICOLON .)
    IF              reduce using rule 34 (estatuto2 -> lectura SEMICOLON .)
    WHILE           reduce using rule 34 (estatuto2 -> lectura SEMICOLON .)
    RBRACKET        reduce using rule 34 (estatuto2 -> lectura SEMICOLON .)
    RETURN          reduce using rule 34 (estatuto2 -> lectura SEMICOLON .)


state 86

    (35) estatuto2 -> escritura SEMICOLON .

    ID              reduce using rule 35 (estatuto2 -> escritura SEMICOLON .)
    READ            reduce using rule 35 (estatuto2 -> escritura SEMICOLON .)
    PRINT           reduce using rule 35 (estatuto2 -> escritura SEMICOLON .)
    FOR             reduce using rule 35 (estatuto2 -> escritura SEMICOLON .)
    IF              reduce using rule 35 (estatuto2 -> escritura SEMICOLON .)
    WHILE           reduce using rule 35 (estatuto2 -> escritura SEMICOLON .)
    RBRACKET        reduce using rule 35 (estatuto2 -> escritura SEMICOLON .)
    RETURN          reduce using rule 35 (estatuto2 -> escritura SEMICOLON .)


state 87

    (39) asignacion -> ID arr . EQUALS expresion

    EQUALS          shift and go to state 97


state 88

    (40) llamada -> ID LPARENTHESIS . expresion RPARENTHESIS
    (51) expresion -> . nexp expresion1
    (54) nexp -> . comexp nexp1
    (57) comexp -> . sumexp compex1
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    expresion                      shift and go to state 100
    nexp                           shift and go to state 101
    comexp                         shift and go to state 102
    sumexp                         shift and go to state 103
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 89

    (41) lectura -> READ LPARENTHESIS . vars2 RPARENTHESIS
    (7) vars2 -> . ID arr vars3

    ID              shift and go to state 24

    vars2                          shift and go to state 111

state 90

    (42) escritura -> PRINT LPARENTHESIS . escritura1 RPARENTHESIS
    (43) escritura1 -> . expresion escritura2
    (51) expresion -> . nexp expresion1
    (54) nexp -> . comexp nexp1
    (57) comexp -> . sumexp compex1
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    escritura1                     shift and go to state 112
    expresion                      shift and go to state 113
    nexp                           shift and go to state 101
    comexp                         shift and go to state 102
    sumexp                         shift and go to state 103
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 91

    (46) for -> FOR LPARENTHESIS . FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    FROM            shift and go to state 114


state 92

    (47) if -> IF LPARENTHESIS . expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (51) expresion -> . nexp expresion1
    (54) nexp -> . comexp nexp1
    (57) comexp -> . sumexp compex1
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    expresion                      shift and go to state 115
    nexp                           shift and go to state 101
    comexp                         shift and go to state 102
    sumexp                         shift and go to state 103
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 93

    (50) while -> WHILE LPARENTHESIS . expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (51) expresion -> . nexp expresion1
    (54) nexp -> . comexp nexp1
    (57) comexp -> . sumexp compex1
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    expresion                      shift and go to state 116
    nexp                           shift and go to state 101
    comexp                         shift and go to state 102
    sumexp                         shift and go to state 103
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 94

    (23) parameters3 -> COMMA tipo ID parameters3 .

    RPARENTHESIS    reduce using rule 23 (parameters3 -> COMMA tipo ID parameters3 .)


state 95

    (26) funcion -> FUNCTION tipo ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . retorno RBRACKET funcion
    (29) retorno -> . RETURN ID SEMICOLON

    RETURN          shift and go to state 118

    retorno                        shift and go to state 117

state 96

    (27) funcion -> FUNCTION VOID ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . RBRACKET funcion

    RBRACKET        shift and go to state 119


state 97

    (39) asignacion -> ID arr EQUALS . expresion
    (51) expresion -> . nexp expresion1
    (54) nexp -> . comexp nexp1
    (57) comexp -> . sumexp compex1
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    expresion                      shift and go to state 120
    nexp                           shift and go to state 101
    comexp                         shift and go to state 102
    sumexp                         shift and go to state 103
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 98

    (77) pexp -> ID .
    (40) llamada -> ID . LPARENTHESIS expresion RPARENTHESIS

    MULTIPLICATION  reduce using rule 77 (pexp -> ID .)
    DIVISION        reduce using rule 77 (pexp -> ID .)
    PLUS            reduce using rule 77 (pexp -> ID .)
    MINUS           reduce using rule 77 (pexp -> ID .)
    GTHAN           reduce using rule 77 (pexp -> ID .)
    LTHAN           reduce using rule 77 (pexp -> ID .)
    GTHANEQ         reduce using rule 77 (pexp -> ID .)
    LTHANEQ         reduce using rule 77 (pexp -> ID .)
    DIFFERENT       reduce using rule 77 (pexp -> ID .)
    AND             reduce using rule 77 (pexp -> ID .)
    OR              reduce using rule 77 (pexp -> ID .)
    RPARENTHESIS    reduce using rule 77 (pexp -> ID .)
    COMMA           reduce using rule 77 (pexp -> ID .)
    SEMICOLON       reduce using rule 77 (pexp -> ID .)
    LPARENTHESIS    shift and go to state 88


state 99

    (78) pexp -> LPARENTHESIS . expresion RPARENTHESIS
    (51) expresion -> . nexp expresion1
    (54) nexp -> . comexp nexp1
    (57) comexp -> . sumexp compex1
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    expresion                      shift and go to state 121
    nexp                           shift and go to state 101
    comexp                         shift and go to state 102
    sumexp                         shift and go to state 103
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 100

    (40) llamada -> ID LPARENTHESIS expresion . RPARENTHESIS

    RPARENTHESIS    shift and go to state 122


state 101

    (51) expresion -> nexp . expresion1
    (52) expresion1 -> . OR expresion
    (53) expresion1 -> . empty
    (79) empty -> .

    OR              shift and go to state 124
    RPARENTHESIS    reduce using rule 79 (empty -> .)
    COMMA           reduce using rule 79 (empty -> .)
    SEMICOLON       reduce using rule 79 (empty -> .)

    expresion1                     shift and go to state 123
    empty                          shift and go to state 125

state 102

    (54) nexp -> comexp . nexp1
    (55) nexp1 -> . AND nexp
    (56) nexp1 -> . empty
    (79) empty -> .

    AND             shift and go to state 127
    OR              reduce using rule 79 (empty -> .)
    RPARENTHESIS    reduce using rule 79 (empty -> .)
    COMMA           reduce using rule 79 (empty -> .)
    SEMICOLON       reduce using rule 79 (empty -> .)

    nexp1                          shift and go to state 126
    empty                          shift and go to state 128

state 103

    (57) comexp -> sumexp . compex1
    (58) compex1 -> . GTHAN sumexp
    (59) compex1 -> . LTHAN sumexp
    (60) compex1 -> . GTHANEQ sumexp
    (61) compex1 -> . LTHANEQ sumexp
    (62) compex1 -> . DIFFERENT sumexp
    (63) compex1 -> . empty
    (79) empty -> .

    GTHAN           shift and go to state 130
    LTHAN           shift and go to state 131
    GTHANEQ         shift and go to state 132
    LTHANEQ         shift and go to state 133
    DIFFERENT       shift and go to state 134
    AND             reduce using rule 79 (empty -> .)
    OR              reduce using rule 79 (empty -> .)
    RPARENTHESIS    reduce using rule 79 (empty -> .)
    COMMA           reduce using rule 79 (empty -> .)
    SEMICOLON       reduce using rule 79 (empty -> .)

    compex1                        shift and go to state 129
    empty                          shift and go to state 135

state 104

    (64) sumexp -> mulexp . sumexp1
    (65) sumexp1 -> . PLUS sumexp
    (66) sumexp1 -> . MINUS sumexp
    (67) sumexp1 -> . empty
    (79) empty -> .

    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    GTHAN           reduce using rule 79 (empty -> .)
    LTHAN           reduce using rule 79 (empty -> .)
    GTHANEQ         reduce using rule 79 (empty -> .)
    LTHANEQ         reduce using rule 79 (empty -> .)
    DIFFERENT       reduce using rule 79 (empty -> .)
    AND             reduce using rule 79 (empty -> .)
    OR              reduce using rule 79 (empty -> .)
    RPARENTHESIS    reduce using rule 79 (empty -> .)
    COMMA           reduce using rule 79 (empty -> .)
    SEMICOLON       reduce using rule 79 (empty -> .)

    sumexp1                        shift and go to state 136
    empty                          shift and go to state 139

state 105

    (68) mulexp -> pexp . mulexp1
    (69) mulexp1 -> . MULTIPLICATION mulexp
    (70) mulexp1 -> . DIVISION mulexp
    (71) mulexp1 -> . empty
    (79) empty -> .

    MULTIPLICATION  shift and go to state 141
    DIVISION        shift and go to state 142
    PLUS            reduce using rule 79 (empty -> .)
    MINUS           reduce using rule 79 (empty -> .)
    GTHAN           reduce using rule 79 (empty -> .)
    LTHAN           reduce using rule 79 (empty -> .)
    GTHANEQ         reduce using rule 79 (empty -> .)
    LTHANEQ         reduce using rule 79 (empty -> .)
    DIFFERENT       reduce using rule 79 (empty -> .)
    AND             reduce using rule 79 (empty -> .)
    OR              reduce using rule 79 (empty -> .)
    RPARENTHESIS    reduce using rule 79 (empty -> .)
    COMMA           reduce using rule 79 (empty -> .)
    SEMICOLON       reduce using rule 79 (empty -> .)

    mulexp1                        shift and go to state 140
    empty                          shift and go to state 143

state 106

    (72) pexp -> CTEI .

    MULTIPLICATION  reduce using rule 72 (pexp -> CTEI .)
    DIVISION        reduce using rule 72 (pexp -> CTEI .)
    PLUS            reduce using rule 72 (pexp -> CTEI .)
    MINUS           reduce using rule 72 (pexp -> CTEI .)
    GTHAN           reduce using rule 72 (pexp -> CTEI .)
    LTHAN           reduce using rule 72 (pexp -> CTEI .)
    GTHANEQ         reduce using rule 72 (pexp -> CTEI .)
    LTHANEQ         reduce using rule 72 (pexp -> CTEI .)
    DIFFERENT       reduce using rule 72 (pexp -> CTEI .)
    AND             reduce using rule 72 (pexp -> CTEI .)
    OR              reduce using rule 72 (pexp -> CTEI .)
    RPARENTHESIS    reduce using rule 72 (pexp -> CTEI .)
    COMMA           reduce using rule 72 (pexp -> CTEI .)
    SEMICOLON       reduce using rule 72 (pexp -> CTEI .)


state 107

    (73) pexp -> CTEF .

    MULTIPLICATION  reduce using rule 73 (pexp -> CTEF .)
    DIVISION        reduce using rule 73 (pexp -> CTEF .)
    PLUS            reduce using rule 73 (pexp -> CTEF .)
    MINUS           reduce using rule 73 (pexp -> CTEF .)
    GTHAN           reduce using rule 73 (pexp -> CTEF .)
    LTHAN           reduce using rule 73 (pexp -> CTEF .)
    GTHANEQ         reduce using rule 73 (pexp -> CTEF .)
    LTHANEQ         reduce using rule 73 (pexp -> CTEF .)
    DIFFERENT       reduce using rule 73 (pexp -> CTEF .)
    AND             reduce using rule 73 (pexp -> CTEF .)
    OR              reduce using rule 73 (pexp -> CTEF .)
    RPARENTHESIS    reduce using rule 73 (pexp -> CTEF .)
    COMMA           reduce using rule 73 (pexp -> CTEF .)
    SEMICOLON       reduce using rule 73 (pexp -> CTEF .)


state 108

    (74) pexp -> CTEC .

    MULTIPLICATION  reduce using rule 74 (pexp -> CTEC .)
    DIVISION        reduce using rule 74 (pexp -> CTEC .)
    PLUS            reduce using rule 74 (pexp -> CTEC .)
    MINUS           reduce using rule 74 (pexp -> CTEC .)
    GTHAN           reduce using rule 74 (pexp -> CTEC .)
    LTHAN           reduce using rule 74 (pexp -> CTEC .)
    GTHANEQ         reduce using rule 74 (pexp -> CTEC .)
    LTHANEQ         reduce using rule 74 (pexp -> CTEC .)
    DIFFERENT       reduce using rule 74 (pexp -> CTEC .)
    AND             reduce using rule 74 (pexp -> CTEC .)
    OR              reduce using rule 74 (pexp -> CTEC .)
    RPARENTHESIS    reduce using rule 74 (pexp -> CTEC .)
    COMMA           reduce using rule 74 (pexp -> CTEC .)
    SEMICOLON       reduce using rule 74 (pexp -> CTEC .)


state 109

    (75) pexp -> CTESTRING .

    MULTIPLICATION  reduce using rule 75 (pexp -> CTESTRING .)
    DIVISION        reduce using rule 75 (pexp -> CTESTRING .)
    PLUS            reduce using rule 75 (pexp -> CTESTRING .)
    MINUS           reduce using rule 75 (pexp -> CTESTRING .)
    GTHAN           reduce using rule 75 (pexp -> CTESTRING .)
    LTHAN           reduce using rule 75 (pexp -> CTESTRING .)
    GTHANEQ         reduce using rule 75 (pexp -> CTESTRING .)
    LTHANEQ         reduce using rule 75 (pexp -> CTESTRING .)
    DIFFERENT       reduce using rule 75 (pexp -> CTESTRING .)
    AND             reduce using rule 75 (pexp -> CTESTRING .)
    OR              reduce using rule 75 (pexp -> CTESTRING .)
    RPARENTHESIS    reduce using rule 75 (pexp -> CTESTRING .)
    COMMA           reduce using rule 75 (pexp -> CTESTRING .)
    SEMICOLON       reduce using rule 75 (pexp -> CTESTRING .)


state 110

    (76) pexp -> llamada .

    MULTIPLICATION  reduce using rule 76 (pexp -> llamada .)
    DIVISION        reduce using rule 76 (pexp -> llamada .)
    PLUS            reduce using rule 76 (pexp -> llamada .)
    MINUS           reduce using rule 76 (pexp -> llamada .)
    GTHAN           reduce using rule 76 (pexp -> llamada .)
    LTHAN           reduce using rule 76 (pexp -> llamada .)
    GTHANEQ         reduce using rule 76 (pexp -> llamada .)
    LTHANEQ         reduce using rule 76 (pexp -> llamada .)
    DIFFERENT       reduce using rule 76 (pexp -> llamada .)
    AND             reduce using rule 76 (pexp -> llamada .)
    OR              reduce using rule 76 (pexp -> llamada .)
    RPARENTHESIS    reduce using rule 76 (pexp -> llamada .)
    COMMA           reduce using rule 76 (pexp -> llamada .)
    SEMICOLON       reduce using rule 76 (pexp -> llamada .)


state 111

    (41) lectura -> READ LPARENTHESIS vars2 . RPARENTHESIS

    RPARENTHESIS    shift and go to state 144


state 112

    (42) escritura -> PRINT LPARENTHESIS escritura1 . RPARENTHESIS

    RPARENTHESIS    shift and go to state 145


state 113

    (43) escritura1 -> expresion . escritura2
    (44) escritura2 -> . COMMA escritura1
    (45) escritura2 -> . empty
    (79) empty -> .

    COMMA           shift and go to state 147
    RPARENTHESIS    reduce using rule 79 (empty -> .)

    escritura2                     shift and go to state 146
    empty                          shift and go to state 148

state 114

    (46) for -> FOR LPARENTHESIS FROM . asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (39) asignacion -> . ID arr EQUALS expresion

    ID              shift and go to state 150

    asignacion                     shift and go to state 149

state 115

    (47) if -> IF LPARENTHESIS expresion . RPARENTHESIS THEN LBRACKET estatuto RBRACKET else

    RPARENTHESIS    shift and go to state 151


state 116

    (50) while -> WHILE LPARENTHESIS expresion . RPARENTHESIS LBRACKET estatuto RBRACKET

    RPARENTHESIS    shift and go to state 152


state 117

    (26) funcion -> FUNCTION tipo ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno . RBRACKET funcion

    RBRACKET        shift and go to state 153


state 118

    (29) retorno -> RETURN . ID SEMICOLON

    ID              shift and go to state 154


state 119

    (27) funcion -> FUNCTION VOID ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET . funcion
    (26) funcion -> . FUNCTION tipo ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (27) funcion -> . FUNCTION VOID ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (28) funcion -> . empty
    (79) empty -> .

    FUNCTION        shift and go to state 11
    MAIN            reduce using rule 79 (empty -> .)

    funcion                        shift and go to state 155
    empty                          shift and go to state 12

state 120

    (39) asignacion -> ID arr EQUALS expresion .

    SEMICOLON       reduce using rule 39 (asignacion -> ID arr EQUALS expresion .)
    COMMA           reduce using rule 39 (asignacion -> ID arr EQUALS expresion .)


state 121

    (78) pexp -> LPARENTHESIS expresion . RPARENTHESIS

    RPARENTHESIS    shift and go to state 156


state 122

    (40) llamada -> ID LPARENTHESIS expresion RPARENTHESIS .

    SEMICOLON       reduce using rule 40 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    MULTIPLICATION  reduce using rule 40 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    DIVISION        reduce using rule 40 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    PLUS            reduce using rule 40 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    MINUS           reduce using rule 40 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    GTHAN           reduce using rule 40 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    LTHAN           reduce using rule 40 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    GTHANEQ         reduce using rule 40 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    LTHANEQ         reduce using rule 40 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    DIFFERENT       reduce using rule 40 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    AND             reduce using rule 40 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    OR              reduce using rule 40 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 40 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    COMMA           reduce using rule 40 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)


state 123

    (51) expresion -> nexp expresion1 .

    RPARENTHESIS    reduce using rule 51 (expresion -> nexp expresion1 .)
    COMMA           reduce using rule 51 (expresion -> nexp expresion1 .)
    SEMICOLON       reduce using rule 51 (expresion -> nexp expresion1 .)


state 124

    (52) expresion1 -> OR . expresion
    (51) expresion -> . nexp expresion1
    (54) nexp -> . comexp nexp1
    (57) comexp -> . sumexp compex1
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    expresion                      shift and go to state 157
    nexp                           shift and go to state 101
    comexp                         shift and go to state 102
    sumexp                         shift and go to state 103
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 125

    (53) expresion1 -> empty .

    RPARENTHESIS    reduce using rule 53 (expresion1 -> empty .)
    COMMA           reduce using rule 53 (expresion1 -> empty .)
    SEMICOLON       reduce using rule 53 (expresion1 -> empty .)


state 126

    (54) nexp -> comexp nexp1 .

    OR              reduce using rule 54 (nexp -> comexp nexp1 .)
    RPARENTHESIS    reduce using rule 54 (nexp -> comexp nexp1 .)
    COMMA           reduce using rule 54 (nexp -> comexp nexp1 .)
    SEMICOLON       reduce using rule 54 (nexp -> comexp nexp1 .)


state 127

    (55) nexp1 -> AND . nexp
    (54) nexp -> . comexp nexp1
    (57) comexp -> . sumexp compex1
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    nexp                           shift and go to state 158
    comexp                         shift and go to state 102
    sumexp                         shift and go to state 103
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 128

    (56) nexp1 -> empty .

    OR              reduce using rule 56 (nexp1 -> empty .)
    RPARENTHESIS    reduce using rule 56 (nexp1 -> empty .)
    COMMA           reduce using rule 56 (nexp1 -> empty .)
    SEMICOLON       reduce using rule 56 (nexp1 -> empty .)


state 129

    (57) comexp -> sumexp compex1 .

    AND             reduce using rule 57 (comexp -> sumexp compex1 .)
    OR              reduce using rule 57 (comexp -> sumexp compex1 .)
    RPARENTHESIS    reduce using rule 57 (comexp -> sumexp compex1 .)
    COMMA           reduce using rule 57 (comexp -> sumexp compex1 .)
    SEMICOLON       reduce using rule 57 (comexp -> sumexp compex1 .)


state 130

    (58) compex1 -> GTHAN . sumexp
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    sumexp                         shift and go to state 159
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 131

    (59) compex1 -> LTHAN . sumexp
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    sumexp                         shift and go to state 160
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 132

    (60) compex1 -> GTHANEQ . sumexp
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    sumexp                         shift and go to state 161
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 133

    (61) compex1 -> LTHANEQ . sumexp
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    sumexp                         shift and go to state 162
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 134

    (62) compex1 -> DIFFERENT . sumexp
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    sumexp                         shift and go to state 163
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 135

    (63) compex1 -> empty .

    AND             reduce using rule 63 (compex1 -> empty .)
    OR              reduce using rule 63 (compex1 -> empty .)
    RPARENTHESIS    reduce using rule 63 (compex1 -> empty .)
    COMMA           reduce using rule 63 (compex1 -> empty .)
    SEMICOLON       reduce using rule 63 (compex1 -> empty .)


state 136

    (64) sumexp -> mulexp sumexp1 .

    GTHAN           reduce using rule 64 (sumexp -> mulexp sumexp1 .)
    LTHAN           reduce using rule 64 (sumexp -> mulexp sumexp1 .)
    GTHANEQ         reduce using rule 64 (sumexp -> mulexp sumexp1 .)
    LTHANEQ         reduce using rule 64 (sumexp -> mulexp sumexp1 .)
    DIFFERENT       reduce using rule 64 (sumexp -> mulexp sumexp1 .)
    AND             reduce using rule 64 (sumexp -> mulexp sumexp1 .)
    OR              reduce using rule 64 (sumexp -> mulexp sumexp1 .)
    RPARENTHESIS    reduce using rule 64 (sumexp -> mulexp sumexp1 .)
    COMMA           reduce using rule 64 (sumexp -> mulexp sumexp1 .)
    SEMICOLON       reduce using rule 64 (sumexp -> mulexp sumexp1 .)


state 137

    (65) sumexp1 -> PLUS . sumexp
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    sumexp                         shift and go to state 164
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 138

    (66) sumexp1 -> MINUS . sumexp
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    sumexp                         shift and go to state 165
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 139

    (67) sumexp1 -> empty .

    GTHAN           reduce using rule 67 (sumexp1 -> empty .)
    LTHAN           reduce using rule 67 (sumexp1 -> empty .)
    GTHANEQ         reduce using rule 67 (sumexp1 -> empty .)
    LTHANEQ         reduce using rule 67 (sumexp1 -> empty .)
    DIFFERENT       reduce using rule 67 (sumexp1 -> empty .)
    AND             reduce using rule 67 (sumexp1 -> empty .)
    OR              reduce using rule 67 (sumexp1 -> empty .)
    RPARENTHESIS    reduce using rule 67 (sumexp1 -> empty .)
    COMMA           reduce using rule 67 (sumexp1 -> empty .)
    SEMICOLON       reduce using rule 67 (sumexp1 -> empty .)


state 140

    (68) mulexp -> pexp mulexp1 .

    PLUS            reduce using rule 68 (mulexp -> pexp mulexp1 .)
    MINUS           reduce using rule 68 (mulexp -> pexp mulexp1 .)
    GTHAN           reduce using rule 68 (mulexp -> pexp mulexp1 .)
    LTHAN           reduce using rule 68 (mulexp -> pexp mulexp1 .)
    GTHANEQ         reduce using rule 68 (mulexp -> pexp mulexp1 .)
    LTHANEQ         reduce using rule 68 (mulexp -> pexp mulexp1 .)
    DIFFERENT       reduce using rule 68 (mulexp -> pexp mulexp1 .)
    AND             reduce using rule 68 (mulexp -> pexp mulexp1 .)
    OR              reduce using rule 68 (mulexp -> pexp mulexp1 .)
    RPARENTHESIS    reduce using rule 68 (mulexp -> pexp mulexp1 .)
    COMMA           reduce using rule 68 (mulexp -> pexp mulexp1 .)
    SEMICOLON       reduce using rule 68 (mulexp -> pexp mulexp1 .)


state 141

    (69) mulexp1 -> MULTIPLICATION . mulexp
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    mulexp                         shift and go to state 166
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 142

    (70) mulexp1 -> DIVISION . mulexp
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    mulexp                         shift and go to state 167
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 143

    (71) mulexp1 -> empty .

    PLUS            reduce using rule 71 (mulexp1 -> empty .)
    MINUS           reduce using rule 71 (mulexp1 -> empty .)
    GTHAN           reduce using rule 71 (mulexp1 -> empty .)
    LTHAN           reduce using rule 71 (mulexp1 -> empty .)
    GTHANEQ         reduce using rule 71 (mulexp1 -> empty .)
    LTHANEQ         reduce using rule 71 (mulexp1 -> empty .)
    DIFFERENT       reduce using rule 71 (mulexp1 -> empty .)
    AND             reduce using rule 71 (mulexp1 -> empty .)
    OR              reduce using rule 71 (mulexp1 -> empty .)
    RPARENTHESIS    reduce using rule 71 (mulexp1 -> empty .)
    COMMA           reduce using rule 71 (mulexp1 -> empty .)
    SEMICOLON       reduce using rule 71 (mulexp1 -> empty .)


state 144

    (41) lectura -> READ LPARENTHESIS vars2 RPARENTHESIS .

    SEMICOLON       reduce using rule 41 (lectura -> READ LPARENTHESIS vars2 RPARENTHESIS .)


state 145

    (42) escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS .

    SEMICOLON       reduce using rule 42 (escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS .)


state 146

    (43) escritura1 -> expresion escritura2 .

    RPARENTHESIS    reduce using rule 43 (escritura1 -> expresion escritura2 .)


state 147

    (44) escritura2 -> COMMA . escritura1
    (43) escritura1 -> . expresion escritura2
    (51) expresion -> . nexp expresion1
    (54) nexp -> . comexp nexp1
    (57) comexp -> . sumexp compex1
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    escritura1                     shift and go to state 168
    expresion                      shift and go to state 113
    nexp                           shift and go to state 101
    comexp                         shift and go to state 102
    sumexp                         shift and go to state 103
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 148

    (45) escritura2 -> empty .

    RPARENTHESIS    reduce using rule 45 (escritura2 -> empty .)


state 149

    (46) for -> FOR LPARENTHESIS FROM asignacion . COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    COMMA           shift and go to state 169


state 150

    (39) asignacion -> ID . arr EQUALS expresion
    (16) arr -> . LSQRBRACKET CTEI RSQRBRACKET
    (17) arr -> . empty
    (79) empty -> .

    LSQRBRACKET     shift and go to state 30
    EQUALS          reduce using rule 79 (empty -> .)

    arr                            shift and go to state 87
    empty                          shift and go to state 31

state 151

    (47) if -> IF LPARENTHESIS expresion RPARENTHESIS . THEN LBRACKET estatuto RBRACKET else

    THEN            shift and go to state 170


state 152

    (50) while -> WHILE LPARENTHESIS expresion RPARENTHESIS . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 171


state 153

    (26) funcion -> FUNCTION tipo ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET . funcion
    (26) funcion -> . FUNCTION tipo ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (27) funcion -> . FUNCTION VOID ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (28) funcion -> . empty
    (79) empty -> .

    FUNCTION        shift and go to state 11
    MAIN            reduce using rule 79 (empty -> .)

    funcion                        shift and go to state 172
    empty                          shift and go to state 12

state 154

    (29) retorno -> RETURN ID . SEMICOLON

    SEMICOLON       shift and go to state 173


state 155

    (27) funcion -> FUNCTION VOID ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion .

    MAIN            reduce using rule 27 (funcion -> FUNCTION VOID ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion .)


state 156

    (78) pexp -> LPARENTHESIS expresion RPARENTHESIS .

    MULTIPLICATION  reduce using rule 78 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    DIVISION        reduce using rule 78 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    PLUS            reduce using rule 78 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    MINUS           reduce using rule 78 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    GTHAN           reduce using rule 78 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    LTHAN           reduce using rule 78 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    GTHANEQ         reduce using rule 78 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    LTHANEQ         reduce using rule 78 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    DIFFERENT       reduce using rule 78 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    AND             reduce using rule 78 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    OR              reduce using rule 78 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 78 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    COMMA           reduce using rule 78 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    SEMICOLON       reduce using rule 78 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)


state 157

    (52) expresion1 -> OR expresion .

    RPARENTHESIS    reduce using rule 52 (expresion1 -> OR expresion .)
    COMMA           reduce using rule 52 (expresion1 -> OR expresion .)
    SEMICOLON       reduce using rule 52 (expresion1 -> OR expresion .)


state 158

    (55) nexp1 -> AND nexp .

    OR              reduce using rule 55 (nexp1 -> AND nexp .)
    RPARENTHESIS    reduce using rule 55 (nexp1 -> AND nexp .)
    COMMA           reduce using rule 55 (nexp1 -> AND nexp .)
    SEMICOLON       reduce using rule 55 (nexp1 -> AND nexp .)


state 159

    (58) compex1 -> GTHAN sumexp .

    AND             reduce using rule 58 (compex1 -> GTHAN sumexp .)
    OR              reduce using rule 58 (compex1 -> GTHAN sumexp .)
    RPARENTHESIS    reduce using rule 58 (compex1 -> GTHAN sumexp .)
    COMMA           reduce using rule 58 (compex1 -> GTHAN sumexp .)
    SEMICOLON       reduce using rule 58 (compex1 -> GTHAN sumexp .)


state 160

    (59) compex1 -> LTHAN sumexp .

    AND             reduce using rule 59 (compex1 -> LTHAN sumexp .)
    OR              reduce using rule 59 (compex1 -> LTHAN sumexp .)
    RPARENTHESIS    reduce using rule 59 (compex1 -> LTHAN sumexp .)
    COMMA           reduce using rule 59 (compex1 -> LTHAN sumexp .)
    SEMICOLON       reduce using rule 59 (compex1 -> LTHAN sumexp .)


state 161

    (60) compex1 -> GTHANEQ sumexp .

    AND             reduce using rule 60 (compex1 -> GTHANEQ sumexp .)
    OR              reduce using rule 60 (compex1 -> GTHANEQ sumexp .)
    RPARENTHESIS    reduce using rule 60 (compex1 -> GTHANEQ sumexp .)
    COMMA           reduce using rule 60 (compex1 -> GTHANEQ sumexp .)
    SEMICOLON       reduce using rule 60 (compex1 -> GTHANEQ sumexp .)


state 162

    (61) compex1 -> LTHANEQ sumexp .

    AND             reduce using rule 61 (compex1 -> LTHANEQ sumexp .)
    OR              reduce using rule 61 (compex1 -> LTHANEQ sumexp .)
    RPARENTHESIS    reduce using rule 61 (compex1 -> LTHANEQ sumexp .)
    COMMA           reduce using rule 61 (compex1 -> LTHANEQ sumexp .)
    SEMICOLON       reduce using rule 61 (compex1 -> LTHANEQ sumexp .)


state 163

    (62) compex1 -> DIFFERENT sumexp .

    AND             reduce using rule 62 (compex1 -> DIFFERENT sumexp .)
    OR              reduce using rule 62 (compex1 -> DIFFERENT sumexp .)
    RPARENTHESIS    reduce using rule 62 (compex1 -> DIFFERENT sumexp .)
    COMMA           reduce using rule 62 (compex1 -> DIFFERENT sumexp .)
    SEMICOLON       reduce using rule 62 (compex1 -> DIFFERENT sumexp .)


state 164

    (65) sumexp1 -> PLUS sumexp .

    GTHAN           reduce using rule 65 (sumexp1 -> PLUS sumexp .)
    LTHAN           reduce using rule 65 (sumexp1 -> PLUS sumexp .)
    GTHANEQ         reduce using rule 65 (sumexp1 -> PLUS sumexp .)
    LTHANEQ         reduce using rule 65 (sumexp1 -> PLUS sumexp .)
    DIFFERENT       reduce using rule 65 (sumexp1 -> PLUS sumexp .)
    AND             reduce using rule 65 (sumexp1 -> PLUS sumexp .)
    OR              reduce using rule 65 (sumexp1 -> PLUS sumexp .)
    RPARENTHESIS    reduce using rule 65 (sumexp1 -> PLUS sumexp .)
    COMMA           reduce using rule 65 (sumexp1 -> PLUS sumexp .)
    SEMICOLON       reduce using rule 65 (sumexp1 -> PLUS sumexp .)


state 165

    (66) sumexp1 -> MINUS sumexp .

    GTHAN           reduce using rule 66 (sumexp1 -> MINUS sumexp .)
    LTHAN           reduce using rule 66 (sumexp1 -> MINUS sumexp .)
    GTHANEQ         reduce using rule 66 (sumexp1 -> MINUS sumexp .)
    LTHANEQ         reduce using rule 66 (sumexp1 -> MINUS sumexp .)
    DIFFERENT       reduce using rule 66 (sumexp1 -> MINUS sumexp .)
    AND             reduce using rule 66 (sumexp1 -> MINUS sumexp .)
    OR              reduce using rule 66 (sumexp1 -> MINUS sumexp .)
    RPARENTHESIS    reduce using rule 66 (sumexp1 -> MINUS sumexp .)
    COMMA           reduce using rule 66 (sumexp1 -> MINUS sumexp .)
    SEMICOLON       reduce using rule 66 (sumexp1 -> MINUS sumexp .)


state 166

    (69) mulexp1 -> MULTIPLICATION mulexp .

    PLUS            reduce using rule 69 (mulexp1 -> MULTIPLICATION mulexp .)
    MINUS           reduce using rule 69 (mulexp1 -> MULTIPLICATION mulexp .)
    GTHAN           reduce using rule 69 (mulexp1 -> MULTIPLICATION mulexp .)
    LTHAN           reduce using rule 69 (mulexp1 -> MULTIPLICATION mulexp .)
    GTHANEQ         reduce using rule 69 (mulexp1 -> MULTIPLICATION mulexp .)
    LTHANEQ         reduce using rule 69 (mulexp1 -> MULTIPLICATION mulexp .)
    DIFFERENT       reduce using rule 69 (mulexp1 -> MULTIPLICATION mulexp .)
    AND             reduce using rule 69 (mulexp1 -> MULTIPLICATION mulexp .)
    OR              reduce using rule 69 (mulexp1 -> MULTIPLICATION mulexp .)
    RPARENTHESIS    reduce using rule 69 (mulexp1 -> MULTIPLICATION mulexp .)
    COMMA           reduce using rule 69 (mulexp1 -> MULTIPLICATION mulexp .)
    SEMICOLON       reduce using rule 69 (mulexp1 -> MULTIPLICATION mulexp .)


state 167

    (70) mulexp1 -> DIVISION mulexp .

    PLUS            reduce using rule 70 (mulexp1 -> DIVISION mulexp .)
    MINUS           reduce using rule 70 (mulexp1 -> DIVISION mulexp .)
    GTHAN           reduce using rule 70 (mulexp1 -> DIVISION mulexp .)
    LTHAN           reduce using rule 70 (mulexp1 -> DIVISION mulexp .)
    GTHANEQ         reduce using rule 70 (mulexp1 -> DIVISION mulexp .)
    LTHANEQ         reduce using rule 70 (mulexp1 -> DIVISION mulexp .)
    DIFFERENT       reduce using rule 70 (mulexp1 -> DIVISION mulexp .)
    AND             reduce using rule 70 (mulexp1 -> DIVISION mulexp .)
    OR              reduce using rule 70 (mulexp1 -> DIVISION mulexp .)
    RPARENTHESIS    reduce using rule 70 (mulexp1 -> DIVISION mulexp .)
    COMMA           reduce using rule 70 (mulexp1 -> DIVISION mulexp .)
    SEMICOLON       reduce using rule 70 (mulexp1 -> DIVISION mulexp .)


state 168

    (44) escritura2 -> COMMA escritura1 .

    RPARENTHESIS    reduce using rule 44 (escritura2 -> COMMA escritura1 .)


state 169

    (46) for -> FOR LPARENTHESIS FROM asignacion COMMA . TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    TO              shift and go to state 174


state 170

    (47) if -> IF LPARENTHESIS expresion RPARENTHESIS THEN . LBRACKET estatuto RBRACKET else

    LBRACKET        shift and go to state 175


state 171

    (50) while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET . estatuto RBRACKET
    (30) estatuto -> . estatuto2 estatuto
    (31) estatuto -> . empty
    (32) estatuto2 -> . asignacion SEMICOLON
    (33) estatuto2 -> . llamada SEMICOLON
    (34) estatuto2 -> . lectura SEMICOLON
    (35) estatuto2 -> . escritura SEMICOLON
    (36) estatuto2 -> . for
    (37) estatuto2 -> . if
    (38) estatuto2 -> . while
    (79) empty -> .
    (39) asignacion -> . ID arr EQUALS expresion
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (41) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (42) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (46) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (47) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (50) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 79 (empty -> .)
    ID              shift and go to state 71
    READ            shift and go to state 72
    PRINT           shift and go to state 73
    FOR             shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76

    estatuto                       shift and go to state 176
    estatuto2                      shift and go to state 62
    empty                          shift and go to state 63
    asignacion                     shift and go to state 64
    llamada                        shift and go to state 65
    lectura                        shift and go to state 66
    escritura                      shift and go to state 67
    for                            shift and go to state 68
    if                             shift and go to state 69
    while                          shift and go to state 70

state 172

    (26) funcion -> FUNCTION tipo ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion .

    MAIN            reduce using rule 26 (funcion -> FUNCTION tipo ID LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion .)


state 173

    (29) retorno -> RETURN ID SEMICOLON .

    RBRACKET        reduce using rule 29 (retorno -> RETURN ID SEMICOLON .)


state 174

    (46) for -> FOR LPARENTHESIS FROM asignacion COMMA TO . expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (51) expresion -> . nexp expresion1
    (54) nexp -> . comexp nexp1
    (57) comexp -> . sumexp compex1
    (64) sumexp -> . mulexp sumexp1
    (68) mulexp -> . pexp mulexp1
    (72) pexp -> . CTEI
    (73) pexp -> . CTEF
    (74) pexp -> . CTEC
    (75) pexp -> . CTESTRING
    (76) pexp -> . llamada
    (77) pexp -> . ID
    (78) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 106
    CTEF            shift and go to state 107
    CTEC            shift and go to state 108
    CTESTRING       shift and go to state 109
    ID              shift and go to state 98
    LPARENTHESIS    shift and go to state 99

    expresion                      shift and go to state 177
    nexp                           shift and go to state 101
    comexp                         shift and go to state 102
    sumexp                         shift and go to state 103
    mulexp                         shift and go to state 104
    pexp                           shift and go to state 105
    llamada                        shift and go to state 110

state 175

    (47) if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET . estatuto RBRACKET else
    (30) estatuto -> . estatuto2 estatuto
    (31) estatuto -> . empty
    (32) estatuto2 -> . asignacion SEMICOLON
    (33) estatuto2 -> . llamada SEMICOLON
    (34) estatuto2 -> . lectura SEMICOLON
    (35) estatuto2 -> . escritura SEMICOLON
    (36) estatuto2 -> . for
    (37) estatuto2 -> . if
    (38) estatuto2 -> . while
    (79) empty -> .
    (39) asignacion -> . ID arr EQUALS expresion
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (41) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (42) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (46) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (47) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (50) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 79 (empty -> .)
    ID              shift and go to state 71
    READ            shift and go to state 72
    PRINT           shift and go to state 73
    FOR             shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76

    estatuto                       shift and go to state 178
    estatuto2                      shift and go to state 62
    empty                          shift and go to state 63
    asignacion                     shift and go to state 64
    llamada                        shift and go to state 65
    lectura                        shift and go to state 66
    escritura                      shift and go to state 67
    for                            shift and go to state 68
    if                             shift and go to state 69
    while                          shift and go to state 70

state 176

    (50) while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 179


state 177

    (46) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion . RPARENTHESIS LBRACKET estatuto RBRACKET

    RPARENTHESIS    shift and go to state 180


state 178

    (47) if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto . RBRACKET else

    RBRACKET        shift and go to state 181


state 179

    (50) while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .

    ID              reduce using rule 50 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    READ            reduce using rule 50 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    PRINT           reduce using rule 50 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    FOR             reduce using rule 50 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    IF              reduce using rule 50 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    WHILE           reduce using rule 50 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    RBRACKET        reduce using rule 50 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    RETURN          reduce using rule 50 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)


state 180

    (46) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 182


state 181

    (47) if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET . else
    (48) else -> . ELSE LBRACKET estatuto RBRACKET
    (49) else -> . empty
    (79) empty -> .

    ELSE            shift and go to state 184
    ID              reduce using rule 79 (empty -> .)
    READ            reduce using rule 79 (empty -> .)
    PRINT           reduce using rule 79 (empty -> .)
    FOR             reduce using rule 79 (empty -> .)
    IF              reduce using rule 79 (empty -> .)
    WHILE           reduce using rule 79 (empty -> .)
    RBRACKET        reduce using rule 79 (empty -> .)
    RETURN          reduce using rule 79 (empty -> .)

    else                           shift and go to state 183
    empty                          shift and go to state 185

state 182

    (46) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET . estatuto RBRACKET
    (30) estatuto -> . estatuto2 estatuto
    (31) estatuto -> . empty
    (32) estatuto2 -> . asignacion SEMICOLON
    (33) estatuto2 -> . llamada SEMICOLON
    (34) estatuto2 -> . lectura SEMICOLON
    (35) estatuto2 -> . escritura SEMICOLON
    (36) estatuto2 -> . for
    (37) estatuto2 -> . if
    (38) estatuto2 -> . while
    (79) empty -> .
    (39) asignacion -> . ID arr EQUALS expresion
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (41) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (42) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (46) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (47) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (50) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 79 (empty -> .)
    ID              shift and go to state 71
    READ            shift and go to state 72
    PRINT           shift and go to state 73
    FOR             shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76

    asignacion                     shift and go to state 64
    estatuto                       shift and go to state 186
    estatuto2                      shift and go to state 62
    empty                          shift and go to state 63
    llamada                        shift and go to state 65
    lectura                        shift and go to state 66
    escritura                      shift and go to state 67
    for                            shift and go to state 68
    if                             shift and go to state 69
    while                          shift and go to state 70

state 183

    (47) if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .

    ID              reduce using rule 47 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    READ            reduce using rule 47 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    PRINT           reduce using rule 47 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    FOR             reduce using rule 47 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    IF              reduce using rule 47 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    WHILE           reduce using rule 47 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    RBRACKET        reduce using rule 47 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    RETURN          reduce using rule 47 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)


state 184

    (48) else -> ELSE . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 187


state 185

    (49) else -> empty .

    ID              reduce using rule 49 (else -> empty .)
    READ            reduce using rule 49 (else -> empty .)
    PRINT           reduce using rule 49 (else -> empty .)
    FOR             reduce using rule 49 (else -> empty .)
    IF              reduce using rule 49 (else -> empty .)
    WHILE           reduce using rule 49 (else -> empty .)
    RBRACKET        reduce using rule 49 (else -> empty .)
    RETURN          reduce using rule 49 (else -> empty .)


state 186

    (46) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 188


state 187

    (48) else -> ELSE LBRACKET . estatuto RBRACKET
    (30) estatuto -> . estatuto2 estatuto
    (31) estatuto -> . empty
    (32) estatuto2 -> . asignacion SEMICOLON
    (33) estatuto2 -> . llamada SEMICOLON
    (34) estatuto2 -> . lectura SEMICOLON
    (35) estatuto2 -> . escritura SEMICOLON
    (36) estatuto2 -> . for
    (37) estatuto2 -> . if
    (38) estatuto2 -> . while
    (79) empty -> .
    (39) asignacion -> . ID arr EQUALS expresion
    (40) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (41) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (42) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (46) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (47) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (50) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 79 (empty -> .)
    ID              shift and go to state 71
    READ            shift and go to state 72
    PRINT           shift and go to state 73
    FOR             shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76

    estatuto                       shift and go to state 189
    estatuto2                      shift and go to state 62
    empty                          shift and go to state 63
    asignacion                     shift and go to state 64
    llamada                        shift and go to state 65
    lectura                        shift and go to state 66
    escritura                      shift and go to state 67
    for                            shift and go to state 68
    if                             shift and go to state 69
    while                          shift and go to state 70

state 188

    (46) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .

    ID              reduce using rule 46 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    READ            reduce using rule 46 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    PRINT           reduce using rule 46 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    FOR             reduce using rule 46 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    IF              reduce using rule 46 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    WHILE           reduce using rule 46 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    RBRACKET        reduce using rule 46 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    RETURN          reduce using rule 46 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)


state 189

    (48) else -> ELSE LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 190


state 190

    (48) else -> ELSE LBRACKET estatuto RBRACKET .

    ID              reduce using rule 48 (else -> ELSE LBRACKET estatuto RBRACKET .)
    READ            reduce using rule 48 (else -> ELSE LBRACKET estatuto RBRACKET .)
    PRINT           reduce using rule 48 (else -> ELSE LBRACKET estatuto RBRACKET .)
    FOR             reduce using rule 48 (else -> ELSE LBRACKET estatuto RBRACKET .)
    IF              reduce using rule 48 (else -> ELSE LBRACKET estatuto RBRACKET .)
    WHILE           reduce using rule 48 (else -> ELSE LBRACKET estatuto RBRACKET .)
    RBRACKET        reduce using rule 48 (else -> ELSE LBRACKET estatuto RBRACKET .)
    RETURN          reduce using rule 48 (else -> ELSE LBRACKET estatuto RBRACKET .)


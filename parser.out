Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID addProgram SEMICOLON programa1 END
Rule 2     addProgram -> <empty>
Rule 3     programa1 -> vars funcion principal
Rule 4     principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
Rule 5     addMain -> <empty>
Rule 6     vars -> VAR vars1
Rule 7     vars -> empty
Rule 8     vars1 -> tipo vars2 SEMICOLON varsadd
Rule 9     vars2 -> ID addVariable arr vars3
Rule 10    vars3 -> COMMA vars2
Rule 11    vars3 -> empty
Rule 12    varsadd -> vars1
Rule 13    varsadd -> empty
Rule 14    tipo -> INT
Rule 15    tipo -> FLOAT
Rule 16    tipo -> CHAR
Rule 17    tipo -> STRING
Rule 18    arr -> LSQRBRACKET CTEI RSQRBRACKET
Rule 19    arr -> empty
Rule 20    parameters -> parameters2
Rule 21    parameters -> empty
Rule 22    parameters2 -> tipo ID addVariable
Rule 23    parameters2 -> tipo ID addVariable parameters3
Rule 24    parameters3 -> COMMA ID addVariable parameters3
Rule 25    parameters3 -> COMMA tipo ID addVariable parameters3
Rule 26    parameters3 -> COMMA ID addVariable
Rule 27    parameters3 -> COMMA tipo ID addVariable
Rule 28    funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
Rule 29    funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
Rule 30    funcion -> empty
Rule 31    addFunction -> <empty>
Rule 32    retorno -> RETURN ID SEMICOLON
Rule 33    estatuto -> estatuto2 estatuto
Rule 34    estatuto -> empty
Rule 35    estatuto2 -> asignacion SEMICOLON
Rule 36    estatuto2 -> llamada SEMICOLON
Rule 37    estatuto2 -> lectura SEMICOLON
Rule 38    estatuto2 -> escritura SEMICOLON
Rule 39    estatuto2 -> for
Rule 40    estatuto2 -> if
Rule 41    estatuto2 -> while
Rule 42    asignacion -> ID arr EQUALS expresion
Rule 43    llamada -> ID LPARENTHESIS expresion RPARENTHESIS
Rule 44    lectura -> READ LPARENTHESIS vars2 RPARENTHESIS
Rule 45    escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS
Rule 46    escritura1 -> expresion escritura2
Rule 47    escritura2 -> COMMA escritura1
Rule 48    escritura2 -> empty
Rule 49    for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
Rule 50    if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
Rule 51    else -> ELSE LBRACKET estatuto RBRACKET
Rule 52    else -> empty
Rule 53    while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET
Rule 54    expresion -> nexp expresion1
Rule 55    expresion1 -> OR expresion
Rule 56    expresion1 -> empty
Rule 57    nexp -> comexp nexp1
Rule 58    nexp1 -> AND nexp
Rule 59    nexp1 -> empty
Rule 60    comexp -> sumexp compex1
Rule 61    compex1 -> GTHAN sumexp
Rule 62    compex1 -> LTHAN sumexp
Rule 63    compex1 -> GTHANEQ sumexp
Rule 64    compex1 -> LTHANEQ sumexp
Rule 65    compex1 -> DIFFERENT sumexp
Rule 66    compex1 -> empty
Rule 67    sumexp -> mulexp sumexp1
Rule 68    sumexp1 -> PLUS sumexp
Rule 69    sumexp1 -> MINUS sumexp
Rule 70    sumexp1 -> empty
Rule 71    mulexp -> pexp mulexp1
Rule 72    mulexp1 -> MULTIPLICATION mulexp
Rule 73    mulexp1 -> DIVISION mulexp
Rule 74    mulexp1 -> empty
Rule 75    pexp -> CTEI
Rule 76    pexp -> CTEF
Rule 77    pexp -> CTEC
Rule 78    pexp -> CTESTRING
Rule 79    pexp -> llamada
Rule 80    pexp -> ID
Rule 81    pexp -> LPARENTHESIS expresion RPARENTHESIS
Rule 82    addVariable -> <empty>
Rule 83    empty -> <empty>

Terminals, with rules where they appear

AND                  : 58
CHAR                 : 16
COMMA                : 10 24 25 26 27 47 49
CTEC                 : 77
CTEF                 : 76
CTEI                 : 18 75
CTESTRING            : 78
DIFFERENT            : 65
DIVISION             : 73
ELSE                 : 51
END                  : 1
EQUALS               : 42
FLOAT                : 15
FOR                  : 49
FROM                 : 49
FUNCTION             : 28 29
GTHAN                : 61
GTHANEQ              : 63
ID                   : 1 9 22 23 24 25 26 27 28 29 32 42 43 80
IF                   : 50
INT                  : 14
LBRACKET             : 4 28 29 49 50 51 53
LPARENTHESIS         : 4 28 29 43 44 45 49 50 53 81
LSQRBRACKET          : 18
LTHAN                : 62
LTHANEQ              : 64
MAIN                 : 4
MINUS                : 69
MULTIPLICATION       : 72
OR                   : 55
PLUS                 : 68
PRINT                : 45
PROGRAM              : 1
RBRACKET             : 4 28 29 49 50 51 53
READ                 : 44
RETURN               : 32
RPARENTHESIS         : 4 28 29 43 44 45 49 50 53 81
RSQRBRACKET          : 18
SEMICOLON            : 1 8 32 35 36 37 38
STRING               : 17
THEN                 : 50
TO                   : 49
VAR                  : 6
VOID                 : 29
WHILE                : 53
error                : 

Nonterminals, with rules where they appear

addFunction          : 28 29
addMain              : 4
addProgram           : 1
addVariable          : 9 22 23 24 25 26 27
arr                  : 9 42
asignacion           : 35 49
comexp               : 57
compex1              : 60
else                 : 50
empty                : 7 11 13 19 21 30 34 48 52 56 59 66 70 74
escritura            : 38
escritura1           : 45 47
escritura2           : 46
estatuto             : 4 28 29 33 49 50 51 53
estatuto2            : 33
expresion            : 42 43 46 49 50 53 55 81
expresion1           : 54
for                  : 39
funcion              : 3 28 29
if                   : 40
lectura              : 37
llamada              : 36 79
mulexp               : 67 72 73
mulexp1              : 71
nexp                 : 54 58
nexp1                : 57
parameters           : 4 28 29
parameters2          : 20
parameters3          : 23 24 25
pexp                 : 71
principal            : 3
programa             : 0
programa1            : 1
retorno              : 28
sumexp               : 60 61 62 63 64 65 68 69
sumexp1              : 67
tipo                 : 8 22 23 25 27 28
vars                 : 3 4 28 29
vars1                : 6 12
vars2                : 8 10 44
vars3                : 9
varsadd              : 8
while                : 41

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID addProgram SEMICOLON programa1 END

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID addProgram SEMICOLON programa1 END

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . addProgram SEMICOLON programa1 END
    (2) addProgram -> .

    SEMICOLON       reduce using rule 2 (addProgram -> .)

    addProgram                     shift and go to state 4

state 4

    (1) programa -> PROGRAM ID addProgram . SEMICOLON programa1 END

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID addProgram SEMICOLON . programa1 END
    (3) programa1 -> . vars funcion principal
    (6) vars -> . VAR vars1
    (7) vars -> . empty
    (83) empty -> .

    VAR             shift and go to state 8
    FUNCTION        reduce using rule 83 (empty -> .)
    MAIN            reduce using rule 83 (empty -> .)

    programa1                      shift and go to state 6
    vars                           shift and go to state 7
    empty                          shift and go to state 9

state 6

    (1) programa -> PROGRAM ID addProgram SEMICOLON programa1 . END

    END             shift and go to state 10


state 7

    (3) programa1 -> vars . funcion principal
    (28) funcion -> . FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (29) funcion -> . FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (30) funcion -> . empty
    (83) empty -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 83 (empty -> .)

    funcion                        shift and go to state 11
    empty                          shift and go to state 13

state 8

    (6) vars -> VAR . vars1
    (8) vars1 -> . tipo vars2 SEMICOLON varsadd
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    vars1                          shift and go to state 14
    tipo                           shift and go to state 15

state 9

    (7) vars -> empty .

    FUNCTION        reduce using rule 7 (vars -> empty .)
    MAIN            reduce using rule 7 (vars -> empty .)
    LBRACKET        reduce using rule 7 (vars -> empty .)


state 10

    (1) programa -> PROGRAM ID addProgram SEMICOLON programa1 END .

    $end            reduce using rule 1 (programa -> PROGRAM ID addProgram SEMICOLON programa1 END .)


state 11

    (3) programa1 -> vars funcion . principal
    (4) principal -> . MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET

    MAIN            shift and go to state 21

    principal                      shift and go to state 20

state 12

    (28) funcion -> FUNCTION . tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (29) funcion -> FUNCTION . VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    VOID            shift and go to state 23
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 22

state 13

    (30) funcion -> empty .

    MAIN            reduce using rule 30 (funcion -> empty .)


state 14

    (6) vars -> VAR vars1 .

    FUNCTION        reduce using rule 6 (vars -> VAR vars1 .)
    MAIN            reduce using rule 6 (vars -> VAR vars1 .)
    LBRACKET        reduce using rule 6 (vars -> VAR vars1 .)


state 15

    (8) vars1 -> tipo . vars2 SEMICOLON varsadd
    (9) vars2 -> . ID addVariable arr vars3

    ID              shift and go to state 25

    vars2                          shift and go to state 24

state 16

    (14) tipo -> INT .

    ID              reduce using rule 14 (tipo -> INT .)


state 17

    (15) tipo -> FLOAT .

    ID              reduce using rule 15 (tipo -> FLOAT .)


state 18

    (16) tipo -> CHAR .

    ID              reduce using rule 16 (tipo -> CHAR .)


state 19

    (17) tipo -> STRING .

    ID              reduce using rule 17 (tipo -> STRING .)


state 20

    (3) programa1 -> vars funcion principal .

    END             reduce using rule 3 (programa1 -> vars funcion principal .)


state 21

    (4) principal -> MAIN . addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
    (5) addMain -> .

    LPARENTHESIS    reduce using rule 5 (addMain -> .)

    addMain                        shift and go to state 26

state 22

    (28) funcion -> FUNCTION tipo . ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion

    ID              shift and go to state 27


state 23

    (29) funcion -> FUNCTION VOID . ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion

    ID              shift and go to state 28


state 24

    (8) vars1 -> tipo vars2 . SEMICOLON varsadd

    SEMICOLON       shift and go to state 29


state 25

    (9) vars2 -> ID . addVariable arr vars3
    (82) addVariable -> .

    LSQRBRACKET     reduce using rule 82 (addVariable -> .)
    COMMA           reduce using rule 82 (addVariable -> .)
    SEMICOLON       reduce using rule 82 (addVariable -> .)
    RPARENTHESIS    reduce using rule 82 (addVariable -> .)

    addVariable                    shift and go to state 30

state 26

    (4) principal -> MAIN addMain . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET

    LPARENTHESIS    shift and go to state 31


state 27

    (28) funcion -> FUNCTION tipo ID . addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (31) addFunction -> .

    LPARENTHESIS    reduce using rule 31 (addFunction -> .)

    addFunction                    shift and go to state 32

state 28

    (29) funcion -> FUNCTION VOID ID . addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (31) addFunction -> .

    LPARENTHESIS    reduce using rule 31 (addFunction -> .)

    addFunction                    shift and go to state 33

state 29

    (8) vars1 -> tipo vars2 SEMICOLON . varsadd
    (12) varsadd -> . vars1
    (13) varsadd -> . empty
    (8) vars1 -> . tipo vars2 SEMICOLON varsadd
    (83) empty -> .
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    FUNCTION        reduce using rule 83 (empty -> .)
    MAIN            reduce using rule 83 (empty -> .)
    LBRACKET        reduce using rule 83 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 15
    varsadd                        shift and go to state 34
    vars1                          shift and go to state 35
    empty                          shift and go to state 36

state 30

    (9) vars2 -> ID addVariable . arr vars3
    (18) arr -> . LSQRBRACKET CTEI RSQRBRACKET
    (19) arr -> . empty
    (83) empty -> .

    LSQRBRACKET     shift and go to state 38
    COMMA           reduce using rule 83 (empty -> .)
    SEMICOLON       reduce using rule 83 (empty -> .)
    RPARENTHESIS    reduce using rule 83 (empty -> .)

    arr                            shift and go to state 37
    empty                          shift and go to state 39

state 31

    (4) principal -> MAIN addMain LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
    (20) parameters -> . parameters2
    (21) parameters -> . empty
    (22) parameters2 -> . tipo ID addVariable
    (23) parameters2 -> . tipo ID addVariable parameters3
    (83) empty -> .
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    RPARENTHESIS    reduce using rule 83 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    parameters                     shift and go to state 40
    parameters2                    shift and go to state 41
    empty                          shift and go to state 42
    tipo                           shift and go to state 43

state 32

    (28) funcion -> FUNCTION tipo ID addFunction . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion

    LPARENTHESIS    shift and go to state 44


state 33

    (29) funcion -> FUNCTION VOID ID addFunction . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion

    LPARENTHESIS    shift and go to state 45


state 34

    (8) vars1 -> tipo vars2 SEMICOLON varsadd .

    FUNCTION        reduce using rule 8 (vars1 -> tipo vars2 SEMICOLON varsadd .)
    MAIN            reduce using rule 8 (vars1 -> tipo vars2 SEMICOLON varsadd .)
    LBRACKET        reduce using rule 8 (vars1 -> tipo vars2 SEMICOLON varsadd .)


state 35

    (12) varsadd -> vars1 .

    FUNCTION        reduce using rule 12 (varsadd -> vars1 .)
    MAIN            reduce using rule 12 (varsadd -> vars1 .)
    LBRACKET        reduce using rule 12 (varsadd -> vars1 .)


state 36

    (13) varsadd -> empty .

    FUNCTION        reduce using rule 13 (varsadd -> empty .)
    MAIN            reduce using rule 13 (varsadd -> empty .)
    LBRACKET        reduce using rule 13 (varsadd -> empty .)


state 37

    (9) vars2 -> ID addVariable arr . vars3
    (10) vars3 -> . COMMA vars2
    (11) vars3 -> . empty
    (83) empty -> .

    COMMA           shift and go to state 47
    SEMICOLON       reduce using rule 83 (empty -> .)
    RPARENTHESIS    reduce using rule 83 (empty -> .)

    vars3                          shift and go to state 46
    empty                          shift and go to state 48

state 38

    (18) arr -> LSQRBRACKET . CTEI RSQRBRACKET

    CTEI            shift and go to state 49


state 39

    (19) arr -> empty .

    COMMA           reduce using rule 19 (arr -> empty .)
    SEMICOLON       reduce using rule 19 (arr -> empty .)
    RPARENTHESIS    reduce using rule 19 (arr -> empty .)
    EQUALS          reduce using rule 19 (arr -> empty .)


state 40

    (4) principal -> MAIN addMain LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto RBRACKET

    RPARENTHESIS    shift and go to state 50


state 41

    (20) parameters -> parameters2 .

    RPARENTHESIS    reduce using rule 20 (parameters -> parameters2 .)


state 42

    (21) parameters -> empty .

    RPARENTHESIS    reduce using rule 21 (parameters -> empty .)


state 43

    (22) parameters2 -> tipo . ID addVariable
    (23) parameters2 -> tipo . ID addVariable parameters3

    ID              shift and go to state 51


state 44

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (20) parameters -> . parameters2
    (21) parameters -> . empty
    (22) parameters2 -> . tipo ID addVariable
    (23) parameters2 -> . tipo ID addVariable parameters3
    (83) empty -> .
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    RPARENTHESIS    reduce using rule 83 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 43
    parameters                     shift and go to state 52
    parameters2                    shift and go to state 41
    empty                          shift and go to state 42

state 45

    (29) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (20) parameters -> . parameters2
    (21) parameters -> . empty
    (22) parameters2 -> . tipo ID addVariable
    (23) parameters2 -> . tipo ID addVariable parameters3
    (83) empty -> .
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    RPARENTHESIS    reduce using rule 83 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    parameters                     shift and go to state 53
    parameters2                    shift and go to state 41
    empty                          shift and go to state 42
    tipo                           shift and go to state 43

state 46

    (9) vars2 -> ID addVariable arr vars3 .

    SEMICOLON       reduce using rule 9 (vars2 -> ID addVariable arr vars3 .)
    RPARENTHESIS    reduce using rule 9 (vars2 -> ID addVariable arr vars3 .)


state 47

    (10) vars3 -> COMMA . vars2
    (9) vars2 -> . ID addVariable arr vars3

    ID              shift and go to state 25

    vars2                          shift and go to state 54

state 48

    (11) vars3 -> empty .

    SEMICOLON       reduce using rule 11 (vars3 -> empty .)
    RPARENTHESIS    reduce using rule 11 (vars3 -> empty .)


state 49

    (18) arr -> LSQRBRACKET CTEI . RSQRBRACKET

    RSQRBRACKET     shift and go to state 55


state 50

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto RBRACKET
    (6) vars -> . VAR vars1
    (7) vars -> . empty
    (83) empty -> .

    VAR             shift and go to state 8
    LBRACKET        reduce using rule 83 (empty -> .)

    vars                           shift and go to state 56
    empty                          shift and go to state 9

state 51

    (22) parameters2 -> tipo ID . addVariable
    (23) parameters2 -> tipo ID . addVariable parameters3
    (82) addVariable -> .

    COMMA           reduce using rule 82 (addVariable -> .)
    RPARENTHESIS    reduce using rule 82 (addVariable -> .)

    addVariable                    shift and go to state 57

state 52

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion

    RPARENTHESIS    shift and go to state 58


state 53

    (29) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion

    RPARENTHESIS    shift and go to state 59


state 54

    (10) vars3 -> COMMA vars2 .

    SEMICOLON       reduce using rule 10 (vars3 -> COMMA vars2 .)
    RPARENTHESIS    reduce using rule 10 (vars3 -> COMMA vars2 .)


state 55

    (18) arr -> LSQRBRACKET CTEI RSQRBRACKET .

    COMMA           reduce using rule 18 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)
    SEMICOLON       reduce using rule 18 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)
    RPARENTHESIS    reduce using rule 18 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)
    EQUALS          reduce using rule 18 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)


state 56

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 60


state 57

    (22) parameters2 -> tipo ID addVariable .
    (23) parameters2 -> tipo ID addVariable . parameters3
    (24) parameters3 -> . COMMA ID addVariable parameters3
    (25) parameters3 -> . COMMA tipo ID addVariable parameters3
    (26) parameters3 -> . COMMA ID addVariable
    (27) parameters3 -> . COMMA tipo ID addVariable

    RPARENTHESIS    reduce using rule 22 (parameters2 -> tipo ID addVariable .)
    COMMA           shift and go to state 62

    parameters3                    shift and go to state 61

state 58

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto retorno RBRACKET funcion
    (6) vars -> . VAR vars1
    (7) vars -> . empty
    (83) empty -> .

    VAR             shift and go to state 8
    LBRACKET        reduce using rule 83 (empty -> .)

    vars                           shift and go to state 63
    empty                          shift and go to state 9

state 59

    (29) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto RBRACKET funcion
    (6) vars -> . VAR vars1
    (7) vars -> . empty
    (83) empty -> .

    VAR             shift and go to state 8
    LBRACKET        reduce using rule 83 (empty -> .)

    vars                           shift and go to state 64
    empty                          shift and go to state 9

state 60

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto RBRACKET
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (83) empty -> .
    (42) asignacion -> . ID arr EQUALS expresion
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (44) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (45) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (49) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (50) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (53) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 83 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 65
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 61

    (23) parameters2 -> tipo ID addVariable parameters3 .

    RPARENTHESIS    reduce using rule 23 (parameters2 -> tipo ID addVariable parameters3 .)


state 62

    (24) parameters3 -> COMMA . ID addVariable parameters3
    (25) parameters3 -> COMMA . tipo ID addVariable parameters3
    (26) parameters3 -> COMMA . ID addVariable
    (27) parameters3 -> COMMA . tipo ID addVariable
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    ID              shift and go to state 81
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 82

state 63

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto retorno RBRACKET funcion

    LBRACKET        shift and go to state 83


state 64

    (29) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto RBRACKET funcion

    LBRACKET        shift and go to state 84


state 65

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 85


state 66

    (33) estatuto -> estatuto2 . estatuto
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (83) empty -> .
    (42) asignacion -> . ID arr EQUALS expresion
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (44) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (45) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (49) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (50) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (53) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 83 (empty -> .)
    RETURN          reduce using rule 83 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto2                      shift and go to state 66
    estatuto                       shift and go to state 86
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 67

    (34) estatuto -> empty .

    RBRACKET        reduce using rule 34 (estatuto -> empty .)
    RETURN          reduce using rule 34 (estatuto -> empty .)


state 68

    (35) estatuto2 -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 87


state 69

    (36) estatuto2 -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 88


state 70

    (37) estatuto2 -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 89


state 71

    (38) estatuto2 -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 90


state 72

    (39) estatuto2 -> for .

    ID              reduce using rule 39 (estatuto2 -> for .)
    READ            reduce using rule 39 (estatuto2 -> for .)
    PRINT           reduce using rule 39 (estatuto2 -> for .)
    FOR             reduce using rule 39 (estatuto2 -> for .)
    IF              reduce using rule 39 (estatuto2 -> for .)
    WHILE           reduce using rule 39 (estatuto2 -> for .)
    RBRACKET        reduce using rule 39 (estatuto2 -> for .)
    RETURN          reduce using rule 39 (estatuto2 -> for .)


state 73

    (40) estatuto2 -> if .

    ID              reduce using rule 40 (estatuto2 -> if .)
    READ            reduce using rule 40 (estatuto2 -> if .)
    PRINT           reduce using rule 40 (estatuto2 -> if .)
    FOR             reduce using rule 40 (estatuto2 -> if .)
    IF              reduce using rule 40 (estatuto2 -> if .)
    WHILE           reduce using rule 40 (estatuto2 -> if .)
    RBRACKET        reduce using rule 40 (estatuto2 -> if .)
    RETURN          reduce using rule 40 (estatuto2 -> if .)


state 74

    (41) estatuto2 -> while .

    ID              reduce using rule 41 (estatuto2 -> while .)
    READ            reduce using rule 41 (estatuto2 -> while .)
    PRINT           reduce using rule 41 (estatuto2 -> while .)
    FOR             reduce using rule 41 (estatuto2 -> while .)
    IF              reduce using rule 41 (estatuto2 -> while .)
    WHILE           reduce using rule 41 (estatuto2 -> while .)
    RBRACKET        reduce using rule 41 (estatuto2 -> while .)
    RETURN          reduce using rule 41 (estatuto2 -> while .)


state 75

    (42) asignacion -> ID . arr EQUALS expresion
    (43) llamada -> ID . LPARENTHESIS expresion RPARENTHESIS
    (18) arr -> . LSQRBRACKET CTEI RSQRBRACKET
    (19) arr -> . empty
    (83) empty -> .

    LPARENTHESIS    shift and go to state 92
    LSQRBRACKET     shift and go to state 38
    EQUALS          reduce using rule 83 (empty -> .)

    arr                            shift and go to state 91
    empty                          shift and go to state 39

state 76

    (44) lectura -> READ . LPARENTHESIS vars2 RPARENTHESIS

    LPARENTHESIS    shift and go to state 93


state 77

    (45) escritura -> PRINT . LPARENTHESIS escritura1 RPARENTHESIS

    LPARENTHESIS    shift and go to state 94


state 78

    (49) for -> FOR . LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    LPARENTHESIS    shift and go to state 95


state 79

    (50) if -> IF . LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else

    LPARENTHESIS    shift and go to state 96


state 80

    (53) while -> WHILE . LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    LPARENTHESIS    shift and go to state 97


state 81

    (24) parameters3 -> COMMA ID . addVariable parameters3
    (26) parameters3 -> COMMA ID . addVariable
    (82) addVariable -> .

    COMMA           reduce using rule 82 (addVariable -> .)
    RPARENTHESIS    reduce using rule 82 (addVariable -> .)

    addVariable                    shift and go to state 98

state 82

    (25) parameters3 -> COMMA tipo . ID addVariable parameters3
    (27) parameters3 -> COMMA tipo . ID addVariable

    ID              shift and go to state 99


state 83

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto retorno RBRACKET funcion
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (83) empty -> .
    (42) asignacion -> . ID arr EQUALS expresion
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (44) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (45) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (49) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (50) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (53) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RETURN          reduce using rule 83 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 100
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 84

    (29) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto RBRACKET funcion
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (83) empty -> .
    (42) asignacion -> . ID arr EQUALS expresion
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (44) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (45) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (49) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (50) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (53) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 83 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 101
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 85

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET .

    END             reduce using rule 4 (principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET .)


state 86

    (33) estatuto -> estatuto2 estatuto .

    RBRACKET        reduce using rule 33 (estatuto -> estatuto2 estatuto .)
    RETURN          reduce using rule 33 (estatuto -> estatuto2 estatuto .)


state 87

    (35) estatuto2 -> asignacion SEMICOLON .

    ID              reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    READ            reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    PRINT           reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    FOR             reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    IF              reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    WHILE           reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    RBRACKET        reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    RETURN          reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)


state 88

    (36) estatuto2 -> llamada SEMICOLON .

    ID              reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    READ            reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    PRINT           reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    FOR             reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    IF              reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    WHILE           reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    RBRACKET        reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    RETURN          reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)


state 89

    (37) estatuto2 -> lectura SEMICOLON .

    ID              reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    READ            reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    PRINT           reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    FOR             reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    IF              reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    WHILE           reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    RBRACKET        reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    RETURN          reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)


state 90

    (38) estatuto2 -> escritura SEMICOLON .

    ID              reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    READ            reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    PRINT           reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    FOR             reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    IF              reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    WHILE           reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    RBRACKET        reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    RETURN          reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)


state 91

    (42) asignacion -> ID arr . EQUALS expresion

    EQUALS          shift and go to state 102


state 92

    (43) llamada -> ID LPARENTHESIS . expresion RPARENTHESIS
    (54) expresion -> . nexp expresion1
    (57) nexp -> . comexp nexp1
    (60) comexp -> . sumexp compex1
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    expresion                      shift and go to state 105
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 93

    (44) lectura -> READ LPARENTHESIS . vars2 RPARENTHESIS
    (9) vars2 -> . ID addVariable arr vars3

    ID              shift and go to state 25

    vars2                          shift and go to state 116

state 94

    (45) escritura -> PRINT LPARENTHESIS . escritura1 RPARENTHESIS
    (46) escritura1 -> . expresion escritura2
    (54) expresion -> . nexp expresion1
    (57) nexp -> . comexp nexp1
    (60) comexp -> . sumexp compex1
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    escritura1                     shift and go to state 117
    expresion                      shift and go to state 118
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 95

    (49) for -> FOR LPARENTHESIS . FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    FROM            shift and go to state 119


state 96

    (50) if -> IF LPARENTHESIS . expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (54) expresion -> . nexp expresion1
    (57) nexp -> . comexp nexp1
    (60) comexp -> . sumexp compex1
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    expresion                      shift and go to state 120
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 97

    (53) while -> WHILE LPARENTHESIS . expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (54) expresion -> . nexp expresion1
    (57) nexp -> . comexp nexp1
    (60) comexp -> . sumexp compex1
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    expresion                      shift and go to state 121
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 98

    (24) parameters3 -> COMMA ID addVariable . parameters3
    (26) parameters3 -> COMMA ID addVariable .
    (24) parameters3 -> . COMMA ID addVariable parameters3
    (25) parameters3 -> . COMMA tipo ID addVariable parameters3
    (26) parameters3 -> . COMMA ID addVariable
    (27) parameters3 -> . COMMA tipo ID addVariable

    RPARENTHESIS    reduce using rule 26 (parameters3 -> COMMA ID addVariable .)
    COMMA           shift and go to state 62

    parameters3                    shift and go to state 122

state 99

    (25) parameters3 -> COMMA tipo ID . addVariable parameters3
    (27) parameters3 -> COMMA tipo ID . addVariable
    (82) addVariable -> .

    COMMA           reduce using rule 82 (addVariable -> .)
    RPARENTHESIS    reduce using rule 82 (addVariable -> .)

    addVariable                    shift and go to state 123

state 100

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . retorno RBRACKET funcion
    (32) retorno -> . RETURN ID SEMICOLON

    RETURN          shift and go to state 125

    retorno                        shift and go to state 124

state 101

    (29) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . RBRACKET funcion

    RBRACKET        shift and go to state 126


state 102

    (42) asignacion -> ID arr EQUALS . expresion
    (54) expresion -> . nexp expresion1
    (57) nexp -> . comexp nexp1
    (60) comexp -> . sumexp compex1
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    expresion                      shift and go to state 127
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 103

    (80) pexp -> ID .
    (43) llamada -> ID . LPARENTHESIS expresion RPARENTHESIS

    MULTIPLICATION  reduce using rule 80 (pexp -> ID .)
    DIVISION        reduce using rule 80 (pexp -> ID .)
    PLUS            reduce using rule 80 (pexp -> ID .)
    MINUS           reduce using rule 80 (pexp -> ID .)
    GTHAN           reduce using rule 80 (pexp -> ID .)
    LTHAN           reduce using rule 80 (pexp -> ID .)
    GTHANEQ         reduce using rule 80 (pexp -> ID .)
    LTHANEQ         reduce using rule 80 (pexp -> ID .)
    DIFFERENT       reduce using rule 80 (pexp -> ID .)
    AND             reduce using rule 80 (pexp -> ID .)
    OR              reduce using rule 80 (pexp -> ID .)
    RPARENTHESIS    reduce using rule 80 (pexp -> ID .)
    COMMA           reduce using rule 80 (pexp -> ID .)
    SEMICOLON       reduce using rule 80 (pexp -> ID .)
    LPARENTHESIS    shift and go to state 92


state 104

    (81) pexp -> LPARENTHESIS . expresion RPARENTHESIS
    (54) expresion -> . nexp expresion1
    (57) nexp -> . comexp nexp1
    (60) comexp -> . sumexp compex1
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    expresion                      shift and go to state 128
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 105

    (43) llamada -> ID LPARENTHESIS expresion . RPARENTHESIS

    RPARENTHESIS    shift and go to state 129


state 106

    (54) expresion -> nexp . expresion1
    (55) expresion1 -> . OR expresion
    (56) expresion1 -> . empty
    (83) empty -> .

    OR              shift and go to state 131
    RPARENTHESIS    reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    SEMICOLON       reduce using rule 83 (empty -> .)

    expresion1                     shift and go to state 130
    empty                          shift and go to state 132

state 107

    (57) nexp -> comexp . nexp1
    (58) nexp1 -> . AND nexp
    (59) nexp1 -> . empty
    (83) empty -> .

    AND             shift and go to state 134
    OR              reduce using rule 83 (empty -> .)
    RPARENTHESIS    reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    SEMICOLON       reduce using rule 83 (empty -> .)

    nexp1                          shift and go to state 133
    empty                          shift and go to state 135

state 108

    (60) comexp -> sumexp . compex1
    (61) compex1 -> . GTHAN sumexp
    (62) compex1 -> . LTHAN sumexp
    (63) compex1 -> . GTHANEQ sumexp
    (64) compex1 -> . LTHANEQ sumexp
    (65) compex1 -> . DIFFERENT sumexp
    (66) compex1 -> . empty
    (83) empty -> .

    GTHAN           shift and go to state 137
    LTHAN           shift and go to state 138
    GTHANEQ         shift and go to state 139
    LTHANEQ         shift and go to state 140
    DIFFERENT       shift and go to state 141
    AND             reduce using rule 83 (empty -> .)
    OR              reduce using rule 83 (empty -> .)
    RPARENTHESIS    reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    SEMICOLON       reduce using rule 83 (empty -> .)

    compex1                        shift and go to state 136
    empty                          shift and go to state 142

state 109

    (67) sumexp -> mulexp . sumexp1
    (68) sumexp1 -> . PLUS sumexp
    (69) sumexp1 -> . MINUS sumexp
    (70) sumexp1 -> . empty
    (83) empty -> .

    PLUS            shift and go to state 144
    MINUS           shift and go to state 145
    GTHAN           reduce using rule 83 (empty -> .)
    LTHAN           reduce using rule 83 (empty -> .)
    GTHANEQ         reduce using rule 83 (empty -> .)
    LTHANEQ         reduce using rule 83 (empty -> .)
    DIFFERENT       reduce using rule 83 (empty -> .)
    AND             reduce using rule 83 (empty -> .)
    OR              reduce using rule 83 (empty -> .)
    RPARENTHESIS    reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    SEMICOLON       reduce using rule 83 (empty -> .)

    sumexp1                        shift and go to state 143
    empty                          shift and go to state 146

state 110

    (71) mulexp -> pexp . mulexp1
    (72) mulexp1 -> . MULTIPLICATION mulexp
    (73) mulexp1 -> . DIVISION mulexp
    (74) mulexp1 -> . empty
    (83) empty -> .

    MULTIPLICATION  shift and go to state 148
    DIVISION        shift and go to state 149
    PLUS            reduce using rule 83 (empty -> .)
    MINUS           reduce using rule 83 (empty -> .)
    GTHAN           reduce using rule 83 (empty -> .)
    LTHAN           reduce using rule 83 (empty -> .)
    GTHANEQ         reduce using rule 83 (empty -> .)
    LTHANEQ         reduce using rule 83 (empty -> .)
    DIFFERENT       reduce using rule 83 (empty -> .)
    AND             reduce using rule 83 (empty -> .)
    OR              reduce using rule 83 (empty -> .)
    RPARENTHESIS    reduce using rule 83 (empty -> .)
    COMMA           reduce using rule 83 (empty -> .)
    SEMICOLON       reduce using rule 83 (empty -> .)

    mulexp1                        shift and go to state 147
    empty                          shift and go to state 150

state 111

    (75) pexp -> CTEI .

    MULTIPLICATION  reduce using rule 75 (pexp -> CTEI .)
    DIVISION        reduce using rule 75 (pexp -> CTEI .)
    PLUS            reduce using rule 75 (pexp -> CTEI .)
    MINUS           reduce using rule 75 (pexp -> CTEI .)
    GTHAN           reduce using rule 75 (pexp -> CTEI .)
    LTHAN           reduce using rule 75 (pexp -> CTEI .)
    GTHANEQ         reduce using rule 75 (pexp -> CTEI .)
    LTHANEQ         reduce using rule 75 (pexp -> CTEI .)
    DIFFERENT       reduce using rule 75 (pexp -> CTEI .)
    AND             reduce using rule 75 (pexp -> CTEI .)
    OR              reduce using rule 75 (pexp -> CTEI .)
    RPARENTHESIS    reduce using rule 75 (pexp -> CTEI .)
    COMMA           reduce using rule 75 (pexp -> CTEI .)
    SEMICOLON       reduce using rule 75 (pexp -> CTEI .)


state 112

    (76) pexp -> CTEF .

    MULTIPLICATION  reduce using rule 76 (pexp -> CTEF .)
    DIVISION        reduce using rule 76 (pexp -> CTEF .)
    PLUS            reduce using rule 76 (pexp -> CTEF .)
    MINUS           reduce using rule 76 (pexp -> CTEF .)
    GTHAN           reduce using rule 76 (pexp -> CTEF .)
    LTHAN           reduce using rule 76 (pexp -> CTEF .)
    GTHANEQ         reduce using rule 76 (pexp -> CTEF .)
    LTHANEQ         reduce using rule 76 (pexp -> CTEF .)
    DIFFERENT       reduce using rule 76 (pexp -> CTEF .)
    AND             reduce using rule 76 (pexp -> CTEF .)
    OR              reduce using rule 76 (pexp -> CTEF .)
    RPARENTHESIS    reduce using rule 76 (pexp -> CTEF .)
    COMMA           reduce using rule 76 (pexp -> CTEF .)
    SEMICOLON       reduce using rule 76 (pexp -> CTEF .)


state 113

    (77) pexp -> CTEC .

    MULTIPLICATION  reduce using rule 77 (pexp -> CTEC .)
    DIVISION        reduce using rule 77 (pexp -> CTEC .)
    PLUS            reduce using rule 77 (pexp -> CTEC .)
    MINUS           reduce using rule 77 (pexp -> CTEC .)
    GTHAN           reduce using rule 77 (pexp -> CTEC .)
    LTHAN           reduce using rule 77 (pexp -> CTEC .)
    GTHANEQ         reduce using rule 77 (pexp -> CTEC .)
    LTHANEQ         reduce using rule 77 (pexp -> CTEC .)
    DIFFERENT       reduce using rule 77 (pexp -> CTEC .)
    AND             reduce using rule 77 (pexp -> CTEC .)
    OR              reduce using rule 77 (pexp -> CTEC .)
    RPARENTHESIS    reduce using rule 77 (pexp -> CTEC .)
    COMMA           reduce using rule 77 (pexp -> CTEC .)
    SEMICOLON       reduce using rule 77 (pexp -> CTEC .)


state 114

    (78) pexp -> CTESTRING .

    MULTIPLICATION  reduce using rule 78 (pexp -> CTESTRING .)
    DIVISION        reduce using rule 78 (pexp -> CTESTRING .)
    PLUS            reduce using rule 78 (pexp -> CTESTRING .)
    MINUS           reduce using rule 78 (pexp -> CTESTRING .)
    GTHAN           reduce using rule 78 (pexp -> CTESTRING .)
    LTHAN           reduce using rule 78 (pexp -> CTESTRING .)
    GTHANEQ         reduce using rule 78 (pexp -> CTESTRING .)
    LTHANEQ         reduce using rule 78 (pexp -> CTESTRING .)
    DIFFERENT       reduce using rule 78 (pexp -> CTESTRING .)
    AND             reduce using rule 78 (pexp -> CTESTRING .)
    OR              reduce using rule 78 (pexp -> CTESTRING .)
    RPARENTHESIS    reduce using rule 78 (pexp -> CTESTRING .)
    COMMA           reduce using rule 78 (pexp -> CTESTRING .)
    SEMICOLON       reduce using rule 78 (pexp -> CTESTRING .)


state 115

    (79) pexp -> llamada .

    MULTIPLICATION  reduce using rule 79 (pexp -> llamada .)
    DIVISION        reduce using rule 79 (pexp -> llamada .)
    PLUS            reduce using rule 79 (pexp -> llamada .)
    MINUS           reduce using rule 79 (pexp -> llamada .)
    GTHAN           reduce using rule 79 (pexp -> llamada .)
    LTHAN           reduce using rule 79 (pexp -> llamada .)
    GTHANEQ         reduce using rule 79 (pexp -> llamada .)
    LTHANEQ         reduce using rule 79 (pexp -> llamada .)
    DIFFERENT       reduce using rule 79 (pexp -> llamada .)
    AND             reduce using rule 79 (pexp -> llamada .)
    OR              reduce using rule 79 (pexp -> llamada .)
    RPARENTHESIS    reduce using rule 79 (pexp -> llamada .)
    COMMA           reduce using rule 79 (pexp -> llamada .)
    SEMICOLON       reduce using rule 79 (pexp -> llamada .)


state 116

    (44) lectura -> READ LPARENTHESIS vars2 . RPARENTHESIS

    RPARENTHESIS    shift and go to state 151


state 117

    (45) escritura -> PRINT LPARENTHESIS escritura1 . RPARENTHESIS

    RPARENTHESIS    shift and go to state 152


state 118

    (46) escritura1 -> expresion . escritura2
    (47) escritura2 -> . COMMA escritura1
    (48) escritura2 -> . empty
    (83) empty -> .

    COMMA           shift and go to state 154
    RPARENTHESIS    reduce using rule 83 (empty -> .)

    escritura2                     shift and go to state 153
    empty                          shift and go to state 155

state 119

    (49) for -> FOR LPARENTHESIS FROM . asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (42) asignacion -> . ID arr EQUALS expresion

    ID              shift and go to state 157

    asignacion                     shift and go to state 156

state 120

    (50) if -> IF LPARENTHESIS expresion . RPARENTHESIS THEN LBRACKET estatuto RBRACKET else

    RPARENTHESIS    shift and go to state 158


state 121

    (53) while -> WHILE LPARENTHESIS expresion . RPARENTHESIS LBRACKET estatuto RBRACKET

    RPARENTHESIS    shift and go to state 159


state 122

    (24) parameters3 -> COMMA ID addVariable parameters3 .

    RPARENTHESIS    reduce using rule 24 (parameters3 -> COMMA ID addVariable parameters3 .)


state 123

    (25) parameters3 -> COMMA tipo ID addVariable . parameters3
    (27) parameters3 -> COMMA tipo ID addVariable .
    (24) parameters3 -> . COMMA ID addVariable parameters3
    (25) parameters3 -> . COMMA tipo ID addVariable parameters3
    (26) parameters3 -> . COMMA ID addVariable
    (27) parameters3 -> . COMMA tipo ID addVariable

    RPARENTHESIS    reduce using rule 27 (parameters3 -> COMMA tipo ID addVariable .)
    COMMA           shift and go to state 62

    parameters3                    shift and go to state 160

state 124

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno . RBRACKET funcion

    RBRACKET        shift and go to state 161


state 125

    (32) retorno -> RETURN . ID SEMICOLON

    ID              shift and go to state 162


state 126

    (29) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET . funcion
    (28) funcion -> . FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (29) funcion -> . FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (30) funcion -> . empty
    (83) empty -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 83 (empty -> .)

    funcion                        shift and go to state 163
    empty                          shift and go to state 13

state 127

    (42) asignacion -> ID arr EQUALS expresion .

    SEMICOLON       reduce using rule 42 (asignacion -> ID arr EQUALS expresion .)
    COMMA           reduce using rule 42 (asignacion -> ID arr EQUALS expresion .)


state 128

    (81) pexp -> LPARENTHESIS expresion . RPARENTHESIS

    RPARENTHESIS    shift and go to state 164


state 129

    (43) llamada -> ID LPARENTHESIS expresion RPARENTHESIS .

    SEMICOLON       reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    MULTIPLICATION  reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    DIVISION        reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    PLUS            reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    MINUS           reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    GTHAN           reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    LTHAN           reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    GTHANEQ         reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    LTHANEQ         reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    DIFFERENT       reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    AND             reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    OR              reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    COMMA           reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)


state 130

    (54) expresion -> nexp expresion1 .

    RPARENTHESIS    reduce using rule 54 (expresion -> nexp expresion1 .)
    COMMA           reduce using rule 54 (expresion -> nexp expresion1 .)
    SEMICOLON       reduce using rule 54 (expresion -> nexp expresion1 .)


state 131

    (55) expresion1 -> OR . expresion
    (54) expresion -> . nexp expresion1
    (57) nexp -> . comexp nexp1
    (60) comexp -> . sumexp compex1
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    expresion                      shift and go to state 165
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 132

    (56) expresion1 -> empty .

    RPARENTHESIS    reduce using rule 56 (expresion1 -> empty .)
    COMMA           reduce using rule 56 (expresion1 -> empty .)
    SEMICOLON       reduce using rule 56 (expresion1 -> empty .)


state 133

    (57) nexp -> comexp nexp1 .

    OR              reduce using rule 57 (nexp -> comexp nexp1 .)
    RPARENTHESIS    reduce using rule 57 (nexp -> comexp nexp1 .)
    COMMA           reduce using rule 57 (nexp -> comexp nexp1 .)
    SEMICOLON       reduce using rule 57 (nexp -> comexp nexp1 .)


state 134

    (58) nexp1 -> AND . nexp
    (57) nexp -> . comexp nexp1
    (60) comexp -> . sumexp compex1
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    nexp                           shift and go to state 166
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 135

    (59) nexp1 -> empty .

    OR              reduce using rule 59 (nexp1 -> empty .)
    RPARENTHESIS    reduce using rule 59 (nexp1 -> empty .)
    COMMA           reduce using rule 59 (nexp1 -> empty .)
    SEMICOLON       reduce using rule 59 (nexp1 -> empty .)


state 136

    (60) comexp -> sumexp compex1 .

    AND             reduce using rule 60 (comexp -> sumexp compex1 .)
    OR              reduce using rule 60 (comexp -> sumexp compex1 .)
    RPARENTHESIS    reduce using rule 60 (comexp -> sumexp compex1 .)
    COMMA           reduce using rule 60 (comexp -> sumexp compex1 .)
    SEMICOLON       reduce using rule 60 (comexp -> sumexp compex1 .)


state 137

    (61) compex1 -> GTHAN . sumexp
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    sumexp                         shift and go to state 167
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 138

    (62) compex1 -> LTHAN . sumexp
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    sumexp                         shift and go to state 168
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 139

    (63) compex1 -> GTHANEQ . sumexp
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    sumexp                         shift and go to state 169
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 140

    (64) compex1 -> LTHANEQ . sumexp
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    sumexp                         shift and go to state 170
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 141

    (65) compex1 -> DIFFERENT . sumexp
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    sumexp                         shift and go to state 171
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 142

    (66) compex1 -> empty .

    AND             reduce using rule 66 (compex1 -> empty .)
    OR              reduce using rule 66 (compex1 -> empty .)
    RPARENTHESIS    reduce using rule 66 (compex1 -> empty .)
    COMMA           reduce using rule 66 (compex1 -> empty .)
    SEMICOLON       reduce using rule 66 (compex1 -> empty .)


state 143

    (67) sumexp -> mulexp sumexp1 .

    GTHAN           reduce using rule 67 (sumexp -> mulexp sumexp1 .)
    LTHAN           reduce using rule 67 (sumexp -> mulexp sumexp1 .)
    GTHANEQ         reduce using rule 67 (sumexp -> mulexp sumexp1 .)
    LTHANEQ         reduce using rule 67 (sumexp -> mulexp sumexp1 .)
    DIFFERENT       reduce using rule 67 (sumexp -> mulexp sumexp1 .)
    AND             reduce using rule 67 (sumexp -> mulexp sumexp1 .)
    OR              reduce using rule 67 (sumexp -> mulexp sumexp1 .)
    RPARENTHESIS    reduce using rule 67 (sumexp -> mulexp sumexp1 .)
    COMMA           reduce using rule 67 (sumexp -> mulexp sumexp1 .)
    SEMICOLON       reduce using rule 67 (sumexp -> mulexp sumexp1 .)


state 144

    (68) sumexp1 -> PLUS . sumexp
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    sumexp                         shift and go to state 172
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 145

    (69) sumexp1 -> MINUS . sumexp
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    sumexp                         shift and go to state 173
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 146

    (70) sumexp1 -> empty .

    GTHAN           reduce using rule 70 (sumexp1 -> empty .)
    LTHAN           reduce using rule 70 (sumexp1 -> empty .)
    GTHANEQ         reduce using rule 70 (sumexp1 -> empty .)
    LTHANEQ         reduce using rule 70 (sumexp1 -> empty .)
    DIFFERENT       reduce using rule 70 (sumexp1 -> empty .)
    AND             reduce using rule 70 (sumexp1 -> empty .)
    OR              reduce using rule 70 (sumexp1 -> empty .)
    RPARENTHESIS    reduce using rule 70 (sumexp1 -> empty .)
    COMMA           reduce using rule 70 (sumexp1 -> empty .)
    SEMICOLON       reduce using rule 70 (sumexp1 -> empty .)


state 147

    (71) mulexp -> pexp mulexp1 .

    PLUS            reduce using rule 71 (mulexp -> pexp mulexp1 .)
    MINUS           reduce using rule 71 (mulexp -> pexp mulexp1 .)
    GTHAN           reduce using rule 71 (mulexp -> pexp mulexp1 .)
    LTHAN           reduce using rule 71 (mulexp -> pexp mulexp1 .)
    GTHANEQ         reduce using rule 71 (mulexp -> pexp mulexp1 .)
    LTHANEQ         reduce using rule 71 (mulexp -> pexp mulexp1 .)
    DIFFERENT       reduce using rule 71 (mulexp -> pexp mulexp1 .)
    AND             reduce using rule 71 (mulexp -> pexp mulexp1 .)
    OR              reduce using rule 71 (mulexp -> pexp mulexp1 .)
    RPARENTHESIS    reduce using rule 71 (mulexp -> pexp mulexp1 .)
    COMMA           reduce using rule 71 (mulexp -> pexp mulexp1 .)
    SEMICOLON       reduce using rule 71 (mulexp -> pexp mulexp1 .)


state 148

    (72) mulexp1 -> MULTIPLICATION . mulexp
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    mulexp                         shift and go to state 174
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 149

    (73) mulexp1 -> DIVISION . mulexp
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    mulexp                         shift and go to state 175
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 150

    (74) mulexp1 -> empty .

    PLUS            reduce using rule 74 (mulexp1 -> empty .)
    MINUS           reduce using rule 74 (mulexp1 -> empty .)
    GTHAN           reduce using rule 74 (mulexp1 -> empty .)
    LTHAN           reduce using rule 74 (mulexp1 -> empty .)
    GTHANEQ         reduce using rule 74 (mulexp1 -> empty .)
    LTHANEQ         reduce using rule 74 (mulexp1 -> empty .)
    DIFFERENT       reduce using rule 74 (mulexp1 -> empty .)
    AND             reduce using rule 74 (mulexp1 -> empty .)
    OR              reduce using rule 74 (mulexp1 -> empty .)
    RPARENTHESIS    reduce using rule 74 (mulexp1 -> empty .)
    COMMA           reduce using rule 74 (mulexp1 -> empty .)
    SEMICOLON       reduce using rule 74 (mulexp1 -> empty .)


state 151

    (44) lectura -> READ LPARENTHESIS vars2 RPARENTHESIS .

    SEMICOLON       reduce using rule 44 (lectura -> READ LPARENTHESIS vars2 RPARENTHESIS .)


state 152

    (45) escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS .

    SEMICOLON       reduce using rule 45 (escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS .)


state 153

    (46) escritura1 -> expresion escritura2 .

    RPARENTHESIS    reduce using rule 46 (escritura1 -> expresion escritura2 .)


state 154

    (47) escritura2 -> COMMA . escritura1
    (46) escritura1 -> . expresion escritura2
    (54) expresion -> . nexp expresion1
    (57) nexp -> . comexp nexp1
    (60) comexp -> . sumexp compex1
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    escritura1                     shift and go to state 176
    expresion                      shift and go to state 118
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 155

    (48) escritura2 -> empty .

    RPARENTHESIS    reduce using rule 48 (escritura2 -> empty .)


state 156

    (49) for -> FOR LPARENTHESIS FROM asignacion . COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    COMMA           shift and go to state 177


state 157

    (42) asignacion -> ID . arr EQUALS expresion
    (18) arr -> . LSQRBRACKET CTEI RSQRBRACKET
    (19) arr -> . empty
    (83) empty -> .

    LSQRBRACKET     shift and go to state 38
    EQUALS          reduce using rule 83 (empty -> .)

    arr                            shift and go to state 91
    empty                          shift and go to state 39

state 158

    (50) if -> IF LPARENTHESIS expresion RPARENTHESIS . THEN LBRACKET estatuto RBRACKET else

    THEN            shift and go to state 178


state 159

    (53) while -> WHILE LPARENTHESIS expresion RPARENTHESIS . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 179


state 160

    (25) parameters3 -> COMMA tipo ID addVariable parameters3 .

    RPARENTHESIS    reduce using rule 25 (parameters3 -> COMMA tipo ID addVariable parameters3 .)


state 161

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET . funcion
    (28) funcion -> . FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (29) funcion -> . FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (30) funcion -> . empty
    (83) empty -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 83 (empty -> .)

    funcion                        shift and go to state 180
    empty                          shift and go to state 13

state 162

    (32) retorno -> RETURN ID . SEMICOLON

    SEMICOLON       shift and go to state 181


state 163

    (29) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion .

    MAIN            reduce using rule 29 (funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion .)


state 164

    (81) pexp -> LPARENTHESIS expresion RPARENTHESIS .

    MULTIPLICATION  reduce using rule 81 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    DIVISION        reduce using rule 81 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    PLUS            reduce using rule 81 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    MINUS           reduce using rule 81 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    GTHAN           reduce using rule 81 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    LTHAN           reduce using rule 81 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    GTHANEQ         reduce using rule 81 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    LTHANEQ         reduce using rule 81 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    DIFFERENT       reduce using rule 81 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    AND             reduce using rule 81 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    OR              reduce using rule 81 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 81 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    COMMA           reduce using rule 81 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    SEMICOLON       reduce using rule 81 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)


state 165

    (55) expresion1 -> OR expresion .

    RPARENTHESIS    reduce using rule 55 (expresion1 -> OR expresion .)
    COMMA           reduce using rule 55 (expresion1 -> OR expresion .)
    SEMICOLON       reduce using rule 55 (expresion1 -> OR expresion .)


state 166

    (58) nexp1 -> AND nexp .

    OR              reduce using rule 58 (nexp1 -> AND nexp .)
    RPARENTHESIS    reduce using rule 58 (nexp1 -> AND nexp .)
    COMMA           reduce using rule 58 (nexp1 -> AND nexp .)
    SEMICOLON       reduce using rule 58 (nexp1 -> AND nexp .)


state 167

    (61) compex1 -> GTHAN sumexp .

    AND             reduce using rule 61 (compex1 -> GTHAN sumexp .)
    OR              reduce using rule 61 (compex1 -> GTHAN sumexp .)
    RPARENTHESIS    reduce using rule 61 (compex1 -> GTHAN sumexp .)
    COMMA           reduce using rule 61 (compex1 -> GTHAN sumexp .)
    SEMICOLON       reduce using rule 61 (compex1 -> GTHAN sumexp .)


state 168

    (62) compex1 -> LTHAN sumexp .

    AND             reduce using rule 62 (compex1 -> LTHAN sumexp .)
    OR              reduce using rule 62 (compex1 -> LTHAN sumexp .)
    RPARENTHESIS    reduce using rule 62 (compex1 -> LTHAN sumexp .)
    COMMA           reduce using rule 62 (compex1 -> LTHAN sumexp .)
    SEMICOLON       reduce using rule 62 (compex1 -> LTHAN sumexp .)


state 169

    (63) compex1 -> GTHANEQ sumexp .

    AND             reduce using rule 63 (compex1 -> GTHANEQ sumexp .)
    OR              reduce using rule 63 (compex1 -> GTHANEQ sumexp .)
    RPARENTHESIS    reduce using rule 63 (compex1 -> GTHANEQ sumexp .)
    COMMA           reduce using rule 63 (compex1 -> GTHANEQ sumexp .)
    SEMICOLON       reduce using rule 63 (compex1 -> GTHANEQ sumexp .)


state 170

    (64) compex1 -> LTHANEQ sumexp .

    AND             reduce using rule 64 (compex1 -> LTHANEQ sumexp .)
    OR              reduce using rule 64 (compex1 -> LTHANEQ sumexp .)
    RPARENTHESIS    reduce using rule 64 (compex1 -> LTHANEQ sumexp .)
    COMMA           reduce using rule 64 (compex1 -> LTHANEQ sumexp .)
    SEMICOLON       reduce using rule 64 (compex1 -> LTHANEQ sumexp .)


state 171

    (65) compex1 -> DIFFERENT sumexp .

    AND             reduce using rule 65 (compex1 -> DIFFERENT sumexp .)
    OR              reduce using rule 65 (compex1 -> DIFFERENT sumexp .)
    RPARENTHESIS    reduce using rule 65 (compex1 -> DIFFERENT sumexp .)
    COMMA           reduce using rule 65 (compex1 -> DIFFERENT sumexp .)
    SEMICOLON       reduce using rule 65 (compex1 -> DIFFERENT sumexp .)


state 172

    (68) sumexp1 -> PLUS sumexp .

    GTHAN           reduce using rule 68 (sumexp1 -> PLUS sumexp .)
    LTHAN           reduce using rule 68 (sumexp1 -> PLUS sumexp .)
    GTHANEQ         reduce using rule 68 (sumexp1 -> PLUS sumexp .)
    LTHANEQ         reduce using rule 68 (sumexp1 -> PLUS sumexp .)
    DIFFERENT       reduce using rule 68 (sumexp1 -> PLUS sumexp .)
    AND             reduce using rule 68 (sumexp1 -> PLUS sumexp .)
    OR              reduce using rule 68 (sumexp1 -> PLUS sumexp .)
    RPARENTHESIS    reduce using rule 68 (sumexp1 -> PLUS sumexp .)
    COMMA           reduce using rule 68 (sumexp1 -> PLUS sumexp .)
    SEMICOLON       reduce using rule 68 (sumexp1 -> PLUS sumexp .)


state 173

    (69) sumexp1 -> MINUS sumexp .

    GTHAN           reduce using rule 69 (sumexp1 -> MINUS sumexp .)
    LTHAN           reduce using rule 69 (sumexp1 -> MINUS sumexp .)
    GTHANEQ         reduce using rule 69 (sumexp1 -> MINUS sumexp .)
    LTHANEQ         reduce using rule 69 (sumexp1 -> MINUS sumexp .)
    DIFFERENT       reduce using rule 69 (sumexp1 -> MINUS sumexp .)
    AND             reduce using rule 69 (sumexp1 -> MINUS sumexp .)
    OR              reduce using rule 69 (sumexp1 -> MINUS sumexp .)
    RPARENTHESIS    reduce using rule 69 (sumexp1 -> MINUS sumexp .)
    COMMA           reduce using rule 69 (sumexp1 -> MINUS sumexp .)
    SEMICOLON       reduce using rule 69 (sumexp1 -> MINUS sumexp .)


state 174

    (72) mulexp1 -> MULTIPLICATION mulexp .

    PLUS            reduce using rule 72 (mulexp1 -> MULTIPLICATION mulexp .)
    MINUS           reduce using rule 72 (mulexp1 -> MULTIPLICATION mulexp .)
    GTHAN           reduce using rule 72 (mulexp1 -> MULTIPLICATION mulexp .)
    LTHAN           reduce using rule 72 (mulexp1 -> MULTIPLICATION mulexp .)
    GTHANEQ         reduce using rule 72 (mulexp1 -> MULTIPLICATION mulexp .)
    LTHANEQ         reduce using rule 72 (mulexp1 -> MULTIPLICATION mulexp .)
    DIFFERENT       reduce using rule 72 (mulexp1 -> MULTIPLICATION mulexp .)
    AND             reduce using rule 72 (mulexp1 -> MULTIPLICATION mulexp .)
    OR              reduce using rule 72 (mulexp1 -> MULTIPLICATION mulexp .)
    RPARENTHESIS    reduce using rule 72 (mulexp1 -> MULTIPLICATION mulexp .)
    COMMA           reduce using rule 72 (mulexp1 -> MULTIPLICATION mulexp .)
    SEMICOLON       reduce using rule 72 (mulexp1 -> MULTIPLICATION mulexp .)


state 175

    (73) mulexp1 -> DIVISION mulexp .

    PLUS            reduce using rule 73 (mulexp1 -> DIVISION mulexp .)
    MINUS           reduce using rule 73 (mulexp1 -> DIVISION mulexp .)
    GTHAN           reduce using rule 73 (mulexp1 -> DIVISION mulexp .)
    LTHAN           reduce using rule 73 (mulexp1 -> DIVISION mulexp .)
    GTHANEQ         reduce using rule 73 (mulexp1 -> DIVISION mulexp .)
    LTHANEQ         reduce using rule 73 (mulexp1 -> DIVISION mulexp .)
    DIFFERENT       reduce using rule 73 (mulexp1 -> DIVISION mulexp .)
    AND             reduce using rule 73 (mulexp1 -> DIVISION mulexp .)
    OR              reduce using rule 73 (mulexp1 -> DIVISION mulexp .)
    RPARENTHESIS    reduce using rule 73 (mulexp1 -> DIVISION mulexp .)
    COMMA           reduce using rule 73 (mulexp1 -> DIVISION mulexp .)
    SEMICOLON       reduce using rule 73 (mulexp1 -> DIVISION mulexp .)


state 176

    (47) escritura2 -> COMMA escritura1 .

    RPARENTHESIS    reduce using rule 47 (escritura2 -> COMMA escritura1 .)


state 177

    (49) for -> FOR LPARENTHESIS FROM asignacion COMMA . TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    TO              shift and go to state 182


state 178

    (50) if -> IF LPARENTHESIS expresion RPARENTHESIS THEN . LBRACKET estatuto RBRACKET else

    LBRACKET        shift and go to state 183


state 179

    (53) while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET . estatuto RBRACKET
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (83) empty -> .
    (42) asignacion -> . ID arr EQUALS expresion
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (44) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (45) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (49) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (50) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (53) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 83 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 184
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 180

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion .

    MAIN            reduce using rule 28 (funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion .)


state 181

    (32) retorno -> RETURN ID SEMICOLON .

    RBRACKET        reduce using rule 32 (retorno -> RETURN ID SEMICOLON .)


state 182

    (49) for -> FOR LPARENTHESIS FROM asignacion COMMA TO . expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (54) expresion -> . nexp expresion1
    (57) nexp -> . comexp nexp1
    (60) comexp -> . sumexp compex1
    (67) sumexp -> . mulexp sumexp1
    (71) mulexp -> . pexp mulexp1
    (75) pexp -> . CTEI
    (76) pexp -> . CTEF
    (77) pexp -> . CTEC
    (78) pexp -> . CTESTRING
    (79) pexp -> . llamada
    (80) pexp -> . ID
    (81) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    expresion                      shift and go to state 185
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 183

    (50) if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET . estatuto RBRACKET else
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (83) empty -> .
    (42) asignacion -> . ID arr EQUALS expresion
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (44) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (45) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (49) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (50) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (53) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 83 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 186
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 184

    (53) while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 187


state 185

    (49) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion . RPARENTHESIS LBRACKET estatuto RBRACKET

    RPARENTHESIS    shift and go to state 188


state 186

    (50) if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto . RBRACKET else

    RBRACKET        shift and go to state 189


state 187

    (53) while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .

    ID              reduce using rule 53 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    READ            reduce using rule 53 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    PRINT           reduce using rule 53 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    FOR             reduce using rule 53 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    IF              reduce using rule 53 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    WHILE           reduce using rule 53 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    RBRACKET        reduce using rule 53 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    RETURN          reduce using rule 53 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)


state 188

    (49) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 190


state 189

    (50) if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET . else
    (51) else -> . ELSE LBRACKET estatuto RBRACKET
    (52) else -> . empty
    (83) empty -> .

    ELSE            shift and go to state 192
    ID              reduce using rule 83 (empty -> .)
    READ            reduce using rule 83 (empty -> .)
    PRINT           reduce using rule 83 (empty -> .)
    FOR             reduce using rule 83 (empty -> .)
    IF              reduce using rule 83 (empty -> .)
    WHILE           reduce using rule 83 (empty -> .)
    RBRACKET        reduce using rule 83 (empty -> .)
    RETURN          reduce using rule 83 (empty -> .)

    else                           shift and go to state 191
    empty                          shift and go to state 193

state 190

    (49) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET . estatuto RBRACKET
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (83) empty -> .
    (42) asignacion -> . ID arr EQUALS expresion
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (44) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (45) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (49) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (50) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (53) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 83 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    asignacion                     shift and go to state 68
    estatuto                       shift and go to state 194
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 191

    (50) if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .

    ID              reduce using rule 50 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    READ            reduce using rule 50 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    PRINT           reduce using rule 50 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    FOR             reduce using rule 50 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    IF              reduce using rule 50 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    WHILE           reduce using rule 50 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    RBRACKET        reduce using rule 50 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    RETURN          reduce using rule 50 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)


state 192

    (51) else -> ELSE . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 195


state 193

    (52) else -> empty .

    ID              reduce using rule 52 (else -> empty .)
    READ            reduce using rule 52 (else -> empty .)
    PRINT           reduce using rule 52 (else -> empty .)
    FOR             reduce using rule 52 (else -> empty .)
    IF              reduce using rule 52 (else -> empty .)
    WHILE           reduce using rule 52 (else -> empty .)
    RBRACKET        reduce using rule 52 (else -> empty .)
    RETURN          reduce using rule 52 (else -> empty .)


state 194

    (49) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 196


state 195

    (51) else -> ELSE LBRACKET . estatuto RBRACKET
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (83) empty -> .
    (42) asignacion -> . ID arr EQUALS expresion
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (44) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (45) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (49) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (50) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (53) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 83 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 197
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 196

    (49) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .

    ID              reduce using rule 49 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    READ            reduce using rule 49 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    PRINT           reduce using rule 49 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    FOR             reduce using rule 49 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    IF              reduce using rule 49 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    WHILE           reduce using rule 49 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    RBRACKET        reduce using rule 49 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    RETURN          reduce using rule 49 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)


state 197

    (51) else -> ELSE LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 198


state 198

    (51) else -> ELSE LBRACKET estatuto RBRACKET .

    ID              reduce using rule 51 (else -> ELSE LBRACKET estatuto RBRACKET .)
    READ            reduce using rule 51 (else -> ELSE LBRACKET estatuto RBRACKET .)
    PRINT           reduce using rule 51 (else -> ELSE LBRACKET estatuto RBRACKET .)
    FOR             reduce using rule 51 (else -> ELSE LBRACKET estatuto RBRACKET .)
    IF              reduce using rule 51 (else -> ELSE LBRACKET estatuto RBRACKET .)
    WHILE           reduce using rule 51 (else -> ELSE LBRACKET estatuto RBRACKET .)
    RBRACKET        reduce using rule 51 (else -> ELSE LBRACKET estatuto RBRACKET .)
    RETURN          reduce using rule 51 (else -> ELSE LBRACKET estatuto RBRACKET .)


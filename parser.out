Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID addProgram SEMICOLON programa1 END
Rule 2     addProgram -> <empty>
Rule 3     programa1 -> vars funcion principal
Rule 4     principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
Rule 5     addMain -> <empty>
Rule 6     vars -> VAR vars1
Rule 7     vars -> empty
Rule 8     vars1 -> tipo vars2 SEMICOLON varsadd
Rule 9     vars2 -> ID addVariable arr vars3
Rule 10    vars3 -> COMMA vars2
Rule 11    vars3 -> empty
Rule 12    varsadd -> vars1
Rule 13    varsadd -> empty
Rule 14    tipo -> INT
Rule 15    tipo -> FLOAT
Rule 16    tipo -> CHAR
Rule 17    tipo -> STRING
Rule 18    arr -> LSQRBRACKET CTEI RSQRBRACKET
Rule 19    arr -> empty
Rule 20    parameters -> parameters2
Rule 21    parameters -> empty
Rule 22    parameters2 -> tipo ID addVariable
Rule 23    parameters2 -> tipo ID addVariable parameters3
Rule 24    parameters3 -> COMMA ID addVariable parameters3
Rule 25    parameters3 -> COMMA tipo ID addVariable parameters3
Rule 26    parameters3 -> COMMA ID addVariable
Rule 27    parameters3 -> COMMA tipo ID addVariable
Rule 28    funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
Rule 29    funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
Rule 30    funcion -> empty
Rule 31    addFunction -> <empty>
Rule 32    retorno -> RETURN ID SEMICOLON
Rule 33    estatuto -> estatuto2 estatuto
Rule 34    estatuto -> empty
Rule 35    estatuto2 -> asignacion SEMICOLON
Rule 36    estatuto2 -> llamada SEMICOLON
Rule 37    estatuto2 -> lectura SEMICOLON
Rule 38    estatuto2 -> escritura SEMICOLON
Rule 39    estatuto2 -> for
Rule 40    estatuto2 -> if
Rule 41    estatuto2 -> while
Rule 42    asignacion -> ID addId arr EQUAL addOperator expresion quadEqual
Rule 43    llamada -> ID LPARENTHESIS expresion RPARENTHESIS
Rule 44    lectura -> READ readOperator LPARENTHESIS expresion RPARENTHESIS
Rule 45    readOperator -> <empty>
Rule 46    escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS
Rule 47    escritura1 -> printOperator expresion printQuad escritura2
Rule 48    escritura2 -> COMMA escritura1
Rule 49    escritura2 -> empty
Rule 50    printOperator -> <empty>
Rule 51    for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
Rule 52    if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else
Rule 53    else -> ELSE LBRACKET estatuto RBRACKET
Rule 54    else -> empty
Rule 55    while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET
Rule 56    expresion -> nexp orQuad expresion1
Rule 57    expresion1 -> OR addOperator expresion
Rule 58    expresion1 -> empty
Rule 59    nexp -> comexp andQuad nexp1
Rule 60    nexp1 -> AND addOperator nexp
Rule 61    nexp1 -> empty
Rule 62    comexp -> sumexp compQuad compex1 compQuad
Rule 63    compex1 -> GTHAN addOperator sumexp
Rule 64    compex1 -> LTHAN addOperator sumexp
Rule 65    compex1 -> GTHANEQ addOperator sumexp
Rule 66    compex1 -> LTHANEQ addOperator sumexp
Rule 67    compex1 -> DIFFERENT addOperator sumexp
Rule 68    compex1 -> EQUALS addOperator sumexp
Rule 69    compex1 -> empty
Rule 70    sumexp -> mulexp plusQuad sumexp1
Rule 71    sumexp1 -> PLUS addOperator sumexp
Rule 72    sumexp1 -> MINUS addOperator sumexp
Rule 73    sumexp1 -> empty
Rule 74    mulexp -> pexp multQuad mulexp1
Rule 75    mulexp1 -> MULTIPLICATION addOperator mulexp
Rule 76    mulexp1 -> DIVISION addOperator mulexp
Rule 77    mulexp1 -> empty
Rule 78    pexp -> CTEI addOperandCte
Rule 79    pexp -> CTEF addOperandCte
Rule 80    pexp -> CTEC addOperandCte
Rule 81    pexp -> CTESTRING addOperandCte
Rule 82    pexp -> llamada
Rule 83    pexp -> ID addOperandVar
Rule 84    pexp -> LPARENTHESIS expresion RPARENTHESIS
Rule 85    addVariable -> <empty>
Rule 86    genQuad -> <empty>
Rule 87    orQuad -> <empty>
Rule 88    andQuad -> <empty>
Rule 89    compQuad -> <empty>
Rule 90    multQuad -> <empty>
Rule 91    plusQuad -> <empty>
Rule 92    quadEqual -> <empty>
Rule 93    printQuad -> <empty>
Rule 94    addOperator -> <empty>
Rule 95    addOperandVar -> <empty>
Rule 96    addOperandCte -> <empty>
Rule 97    addId -> <empty>
Rule 98    ifQuad -> <empty>
Rule 99    empty -> <empty>

Terminals, with rules where they appear

AND                  : 60
CHAR                 : 16
COMMA                : 10 24 25 26 27 48 51
CTEC                 : 80
CTEF                 : 79
CTEI                 : 18 78
CTESTRING            : 81
DIFFERENT            : 67
DIVISION             : 76
ELSE                 : 53
END                  : 1
EQUAL                : 42
EQUALS               : 68
FLOAT                : 15
FOR                  : 51
FROM                 : 51
FUNCTION             : 28 29
GTHAN                : 63
GTHANEQ              : 65
ID                   : 1 9 22 23 24 25 26 27 28 29 32 42 43 83
IF                   : 52
INT                  : 14
LBRACKET             : 4 28 29 51 52 53 55
LPARENTHESIS         : 4 28 29 43 44 46 51 52 55 84
LSQRBRACKET          : 18
LTHAN                : 64
LTHANEQ              : 66
MAIN                 : 4
MINUS                : 72
MULTIPLICATION       : 75
OR                   : 57
PLUS                 : 71
PRINT                : 46
PROGRAM              : 1
RBRACKET             : 4 28 29 51 52 53 55
READ                 : 44
RETURN               : 32
RPARENTHESIS         : 4 28 29 43 44 46 51 52 55 84
RSQRBRACKET          : 18
SEMICOLON            : 1 8 32 35 36 37 38
STRING               : 17
THEN                 : 52
TO                   : 51
VAR                  : 6
VOID                 : 29
WHILE                : 55
error                : 

Nonterminals, with rules where they appear

addFunction          : 28 29
addId                : 42
addMain              : 4
addOperandCte        : 78 79 80 81
addOperandVar        : 83
addOperator          : 42 57 60 63 64 65 66 67 68 71 72 75 76
addProgram           : 1
addVariable          : 9 22 23 24 25 26 27
andQuad              : 59
arr                  : 9 42
asignacion           : 35 51
comexp               : 59
compQuad             : 62 62
compex1              : 62
else                 : 52
empty                : 7 11 13 19 21 30 34 49 54 58 61 69 73 77
escritura            : 38
escritura1           : 46 48
escritura2           : 47
estatuto             : 4 28 29 33 51 52 53 55
estatuto2            : 33
expresion            : 42 43 44 47 51 52 55 57 84
expresion1           : 56
for                  : 39
funcion              : 3 28 29
genQuad              : 
if                   : 40
ifQuad               : 52
lectura              : 37
llamada              : 36 82
mulexp               : 70 75 76
mulexp1              : 74
multQuad             : 74
nexp                 : 56 60
nexp1                : 59
orQuad               : 56
parameters           : 4 28 29
parameters2          : 20
parameters3          : 23 24 25
pexp                 : 74
plusQuad             : 70
principal            : 3
printOperator        : 47
printQuad            : 47
programa             : 0
programa1            : 1
quadEqual            : 42
readOperator         : 44
retorno              : 28
sumexp               : 62 63 64 65 66 67 68 71 72
sumexp1              : 70
tipo                 : 8 22 23 25 27 28
vars                 : 3 4 28 29
vars1                : 6 12
vars2                : 8 10
vars3                : 9
varsadd              : 8
while                : 41

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID addProgram SEMICOLON programa1 END

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID addProgram SEMICOLON programa1 END

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . addProgram SEMICOLON programa1 END
    (2) addProgram -> .

    SEMICOLON       reduce using rule 2 (addProgram -> .)

    addProgram                     shift and go to state 4

state 4

    (1) programa -> PROGRAM ID addProgram . SEMICOLON programa1 END

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID addProgram SEMICOLON . programa1 END
    (3) programa1 -> . vars funcion principal
    (6) vars -> . VAR vars1
    (7) vars -> . empty
    (99) empty -> .

    VAR             shift and go to state 8
    FUNCTION        reduce using rule 99 (empty -> .)
    MAIN            reduce using rule 99 (empty -> .)

    programa1                      shift and go to state 6
    vars                           shift and go to state 7
    empty                          shift and go to state 9

state 6

    (1) programa -> PROGRAM ID addProgram SEMICOLON programa1 . END

    END             shift and go to state 10


state 7

    (3) programa1 -> vars . funcion principal
    (28) funcion -> . FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (29) funcion -> . FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (30) funcion -> . empty
    (99) empty -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 99 (empty -> .)

    funcion                        shift and go to state 11
    empty                          shift and go to state 13

state 8

    (6) vars -> VAR . vars1
    (8) vars1 -> . tipo vars2 SEMICOLON varsadd
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    vars1                          shift and go to state 14
    tipo                           shift and go to state 15

state 9

    (7) vars -> empty .

    FUNCTION        reduce using rule 7 (vars -> empty .)
    MAIN            reduce using rule 7 (vars -> empty .)
    LBRACKET        reduce using rule 7 (vars -> empty .)


state 10

    (1) programa -> PROGRAM ID addProgram SEMICOLON programa1 END .

    $end            reduce using rule 1 (programa -> PROGRAM ID addProgram SEMICOLON programa1 END .)


state 11

    (3) programa1 -> vars funcion . principal
    (4) principal -> . MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET

    MAIN            shift and go to state 21

    principal                      shift and go to state 20

state 12

    (28) funcion -> FUNCTION . tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (29) funcion -> FUNCTION . VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    VOID            shift and go to state 23
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 22

state 13

    (30) funcion -> empty .

    MAIN            reduce using rule 30 (funcion -> empty .)


state 14

    (6) vars -> VAR vars1 .

    FUNCTION        reduce using rule 6 (vars -> VAR vars1 .)
    MAIN            reduce using rule 6 (vars -> VAR vars1 .)
    LBRACKET        reduce using rule 6 (vars -> VAR vars1 .)


state 15

    (8) vars1 -> tipo . vars2 SEMICOLON varsadd
    (9) vars2 -> . ID addVariable arr vars3

    ID              shift and go to state 25

    vars2                          shift and go to state 24

state 16

    (14) tipo -> INT .

    ID              reduce using rule 14 (tipo -> INT .)


state 17

    (15) tipo -> FLOAT .

    ID              reduce using rule 15 (tipo -> FLOAT .)


state 18

    (16) tipo -> CHAR .

    ID              reduce using rule 16 (tipo -> CHAR .)


state 19

    (17) tipo -> STRING .

    ID              reduce using rule 17 (tipo -> STRING .)


state 20

    (3) programa1 -> vars funcion principal .

    END             reduce using rule 3 (programa1 -> vars funcion principal .)


state 21

    (4) principal -> MAIN . addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
    (5) addMain -> .

    LPARENTHESIS    reduce using rule 5 (addMain -> .)

    addMain                        shift and go to state 26

state 22

    (28) funcion -> FUNCTION tipo . ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion

    ID              shift and go to state 27


state 23

    (29) funcion -> FUNCTION VOID . ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion

    ID              shift and go to state 28


state 24

    (8) vars1 -> tipo vars2 . SEMICOLON varsadd

    SEMICOLON       shift and go to state 29


state 25

    (9) vars2 -> ID . addVariable arr vars3
    (85) addVariable -> .

    LSQRBRACKET     reduce using rule 85 (addVariable -> .)
    COMMA           reduce using rule 85 (addVariable -> .)
    SEMICOLON       reduce using rule 85 (addVariable -> .)

    addVariable                    shift and go to state 30

state 26

    (4) principal -> MAIN addMain . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET

    LPARENTHESIS    shift and go to state 31


state 27

    (28) funcion -> FUNCTION tipo ID . addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (31) addFunction -> .

    LPARENTHESIS    reduce using rule 31 (addFunction -> .)

    addFunction                    shift and go to state 32

state 28

    (29) funcion -> FUNCTION VOID ID . addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (31) addFunction -> .

    LPARENTHESIS    reduce using rule 31 (addFunction -> .)

    addFunction                    shift and go to state 33

state 29

    (8) vars1 -> tipo vars2 SEMICOLON . varsadd
    (12) varsadd -> . vars1
    (13) varsadd -> . empty
    (8) vars1 -> . tipo vars2 SEMICOLON varsadd
    (99) empty -> .
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    FUNCTION        reduce using rule 99 (empty -> .)
    MAIN            reduce using rule 99 (empty -> .)
    LBRACKET        reduce using rule 99 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 15
    varsadd                        shift and go to state 34
    vars1                          shift and go to state 35
    empty                          shift and go to state 36

state 30

    (9) vars2 -> ID addVariable . arr vars3
    (18) arr -> . LSQRBRACKET CTEI RSQRBRACKET
    (19) arr -> . empty
    (99) empty -> .

    LSQRBRACKET     shift and go to state 38
    COMMA           reduce using rule 99 (empty -> .)
    SEMICOLON       reduce using rule 99 (empty -> .)

    arr                            shift and go to state 37
    empty                          shift and go to state 39

state 31

    (4) principal -> MAIN addMain LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
    (20) parameters -> . parameters2
    (21) parameters -> . empty
    (22) parameters2 -> . tipo ID addVariable
    (23) parameters2 -> . tipo ID addVariable parameters3
    (99) empty -> .
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    RPARENTHESIS    reduce using rule 99 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    parameters                     shift and go to state 40
    parameters2                    shift and go to state 41
    empty                          shift and go to state 42
    tipo                           shift and go to state 43

state 32

    (28) funcion -> FUNCTION tipo ID addFunction . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion

    LPARENTHESIS    shift and go to state 44


state 33

    (29) funcion -> FUNCTION VOID ID addFunction . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion

    LPARENTHESIS    shift and go to state 45


state 34

    (8) vars1 -> tipo vars2 SEMICOLON varsadd .

    FUNCTION        reduce using rule 8 (vars1 -> tipo vars2 SEMICOLON varsadd .)
    MAIN            reduce using rule 8 (vars1 -> tipo vars2 SEMICOLON varsadd .)
    LBRACKET        reduce using rule 8 (vars1 -> tipo vars2 SEMICOLON varsadd .)


state 35

    (12) varsadd -> vars1 .

    FUNCTION        reduce using rule 12 (varsadd -> vars1 .)
    MAIN            reduce using rule 12 (varsadd -> vars1 .)
    LBRACKET        reduce using rule 12 (varsadd -> vars1 .)


state 36

    (13) varsadd -> empty .

    FUNCTION        reduce using rule 13 (varsadd -> empty .)
    MAIN            reduce using rule 13 (varsadd -> empty .)
    LBRACKET        reduce using rule 13 (varsadd -> empty .)


state 37

    (9) vars2 -> ID addVariable arr . vars3
    (10) vars3 -> . COMMA vars2
    (11) vars3 -> . empty
    (99) empty -> .

    COMMA           shift and go to state 47
    SEMICOLON       reduce using rule 99 (empty -> .)

    vars3                          shift and go to state 46
    empty                          shift and go to state 48

state 38

    (18) arr -> LSQRBRACKET . CTEI RSQRBRACKET

    CTEI            shift and go to state 49


state 39

    (19) arr -> empty .

    COMMA           reduce using rule 19 (arr -> empty .)
    SEMICOLON       reduce using rule 19 (arr -> empty .)
    EQUAL           reduce using rule 19 (arr -> empty .)


state 40

    (4) principal -> MAIN addMain LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto RBRACKET

    RPARENTHESIS    shift and go to state 50


state 41

    (20) parameters -> parameters2 .

    RPARENTHESIS    reduce using rule 20 (parameters -> parameters2 .)


state 42

    (21) parameters -> empty .

    RPARENTHESIS    reduce using rule 21 (parameters -> empty .)


state 43

    (22) parameters2 -> tipo . ID addVariable
    (23) parameters2 -> tipo . ID addVariable parameters3

    ID              shift and go to state 51


state 44

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (20) parameters -> . parameters2
    (21) parameters -> . empty
    (22) parameters2 -> . tipo ID addVariable
    (23) parameters2 -> . tipo ID addVariable parameters3
    (99) empty -> .
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    RPARENTHESIS    reduce using rule 99 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 43
    parameters                     shift and go to state 52
    parameters2                    shift and go to state 41
    empty                          shift and go to state 42

state 45

    (29) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (20) parameters -> . parameters2
    (21) parameters -> . empty
    (22) parameters2 -> . tipo ID addVariable
    (23) parameters2 -> . tipo ID addVariable parameters3
    (99) empty -> .
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    RPARENTHESIS    reduce using rule 99 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    parameters                     shift and go to state 53
    parameters2                    shift and go to state 41
    empty                          shift and go to state 42
    tipo                           shift and go to state 43

state 46

    (9) vars2 -> ID addVariable arr vars3 .

    SEMICOLON       reduce using rule 9 (vars2 -> ID addVariable arr vars3 .)


state 47

    (10) vars3 -> COMMA . vars2
    (9) vars2 -> . ID addVariable arr vars3

    ID              shift and go to state 25

    vars2                          shift and go to state 54

state 48

    (11) vars3 -> empty .

    SEMICOLON       reduce using rule 11 (vars3 -> empty .)


state 49

    (18) arr -> LSQRBRACKET CTEI . RSQRBRACKET

    RSQRBRACKET     shift and go to state 55


state 50

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto RBRACKET
    (6) vars -> . VAR vars1
    (7) vars -> . empty
    (99) empty -> .

    VAR             shift and go to state 8
    LBRACKET        reduce using rule 99 (empty -> .)

    vars                           shift and go to state 56
    empty                          shift and go to state 9

state 51

    (22) parameters2 -> tipo ID . addVariable
    (23) parameters2 -> tipo ID . addVariable parameters3
    (85) addVariable -> .

    COMMA           reduce using rule 85 (addVariable -> .)
    RPARENTHESIS    reduce using rule 85 (addVariable -> .)

    addVariable                    shift and go to state 57

state 52

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion

    RPARENTHESIS    shift and go to state 58


state 53

    (29) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion

    RPARENTHESIS    shift and go to state 59


state 54

    (10) vars3 -> COMMA vars2 .

    SEMICOLON       reduce using rule 10 (vars3 -> COMMA vars2 .)


state 55

    (18) arr -> LSQRBRACKET CTEI RSQRBRACKET .

    COMMA           reduce using rule 18 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)
    SEMICOLON       reduce using rule 18 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)
    EQUAL           reduce using rule 18 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)


state 56

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 60


state 57

    (22) parameters2 -> tipo ID addVariable .
    (23) parameters2 -> tipo ID addVariable . parameters3
    (24) parameters3 -> . COMMA ID addVariable parameters3
    (25) parameters3 -> . COMMA tipo ID addVariable parameters3
    (26) parameters3 -> . COMMA ID addVariable
    (27) parameters3 -> . COMMA tipo ID addVariable

    RPARENTHESIS    reduce using rule 22 (parameters2 -> tipo ID addVariable .)
    COMMA           shift and go to state 62

    parameters3                    shift and go to state 61

state 58

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto retorno RBRACKET funcion
    (6) vars -> . VAR vars1
    (7) vars -> . empty
    (99) empty -> .

    VAR             shift and go to state 8
    LBRACKET        reduce using rule 99 (empty -> .)

    vars                           shift and go to state 63
    empty                          shift and go to state 9

state 59

    (29) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto RBRACKET funcion
    (6) vars -> . VAR vars1
    (7) vars -> . empty
    (99) empty -> .

    VAR             shift and go to state 8
    LBRACKET        reduce using rule 99 (empty -> .)

    vars                           shift and go to state 64
    empty                          shift and go to state 9

state 60

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto RBRACKET
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (99) empty -> .
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (44) lectura -> . READ readOperator LPARENTHESIS expresion RPARENTHESIS
    (46) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (51) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (52) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else
    (55) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 99 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 65
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 61

    (23) parameters2 -> tipo ID addVariable parameters3 .

    RPARENTHESIS    reduce using rule 23 (parameters2 -> tipo ID addVariable parameters3 .)


state 62

    (24) parameters3 -> COMMA . ID addVariable parameters3
    (25) parameters3 -> COMMA . tipo ID addVariable parameters3
    (26) parameters3 -> COMMA . ID addVariable
    (27) parameters3 -> COMMA . tipo ID addVariable
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    ID              shift and go to state 81
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 82

state 63

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto retorno RBRACKET funcion

    LBRACKET        shift and go to state 83


state 64

    (29) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto RBRACKET funcion

    LBRACKET        shift and go to state 84


state 65

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 85


state 66

    (33) estatuto -> estatuto2 . estatuto
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (99) empty -> .
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (44) lectura -> . READ readOperator LPARENTHESIS expresion RPARENTHESIS
    (46) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (51) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (52) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else
    (55) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 99 (empty -> .)
    RETURN          reduce using rule 99 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto2                      shift and go to state 66
    estatuto                       shift and go to state 86
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 67

    (34) estatuto -> empty .

    RBRACKET        reduce using rule 34 (estatuto -> empty .)
    RETURN          reduce using rule 34 (estatuto -> empty .)


state 68

    (35) estatuto2 -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 87


state 69

    (36) estatuto2 -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 88


state 70

    (37) estatuto2 -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 89


state 71

    (38) estatuto2 -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 90


state 72

    (39) estatuto2 -> for .

    ID              reduce using rule 39 (estatuto2 -> for .)
    READ            reduce using rule 39 (estatuto2 -> for .)
    PRINT           reduce using rule 39 (estatuto2 -> for .)
    FOR             reduce using rule 39 (estatuto2 -> for .)
    IF              reduce using rule 39 (estatuto2 -> for .)
    WHILE           reduce using rule 39 (estatuto2 -> for .)
    RBRACKET        reduce using rule 39 (estatuto2 -> for .)
    RETURN          reduce using rule 39 (estatuto2 -> for .)


state 73

    (40) estatuto2 -> if .

    ID              reduce using rule 40 (estatuto2 -> if .)
    READ            reduce using rule 40 (estatuto2 -> if .)
    PRINT           reduce using rule 40 (estatuto2 -> if .)
    FOR             reduce using rule 40 (estatuto2 -> if .)
    IF              reduce using rule 40 (estatuto2 -> if .)
    WHILE           reduce using rule 40 (estatuto2 -> if .)
    RBRACKET        reduce using rule 40 (estatuto2 -> if .)
    RETURN          reduce using rule 40 (estatuto2 -> if .)


state 74

    (41) estatuto2 -> while .

    ID              reduce using rule 41 (estatuto2 -> while .)
    READ            reduce using rule 41 (estatuto2 -> while .)
    PRINT           reduce using rule 41 (estatuto2 -> while .)
    FOR             reduce using rule 41 (estatuto2 -> while .)
    IF              reduce using rule 41 (estatuto2 -> while .)
    WHILE           reduce using rule 41 (estatuto2 -> while .)
    RBRACKET        reduce using rule 41 (estatuto2 -> while .)
    RETURN          reduce using rule 41 (estatuto2 -> while .)


state 75

    (42) asignacion -> ID . addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> ID . LPARENTHESIS expresion RPARENTHESIS
    (97) addId -> .

    LPARENTHESIS    shift and go to state 92
    LSQRBRACKET     reduce using rule 97 (addId -> .)
    EQUAL           reduce using rule 97 (addId -> .)

    addId                          shift and go to state 91

state 76

    (44) lectura -> READ . readOperator LPARENTHESIS expresion RPARENTHESIS
    (45) readOperator -> .

    LPARENTHESIS    reduce using rule 45 (readOperator -> .)

    readOperator                   shift and go to state 93

state 77

    (46) escritura -> PRINT . LPARENTHESIS escritura1 RPARENTHESIS

    LPARENTHESIS    shift and go to state 94


state 78

    (51) for -> FOR . LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    LPARENTHESIS    shift and go to state 95


state 79

    (52) if -> IF . LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else

    LPARENTHESIS    shift and go to state 96


state 80

    (55) while -> WHILE . LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    LPARENTHESIS    shift and go to state 97


state 81

    (24) parameters3 -> COMMA ID . addVariable parameters3
    (26) parameters3 -> COMMA ID . addVariable
    (85) addVariable -> .

    COMMA           reduce using rule 85 (addVariable -> .)
    RPARENTHESIS    reduce using rule 85 (addVariable -> .)

    addVariable                    shift and go to state 98

state 82

    (25) parameters3 -> COMMA tipo . ID addVariable parameters3
    (27) parameters3 -> COMMA tipo . ID addVariable

    ID              shift and go to state 99


state 83

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto retorno RBRACKET funcion
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (99) empty -> .
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (44) lectura -> . READ readOperator LPARENTHESIS expresion RPARENTHESIS
    (46) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (51) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (52) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else
    (55) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RETURN          reduce using rule 99 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 100
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 84

    (29) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto RBRACKET funcion
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (99) empty -> .
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (44) lectura -> . READ readOperator LPARENTHESIS expresion RPARENTHESIS
    (46) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (51) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (52) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else
    (55) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 99 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 101
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 85

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET .

    END             reduce using rule 4 (principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET .)


state 86

    (33) estatuto -> estatuto2 estatuto .

    RBRACKET        reduce using rule 33 (estatuto -> estatuto2 estatuto .)
    RETURN          reduce using rule 33 (estatuto -> estatuto2 estatuto .)


state 87

    (35) estatuto2 -> asignacion SEMICOLON .

    ID              reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    READ            reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    PRINT           reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    FOR             reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    IF              reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    WHILE           reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    RBRACKET        reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    RETURN          reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)


state 88

    (36) estatuto2 -> llamada SEMICOLON .

    ID              reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    READ            reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    PRINT           reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    FOR             reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    IF              reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    WHILE           reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    RBRACKET        reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    RETURN          reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)


state 89

    (37) estatuto2 -> lectura SEMICOLON .

    ID              reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    READ            reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    PRINT           reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    FOR             reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    IF              reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    WHILE           reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    RBRACKET        reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    RETURN          reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)


state 90

    (38) estatuto2 -> escritura SEMICOLON .

    ID              reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    READ            reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    PRINT           reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    FOR             reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    IF              reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    WHILE           reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    RBRACKET        reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    RETURN          reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)


state 91

    (42) asignacion -> ID addId . arr EQUAL addOperator expresion quadEqual
    (18) arr -> . LSQRBRACKET CTEI RSQRBRACKET
    (19) arr -> . empty
    (99) empty -> .

    LSQRBRACKET     shift and go to state 38
    EQUAL           reduce using rule 99 (empty -> .)

    arr                            shift and go to state 102
    empty                          shift and go to state 39

state 92

    (43) llamada -> ID LPARENTHESIS . expresion RPARENTHESIS
    (56) expresion -> . nexp orQuad expresion1
    (59) nexp -> . comexp andQuad nexp1
    (62) comexp -> . sumexp compQuad compex1 compQuad
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    expresion                      shift and go to state 105
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 93

    (44) lectura -> READ readOperator . LPARENTHESIS expresion RPARENTHESIS

    LPARENTHESIS    shift and go to state 116


state 94

    (46) escritura -> PRINT LPARENTHESIS . escritura1 RPARENTHESIS
    (47) escritura1 -> . printOperator expresion printQuad escritura2
    (50) printOperator -> .

    CTEI            reduce using rule 50 (printOperator -> .)
    CTEF            reduce using rule 50 (printOperator -> .)
    CTEC            reduce using rule 50 (printOperator -> .)
    CTESTRING       reduce using rule 50 (printOperator -> .)
    ID              reduce using rule 50 (printOperator -> .)
    LPARENTHESIS    reduce using rule 50 (printOperator -> .)

    escritura1                     shift and go to state 117
    printOperator                  shift and go to state 118

state 95

    (51) for -> FOR LPARENTHESIS . FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    FROM            shift and go to state 119


state 96

    (52) if -> IF LPARENTHESIS . expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else
    (56) expresion -> . nexp orQuad expresion1
    (59) nexp -> . comexp andQuad nexp1
    (62) comexp -> . sumexp compQuad compex1 compQuad
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    expresion                      shift and go to state 120
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 97

    (55) while -> WHILE LPARENTHESIS . expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (56) expresion -> . nexp orQuad expresion1
    (59) nexp -> . comexp andQuad nexp1
    (62) comexp -> . sumexp compQuad compex1 compQuad
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    expresion                      shift and go to state 121
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 98

    (24) parameters3 -> COMMA ID addVariable . parameters3
    (26) parameters3 -> COMMA ID addVariable .
    (24) parameters3 -> . COMMA ID addVariable parameters3
    (25) parameters3 -> . COMMA tipo ID addVariable parameters3
    (26) parameters3 -> . COMMA ID addVariable
    (27) parameters3 -> . COMMA tipo ID addVariable

    RPARENTHESIS    reduce using rule 26 (parameters3 -> COMMA ID addVariable .)
    COMMA           shift and go to state 62

    parameters3                    shift and go to state 122

state 99

    (25) parameters3 -> COMMA tipo ID . addVariable parameters3
    (27) parameters3 -> COMMA tipo ID . addVariable
    (85) addVariable -> .

    COMMA           reduce using rule 85 (addVariable -> .)
    RPARENTHESIS    reduce using rule 85 (addVariable -> .)

    addVariable                    shift and go to state 123

state 100

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . retorno RBRACKET funcion
    (32) retorno -> . RETURN ID SEMICOLON

    RETURN          shift and go to state 125

    retorno                        shift and go to state 124

state 101

    (29) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . RBRACKET funcion

    RBRACKET        shift and go to state 126


state 102

    (42) asignacion -> ID addId arr . EQUAL addOperator expresion quadEqual

    EQUAL           shift and go to state 127


state 103

    (83) pexp -> ID . addOperandVar
    (43) llamada -> ID . LPARENTHESIS expresion RPARENTHESIS
    (95) addOperandVar -> .

    LPARENTHESIS    shift and go to state 92
    MULTIPLICATION  reduce using rule 95 (addOperandVar -> .)
    DIVISION        reduce using rule 95 (addOperandVar -> .)
    PLUS            reduce using rule 95 (addOperandVar -> .)
    MINUS           reduce using rule 95 (addOperandVar -> .)
    GTHAN           reduce using rule 95 (addOperandVar -> .)
    LTHAN           reduce using rule 95 (addOperandVar -> .)
    GTHANEQ         reduce using rule 95 (addOperandVar -> .)
    LTHANEQ         reduce using rule 95 (addOperandVar -> .)
    DIFFERENT       reduce using rule 95 (addOperandVar -> .)
    EQUALS          reduce using rule 95 (addOperandVar -> .)
    AND             reduce using rule 95 (addOperandVar -> .)
    OR              reduce using rule 95 (addOperandVar -> .)
    RPARENTHESIS    reduce using rule 95 (addOperandVar -> .)
    COMMA           reduce using rule 95 (addOperandVar -> .)
    SEMICOLON       reduce using rule 95 (addOperandVar -> .)

    addOperandVar                  shift and go to state 128

state 104

    (84) pexp -> LPARENTHESIS . expresion RPARENTHESIS
    (56) expresion -> . nexp orQuad expresion1
    (59) nexp -> . comexp andQuad nexp1
    (62) comexp -> . sumexp compQuad compex1 compQuad
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    expresion                      shift and go to state 129
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 105

    (43) llamada -> ID LPARENTHESIS expresion . RPARENTHESIS

    RPARENTHESIS    shift and go to state 130


state 106

    (56) expresion -> nexp . orQuad expresion1
    (87) orQuad -> .

    OR              reduce using rule 87 (orQuad -> .)
    RPARENTHESIS    reduce using rule 87 (orQuad -> .)
    COMMA           reduce using rule 87 (orQuad -> .)
    SEMICOLON       reduce using rule 87 (orQuad -> .)

    orQuad                         shift and go to state 131

state 107

    (59) nexp -> comexp . andQuad nexp1
    (88) andQuad -> .

    AND             reduce using rule 88 (andQuad -> .)
    OR              reduce using rule 88 (andQuad -> .)
    RPARENTHESIS    reduce using rule 88 (andQuad -> .)
    COMMA           reduce using rule 88 (andQuad -> .)
    SEMICOLON       reduce using rule 88 (andQuad -> .)

    andQuad                        shift and go to state 132

state 108

    (62) comexp -> sumexp . compQuad compex1 compQuad
    (89) compQuad -> .

    GTHAN           reduce using rule 89 (compQuad -> .)
    LTHAN           reduce using rule 89 (compQuad -> .)
    GTHANEQ         reduce using rule 89 (compQuad -> .)
    LTHANEQ         reduce using rule 89 (compQuad -> .)
    DIFFERENT       reduce using rule 89 (compQuad -> .)
    EQUALS          reduce using rule 89 (compQuad -> .)
    AND             reduce using rule 89 (compQuad -> .)
    OR              reduce using rule 89 (compQuad -> .)
    RPARENTHESIS    reduce using rule 89 (compQuad -> .)
    COMMA           reduce using rule 89 (compQuad -> .)
    SEMICOLON       reduce using rule 89 (compQuad -> .)

    compQuad                       shift and go to state 133

state 109

    (70) sumexp -> mulexp . plusQuad sumexp1
    (91) plusQuad -> .

    PLUS            reduce using rule 91 (plusQuad -> .)
    MINUS           reduce using rule 91 (plusQuad -> .)
    GTHAN           reduce using rule 91 (plusQuad -> .)
    LTHAN           reduce using rule 91 (plusQuad -> .)
    GTHANEQ         reduce using rule 91 (plusQuad -> .)
    LTHANEQ         reduce using rule 91 (plusQuad -> .)
    DIFFERENT       reduce using rule 91 (plusQuad -> .)
    EQUALS          reduce using rule 91 (plusQuad -> .)
    AND             reduce using rule 91 (plusQuad -> .)
    OR              reduce using rule 91 (plusQuad -> .)
    RPARENTHESIS    reduce using rule 91 (plusQuad -> .)
    COMMA           reduce using rule 91 (plusQuad -> .)
    SEMICOLON       reduce using rule 91 (plusQuad -> .)

    plusQuad                       shift and go to state 134

state 110

    (74) mulexp -> pexp . multQuad mulexp1
    (90) multQuad -> .

    MULTIPLICATION  reduce using rule 90 (multQuad -> .)
    DIVISION        reduce using rule 90 (multQuad -> .)
    PLUS            reduce using rule 90 (multQuad -> .)
    MINUS           reduce using rule 90 (multQuad -> .)
    GTHAN           reduce using rule 90 (multQuad -> .)
    LTHAN           reduce using rule 90 (multQuad -> .)
    GTHANEQ         reduce using rule 90 (multQuad -> .)
    LTHANEQ         reduce using rule 90 (multQuad -> .)
    DIFFERENT       reduce using rule 90 (multQuad -> .)
    EQUALS          reduce using rule 90 (multQuad -> .)
    AND             reduce using rule 90 (multQuad -> .)
    OR              reduce using rule 90 (multQuad -> .)
    RPARENTHESIS    reduce using rule 90 (multQuad -> .)
    COMMA           reduce using rule 90 (multQuad -> .)
    SEMICOLON       reduce using rule 90 (multQuad -> .)

    multQuad                       shift and go to state 135

state 111

    (78) pexp -> CTEI . addOperandCte
    (96) addOperandCte -> .

    MULTIPLICATION  reduce using rule 96 (addOperandCte -> .)
    DIVISION        reduce using rule 96 (addOperandCte -> .)
    PLUS            reduce using rule 96 (addOperandCte -> .)
    MINUS           reduce using rule 96 (addOperandCte -> .)
    GTHAN           reduce using rule 96 (addOperandCte -> .)
    LTHAN           reduce using rule 96 (addOperandCte -> .)
    GTHANEQ         reduce using rule 96 (addOperandCte -> .)
    LTHANEQ         reduce using rule 96 (addOperandCte -> .)
    DIFFERENT       reduce using rule 96 (addOperandCte -> .)
    EQUALS          reduce using rule 96 (addOperandCte -> .)
    AND             reduce using rule 96 (addOperandCte -> .)
    OR              reduce using rule 96 (addOperandCte -> .)
    RPARENTHESIS    reduce using rule 96 (addOperandCte -> .)
    COMMA           reduce using rule 96 (addOperandCte -> .)
    SEMICOLON       reduce using rule 96 (addOperandCte -> .)

    addOperandCte                  shift and go to state 136

state 112

    (79) pexp -> CTEF . addOperandCte
    (96) addOperandCte -> .

    MULTIPLICATION  reduce using rule 96 (addOperandCte -> .)
    DIVISION        reduce using rule 96 (addOperandCte -> .)
    PLUS            reduce using rule 96 (addOperandCte -> .)
    MINUS           reduce using rule 96 (addOperandCte -> .)
    GTHAN           reduce using rule 96 (addOperandCte -> .)
    LTHAN           reduce using rule 96 (addOperandCte -> .)
    GTHANEQ         reduce using rule 96 (addOperandCte -> .)
    LTHANEQ         reduce using rule 96 (addOperandCte -> .)
    DIFFERENT       reduce using rule 96 (addOperandCte -> .)
    EQUALS          reduce using rule 96 (addOperandCte -> .)
    AND             reduce using rule 96 (addOperandCte -> .)
    OR              reduce using rule 96 (addOperandCte -> .)
    RPARENTHESIS    reduce using rule 96 (addOperandCte -> .)
    COMMA           reduce using rule 96 (addOperandCte -> .)
    SEMICOLON       reduce using rule 96 (addOperandCte -> .)

    addOperandCte                  shift and go to state 137

state 113

    (80) pexp -> CTEC . addOperandCte
    (96) addOperandCte -> .

    MULTIPLICATION  reduce using rule 96 (addOperandCte -> .)
    DIVISION        reduce using rule 96 (addOperandCte -> .)
    PLUS            reduce using rule 96 (addOperandCte -> .)
    MINUS           reduce using rule 96 (addOperandCte -> .)
    GTHAN           reduce using rule 96 (addOperandCte -> .)
    LTHAN           reduce using rule 96 (addOperandCte -> .)
    GTHANEQ         reduce using rule 96 (addOperandCte -> .)
    LTHANEQ         reduce using rule 96 (addOperandCte -> .)
    DIFFERENT       reduce using rule 96 (addOperandCte -> .)
    EQUALS          reduce using rule 96 (addOperandCte -> .)
    AND             reduce using rule 96 (addOperandCte -> .)
    OR              reduce using rule 96 (addOperandCte -> .)
    RPARENTHESIS    reduce using rule 96 (addOperandCte -> .)
    COMMA           reduce using rule 96 (addOperandCte -> .)
    SEMICOLON       reduce using rule 96 (addOperandCte -> .)

    addOperandCte                  shift and go to state 138

state 114

    (81) pexp -> CTESTRING . addOperandCte
    (96) addOperandCte -> .

    MULTIPLICATION  reduce using rule 96 (addOperandCte -> .)
    DIVISION        reduce using rule 96 (addOperandCte -> .)
    PLUS            reduce using rule 96 (addOperandCte -> .)
    MINUS           reduce using rule 96 (addOperandCte -> .)
    GTHAN           reduce using rule 96 (addOperandCte -> .)
    LTHAN           reduce using rule 96 (addOperandCte -> .)
    GTHANEQ         reduce using rule 96 (addOperandCte -> .)
    LTHANEQ         reduce using rule 96 (addOperandCte -> .)
    DIFFERENT       reduce using rule 96 (addOperandCte -> .)
    EQUALS          reduce using rule 96 (addOperandCte -> .)
    AND             reduce using rule 96 (addOperandCte -> .)
    OR              reduce using rule 96 (addOperandCte -> .)
    RPARENTHESIS    reduce using rule 96 (addOperandCte -> .)
    COMMA           reduce using rule 96 (addOperandCte -> .)
    SEMICOLON       reduce using rule 96 (addOperandCte -> .)

    addOperandCte                  shift and go to state 139

state 115

    (82) pexp -> llamada .

    MULTIPLICATION  reduce using rule 82 (pexp -> llamada .)
    DIVISION        reduce using rule 82 (pexp -> llamada .)
    PLUS            reduce using rule 82 (pexp -> llamada .)
    MINUS           reduce using rule 82 (pexp -> llamada .)
    GTHAN           reduce using rule 82 (pexp -> llamada .)
    LTHAN           reduce using rule 82 (pexp -> llamada .)
    GTHANEQ         reduce using rule 82 (pexp -> llamada .)
    LTHANEQ         reduce using rule 82 (pexp -> llamada .)
    DIFFERENT       reduce using rule 82 (pexp -> llamada .)
    EQUALS          reduce using rule 82 (pexp -> llamada .)
    AND             reduce using rule 82 (pexp -> llamada .)
    OR              reduce using rule 82 (pexp -> llamada .)
    RPARENTHESIS    reduce using rule 82 (pexp -> llamada .)
    COMMA           reduce using rule 82 (pexp -> llamada .)
    SEMICOLON       reduce using rule 82 (pexp -> llamada .)


state 116

    (44) lectura -> READ readOperator LPARENTHESIS . expresion RPARENTHESIS
    (56) expresion -> . nexp orQuad expresion1
    (59) nexp -> . comexp andQuad nexp1
    (62) comexp -> . sumexp compQuad compex1 compQuad
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    expresion                      shift and go to state 140
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 117

    (46) escritura -> PRINT LPARENTHESIS escritura1 . RPARENTHESIS

    RPARENTHESIS    shift and go to state 141


state 118

    (47) escritura1 -> printOperator . expresion printQuad escritura2
    (56) expresion -> . nexp orQuad expresion1
    (59) nexp -> . comexp andQuad nexp1
    (62) comexp -> . sumexp compQuad compex1 compQuad
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    expresion                      shift and go to state 142
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 119

    (51) for -> FOR LPARENTHESIS FROM . asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual

    ID              shift and go to state 144

    asignacion                     shift and go to state 143

state 120

    (52) if -> IF LPARENTHESIS expresion . RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else

    RPARENTHESIS    shift and go to state 145


state 121

    (55) while -> WHILE LPARENTHESIS expresion . RPARENTHESIS LBRACKET estatuto RBRACKET

    RPARENTHESIS    shift and go to state 146


state 122

    (24) parameters3 -> COMMA ID addVariable parameters3 .

    RPARENTHESIS    reduce using rule 24 (parameters3 -> COMMA ID addVariable parameters3 .)


state 123

    (25) parameters3 -> COMMA tipo ID addVariable . parameters3
    (27) parameters3 -> COMMA tipo ID addVariable .
    (24) parameters3 -> . COMMA ID addVariable parameters3
    (25) parameters3 -> . COMMA tipo ID addVariable parameters3
    (26) parameters3 -> . COMMA ID addVariable
    (27) parameters3 -> . COMMA tipo ID addVariable

    RPARENTHESIS    reduce using rule 27 (parameters3 -> COMMA tipo ID addVariable .)
    COMMA           shift and go to state 62

    parameters3                    shift and go to state 147

state 124

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno . RBRACKET funcion

    RBRACKET        shift and go to state 148


state 125

    (32) retorno -> RETURN . ID SEMICOLON

    ID              shift and go to state 149


state 126

    (29) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET . funcion
    (28) funcion -> . FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (29) funcion -> . FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (30) funcion -> . empty
    (99) empty -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 99 (empty -> .)

    funcion                        shift and go to state 150
    empty                          shift and go to state 13

state 127

    (42) asignacion -> ID addId arr EQUAL . addOperator expresion quadEqual
    (94) addOperator -> .

    CTEI            reduce using rule 94 (addOperator -> .)
    CTEF            reduce using rule 94 (addOperator -> .)
    CTEC            reduce using rule 94 (addOperator -> .)
    CTESTRING       reduce using rule 94 (addOperator -> .)
    ID              reduce using rule 94 (addOperator -> .)
    LPARENTHESIS    reduce using rule 94 (addOperator -> .)

    addOperator                    shift and go to state 151

state 128

    (83) pexp -> ID addOperandVar .

    MULTIPLICATION  reduce using rule 83 (pexp -> ID addOperandVar .)
    DIVISION        reduce using rule 83 (pexp -> ID addOperandVar .)
    PLUS            reduce using rule 83 (pexp -> ID addOperandVar .)
    MINUS           reduce using rule 83 (pexp -> ID addOperandVar .)
    GTHAN           reduce using rule 83 (pexp -> ID addOperandVar .)
    LTHAN           reduce using rule 83 (pexp -> ID addOperandVar .)
    GTHANEQ         reduce using rule 83 (pexp -> ID addOperandVar .)
    LTHANEQ         reduce using rule 83 (pexp -> ID addOperandVar .)
    DIFFERENT       reduce using rule 83 (pexp -> ID addOperandVar .)
    EQUALS          reduce using rule 83 (pexp -> ID addOperandVar .)
    AND             reduce using rule 83 (pexp -> ID addOperandVar .)
    OR              reduce using rule 83 (pexp -> ID addOperandVar .)
    RPARENTHESIS    reduce using rule 83 (pexp -> ID addOperandVar .)
    COMMA           reduce using rule 83 (pexp -> ID addOperandVar .)
    SEMICOLON       reduce using rule 83 (pexp -> ID addOperandVar .)


state 129

    (84) pexp -> LPARENTHESIS expresion . RPARENTHESIS

    RPARENTHESIS    shift and go to state 152


state 130

    (43) llamada -> ID LPARENTHESIS expresion RPARENTHESIS .

    SEMICOLON       reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    MULTIPLICATION  reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    DIVISION        reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    PLUS            reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    MINUS           reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    GTHAN           reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    LTHAN           reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    GTHANEQ         reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    LTHANEQ         reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    DIFFERENT       reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    EQUALS          reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    AND             reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    OR              reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    COMMA           reduce using rule 43 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)


state 131

    (56) expresion -> nexp orQuad . expresion1
    (57) expresion1 -> . OR addOperator expresion
    (58) expresion1 -> . empty
    (99) empty -> .

    OR              shift and go to state 154
    RPARENTHESIS    reduce using rule 99 (empty -> .)
    COMMA           reduce using rule 99 (empty -> .)
    SEMICOLON       reduce using rule 99 (empty -> .)

    expresion1                     shift and go to state 153
    empty                          shift and go to state 155

state 132

    (59) nexp -> comexp andQuad . nexp1
    (60) nexp1 -> . AND addOperator nexp
    (61) nexp1 -> . empty
    (99) empty -> .

    AND             shift and go to state 157
    OR              reduce using rule 99 (empty -> .)
    RPARENTHESIS    reduce using rule 99 (empty -> .)
    COMMA           reduce using rule 99 (empty -> .)
    SEMICOLON       reduce using rule 99 (empty -> .)

    nexp1                          shift and go to state 156
    empty                          shift and go to state 158

state 133

    (62) comexp -> sumexp compQuad . compex1 compQuad
    (63) compex1 -> . GTHAN addOperator sumexp
    (64) compex1 -> . LTHAN addOperator sumexp
    (65) compex1 -> . GTHANEQ addOperator sumexp
    (66) compex1 -> . LTHANEQ addOperator sumexp
    (67) compex1 -> . DIFFERENT addOperator sumexp
    (68) compex1 -> . EQUALS addOperator sumexp
    (69) compex1 -> . empty
    (99) empty -> .

    GTHAN           shift and go to state 160
    LTHAN           shift and go to state 161
    GTHANEQ         shift and go to state 162
    LTHANEQ         shift and go to state 163
    DIFFERENT       shift and go to state 164
    EQUALS          shift and go to state 165
    AND             reduce using rule 99 (empty -> .)
    OR              reduce using rule 99 (empty -> .)
    RPARENTHESIS    reduce using rule 99 (empty -> .)
    COMMA           reduce using rule 99 (empty -> .)
    SEMICOLON       reduce using rule 99 (empty -> .)

    compex1                        shift and go to state 159
    empty                          shift and go to state 166

state 134

    (70) sumexp -> mulexp plusQuad . sumexp1
    (71) sumexp1 -> . PLUS addOperator sumexp
    (72) sumexp1 -> . MINUS addOperator sumexp
    (73) sumexp1 -> . empty
    (99) empty -> .

    PLUS            shift and go to state 168
    MINUS           shift and go to state 169
    GTHAN           reduce using rule 99 (empty -> .)
    LTHAN           reduce using rule 99 (empty -> .)
    GTHANEQ         reduce using rule 99 (empty -> .)
    LTHANEQ         reduce using rule 99 (empty -> .)
    DIFFERENT       reduce using rule 99 (empty -> .)
    EQUALS          reduce using rule 99 (empty -> .)
    AND             reduce using rule 99 (empty -> .)
    OR              reduce using rule 99 (empty -> .)
    RPARENTHESIS    reduce using rule 99 (empty -> .)
    COMMA           reduce using rule 99 (empty -> .)
    SEMICOLON       reduce using rule 99 (empty -> .)

    sumexp1                        shift and go to state 167
    empty                          shift and go to state 170

state 135

    (74) mulexp -> pexp multQuad . mulexp1
    (75) mulexp1 -> . MULTIPLICATION addOperator mulexp
    (76) mulexp1 -> . DIVISION addOperator mulexp
    (77) mulexp1 -> . empty
    (99) empty -> .

    MULTIPLICATION  shift and go to state 172
    DIVISION        shift and go to state 173
    PLUS            reduce using rule 99 (empty -> .)
    MINUS           reduce using rule 99 (empty -> .)
    GTHAN           reduce using rule 99 (empty -> .)
    LTHAN           reduce using rule 99 (empty -> .)
    GTHANEQ         reduce using rule 99 (empty -> .)
    LTHANEQ         reduce using rule 99 (empty -> .)
    DIFFERENT       reduce using rule 99 (empty -> .)
    EQUALS          reduce using rule 99 (empty -> .)
    AND             reduce using rule 99 (empty -> .)
    OR              reduce using rule 99 (empty -> .)
    RPARENTHESIS    reduce using rule 99 (empty -> .)
    COMMA           reduce using rule 99 (empty -> .)
    SEMICOLON       reduce using rule 99 (empty -> .)

    mulexp1                        shift and go to state 171
    empty                          shift and go to state 174

state 136

    (78) pexp -> CTEI addOperandCte .

    MULTIPLICATION  reduce using rule 78 (pexp -> CTEI addOperandCte .)
    DIVISION        reduce using rule 78 (pexp -> CTEI addOperandCte .)
    PLUS            reduce using rule 78 (pexp -> CTEI addOperandCte .)
    MINUS           reduce using rule 78 (pexp -> CTEI addOperandCte .)
    GTHAN           reduce using rule 78 (pexp -> CTEI addOperandCte .)
    LTHAN           reduce using rule 78 (pexp -> CTEI addOperandCte .)
    GTHANEQ         reduce using rule 78 (pexp -> CTEI addOperandCte .)
    LTHANEQ         reduce using rule 78 (pexp -> CTEI addOperandCte .)
    DIFFERENT       reduce using rule 78 (pexp -> CTEI addOperandCte .)
    EQUALS          reduce using rule 78 (pexp -> CTEI addOperandCte .)
    AND             reduce using rule 78 (pexp -> CTEI addOperandCte .)
    OR              reduce using rule 78 (pexp -> CTEI addOperandCte .)
    RPARENTHESIS    reduce using rule 78 (pexp -> CTEI addOperandCte .)
    COMMA           reduce using rule 78 (pexp -> CTEI addOperandCte .)
    SEMICOLON       reduce using rule 78 (pexp -> CTEI addOperandCte .)


state 137

    (79) pexp -> CTEF addOperandCte .

    MULTIPLICATION  reduce using rule 79 (pexp -> CTEF addOperandCte .)
    DIVISION        reduce using rule 79 (pexp -> CTEF addOperandCte .)
    PLUS            reduce using rule 79 (pexp -> CTEF addOperandCte .)
    MINUS           reduce using rule 79 (pexp -> CTEF addOperandCte .)
    GTHAN           reduce using rule 79 (pexp -> CTEF addOperandCte .)
    LTHAN           reduce using rule 79 (pexp -> CTEF addOperandCte .)
    GTHANEQ         reduce using rule 79 (pexp -> CTEF addOperandCte .)
    LTHANEQ         reduce using rule 79 (pexp -> CTEF addOperandCte .)
    DIFFERENT       reduce using rule 79 (pexp -> CTEF addOperandCte .)
    EQUALS          reduce using rule 79 (pexp -> CTEF addOperandCte .)
    AND             reduce using rule 79 (pexp -> CTEF addOperandCte .)
    OR              reduce using rule 79 (pexp -> CTEF addOperandCte .)
    RPARENTHESIS    reduce using rule 79 (pexp -> CTEF addOperandCte .)
    COMMA           reduce using rule 79 (pexp -> CTEF addOperandCte .)
    SEMICOLON       reduce using rule 79 (pexp -> CTEF addOperandCte .)


state 138

    (80) pexp -> CTEC addOperandCte .

    MULTIPLICATION  reduce using rule 80 (pexp -> CTEC addOperandCte .)
    DIVISION        reduce using rule 80 (pexp -> CTEC addOperandCte .)
    PLUS            reduce using rule 80 (pexp -> CTEC addOperandCte .)
    MINUS           reduce using rule 80 (pexp -> CTEC addOperandCte .)
    GTHAN           reduce using rule 80 (pexp -> CTEC addOperandCte .)
    LTHAN           reduce using rule 80 (pexp -> CTEC addOperandCte .)
    GTHANEQ         reduce using rule 80 (pexp -> CTEC addOperandCte .)
    LTHANEQ         reduce using rule 80 (pexp -> CTEC addOperandCte .)
    DIFFERENT       reduce using rule 80 (pexp -> CTEC addOperandCte .)
    EQUALS          reduce using rule 80 (pexp -> CTEC addOperandCte .)
    AND             reduce using rule 80 (pexp -> CTEC addOperandCte .)
    OR              reduce using rule 80 (pexp -> CTEC addOperandCte .)
    RPARENTHESIS    reduce using rule 80 (pexp -> CTEC addOperandCte .)
    COMMA           reduce using rule 80 (pexp -> CTEC addOperandCte .)
    SEMICOLON       reduce using rule 80 (pexp -> CTEC addOperandCte .)


state 139

    (81) pexp -> CTESTRING addOperandCte .

    MULTIPLICATION  reduce using rule 81 (pexp -> CTESTRING addOperandCte .)
    DIVISION        reduce using rule 81 (pexp -> CTESTRING addOperandCte .)
    PLUS            reduce using rule 81 (pexp -> CTESTRING addOperandCte .)
    MINUS           reduce using rule 81 (pexp -> CTESTRING addOperandCte .)
    GTHAN           reduce using rule 81 (pexp -> CTESTRING addOperandCte .)
    LTHAN           reduce using rule 81 (pexp -> CTESTRING addOperandCte .)
    GTHANEQ         reduce using rule 81 (pexp -> CTESTRING addOperandCte .)
    LTHANEQ         reduce using rule 81 (pexp -> CTESTRING addOperandCte .)
    DIFFERENT       reduce using rule 81 (pexp -> CTESTRING addOperandCte .)
    EQUALS          reduce using rule 81 (pexp -> CTESTRING addOperandCte .)
    AND             reduce using rule 81 (pexp -> CTESTRING addOperandCte .)
    OR              reduce using rule 81 (pexp -> CTESTRING addOperandCte .)
    RPARENTHESIS    reduce using rule 81 (pexp -> CTESTRING addOperandCte .)
    COMMA           reduce using rule 81 (pexp -> CTESTRING addOperandCte .)
    SEMICOLON       reduce using rule 81 (pexp -> CTESTRING addOperandCte .)


state 140

    (44) lectura -> READ readOperator LPARENTHESIS expresion . RPARENTHESIS

    RPARENTHESIS    shift and go to state 175


state 141

    (46) escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS .

    SEMICOLON       reduce using rule 46 (escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS .)


state 142

    (47) escritura1 -> printOperator expresion . printQuad escritura2
    (93) printQuad -> .

    COMMA           reduce using rule 93 (printQuad -> .)
    RPARENTHESIS    reduce using rule 93 (printQuad -> .)

    printQuad                      shift and go to state 176

state 143

    (51) for -> FOR LPARENTHESIS FROM asignacion . COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    COMMA           shift and go to state 177


state 144

    (42) asignacion -> ID . addId arr EQUAL addOperator expresion quadEqual
    (97) addId -> .

    LSQRBRACKET     reduce using rule 97 (addId -> .)
    EQUAL           reduce using rule 97 (addId -> .)

    addId                          shift and go to state 91

state 145

    (52) if -> IF LPARENTHESIS expresion RPARENTHESIS . ifQuad THEN LBRACKET estatuto RBRACKET else
    (98) ifQuad -> .

    THEN            reduce using rule 98 (ifQuad -> .)

    ifQuad                         shift and go to state 178

state 146

    (55) while -> WHILE LPARENTHESIS expresion RPARENTHESIS . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 179


state 147

    (25) parameters3 -> COMMA tipo ID addVariable parameters3 .

    RPARENTHESIS    reduce using rule 25 (parameters3 -> COMMA tipo ID addVariable parameters3 .)


state 148

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET . funcion
    (28) funcion -> . FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (29) funcion -> . FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (30) funcion -> . empty
    (99) empty -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 99 (empty -> .)

    funcion                        shift and go to state 180
    empty                          shift and go to state 13

state 149

    (32) retorno -> RETURN ID . SEMICOLON

    SEMICOLON       shift and go to state 181


state 150

    (29) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion .

    MAIN            reduce using rule 29 (funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion .)


state 151

    (42) asignacion -> ID addId arr EQUAL addOperator . expresion quadEqual
    (56) expresion -> . nexp orQuad expresion1
    (59) nexp -> . comexp andQuad nexp1
    (62) comexp -> . sumexp compQuad compex1 compQuad
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    expresion                      shift and go to state 182
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 152

    (84) pexp -> LPARENTHESIS expresion RPARENTHESIS .

    MULTIPLICATION  reduce using rule 84 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    DIVISION        reduce using rule 84 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    PLUS            reduce using rule 84 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    MINUS           reduce using rule 84 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    GTHAN           reduce using rule 84 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    LTHAN           reduce using rule 84 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    GTHANEQ         reduce using rule 84 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    LTHANEQ         reduce using rule 84 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    DIFFERENT       reduce using rule 84 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    EQUALS          reduce using rule 84 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    AND             reduce using rule 84 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    OR              reduce using rule 84 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 84 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    COMMA           reduce using rule 84 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    SEMICOLON       reduce using rule 84 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)


state 153

    (56) expresion -> nexp orQuad expresion1 .

    RPARENTHESIS    reduce using rule 56 (expresion -> nexp orQuad expresion1 .)
    COMMA           reduce using rule 56 (expresion -> nexp orQuad expresion1 .)
    SEMICOLON       reduce using rule 56 (expresion -> nexp orQuad expresion1 .)


state 154

    (57) expresion1 -> OR . addOperator expresion
    (94) addOperator -> .

    CTEI            reduce using rule 94 (addOperator -> .)
    CTEF            reduce using rule 94 (addOperator -> .)
    CTEC            reduce using rule 94 (addOperator -> .)
    CTESTRING       reduce using rule 94 (addOperator -> .)
    ID              reduce using rule 94 (addOperator -> .)
    LPARENTHESIS    reduce using rule 94 (addOperator -> .)

    addOperator                    shift and go to state 183

state 155

    (58) expresion1 -> empty .

    RPARENTHESIS    reduce using rule 58 (expresion1 -> empty .)
    COMMA           reduce using rule 58 (expresion1 -> empty .)
    SEMICOLON       reduce using rule 58 (expresion1 -> empty .)


state 156

    (59) nexp -> comexp andQuad nexp1 .

    OR              reduce using rule 59 (nexp -> comexp andQuad nexp1 .)
    RPARENTHESIS    reduce using rule 59 (nexp -> comexp andQuad nexp1 .)
    COMMA           reduce using rule 59 (nexp -> comexp andQuad nexp1 .)
    SEMICOLON       reduce using rule 59 (nexp -> comexp andQuad nexp1 .)


state 157

    (60) nexp1 -> AND . addOperator nexp
    (94) addOperator -> .

    CTEI            reduce using rule 94 (addOperator -> .)
    CTEF            reduce using rule 94 (addOperator -> .)
    CTEC            reduce using rule 94 (addOperator -> .)
    CTESTRING       reduce using rule 94 (addOperator -> .)
    ID              reduce using rule 94 (addOperator -> .)
    LPARENTHESIS    reduce using rule 94 (addOperator -> .)

    addOperator                    shift and go to state 184

state 158

    (61) nexp1 -> empty .

    OR              reduce using rule 61 (nexp1 -> empty .)
    RPARENTHESIS    reduce using rule 61 (nexp1 -> empty .)
    COMMA           reduce using rule 61 (nexp1 -> empty .)
    SEMICOLON       reduce using rule 61 (nexp1 -> empty .)


state 159

    (62) comexp -> sumexp compQuad compex1 . compQuad
    (89) compQuad -> .

    AND             reduce using rule 89 (compQuad -> .)
    OR              reduce using rule 89 (compQuad -> .)
    RPARENTHESIS    reduce using rule 89 (compQuad -> .)
    COMMA           reduce using rule 89 (compQuad -> .)
    SEMICOLON       reduce using rule 89 (compQuad -> .)

    compQuad                       shift and go to state 185

state 160

    (63) compex1 -> GTHAN . addOperator sumexp
    (94) addOperator -> .

    CTEI            reduce using rule 94 (addOperator -> .)
    CTEF            reduce using rule 94 (addOperator -> .)
    CTEC            reduce using rule 94 (addOperator -> .)
    CTESTRING       reduce using rule 94 (addOperator -> .)
    ID              reduce using rule 94 (addOperator -> .)
    LPARENTHESIS    reduce using rule 94 (addOperator -> .)

    addOperator                    shift and go to state 186

state 161

    (64) compex1 -> LTHAN . addOperator sumexp
    (94) addOperator -> .

    CTEI            reduce using rule 94 (addOperator -> .)
    CTEF            reduce using rule 94 (addOperator -> .)
    CTEC            reduce using rule 94 (addOperator -> .)
    CTESTRING       reduce using rule 94 (addOperator -> .)
    ID              reduce using rule 94 (addOperator -> .)
    LPARENTHESIS    reduce using rule 94 (addOperator -> .)

    addOperator                    shift and go to state 187

state 162

    (65) compex1 -> GTHANEQ . addOperator sumexp
    (94) addOperator -> .

    CTEI            reduce using rule 94 (addOperator -> .)
    CTEF            reduce using rule 94 (addOperator -> .)
    CTEC            reduce using rule 94 (addOperator -> .)
    CTESTRING       reduce using rule 94 (addOperator -> .)
    ID              reduce using rule 94 (addOperator -> .)
    LPARENTHESIS    reduce using rule 94 (addOperator -> .)

    addOperator                    shift and go to state 188

state 163

    (66) compex1 -> LTHANEQ . addOperator sumexp
    (94) addOperator -> .

    CTEI            reduce using rule 94 (addOperator -> .)
    CTEF            reduce using rule 94 (addOperator -> .)
    CTEC            reduce using rule 94 (addOperator -> .)
    CTESTRING       reduce using rule 94 (addOperator -> .)
    ID              reduce using rule 94 (addOperator -> .)
    LPARENTHESIS    reduce using rule 94 (addOperator -> .)

    addOperator                    shift and go to state 189

state 164

    (67) compex1 -> DIFFERENT . addOperator sumexp
    (94) addOperator -> .

    CTEI            reduce using rule 94 (addOperator -> .)
    CTEF            reduce using rule 94 (addOperator -> .)
    CTEC            reduce using rule 94 (addOperator -> .)
    CTESTRING       reduce using rule 94 (addOperator -> .)
    ID              reduce using rule 94 (addOperator -> .)
    LPARENTHESIS    reduce using rule 94 (addOperator -> .)

    addOperator                    shift and go to state 190

state 165

    (68) compex1 -> EQUALS . addOperator sumexp
    (94) addOperator -> .

    CTEI            reduce using rule 94 (addOperator -> .)
    CTEF            reduce using rule 94 (addOperator -> .)
    CTEC            reduce using rule 94 (addOperator -> .)
    CTESTRING       reduce using rule 94 (addOperator -> .)
    ID              reduce using rule 94 (addOperator -> .)
    LPARENTHESIS    reduce using rule 94 (addOperator -> .)

    addOperator                    shift and go to state 191

state 166

    (69) compex1 -> empty .

    AND             reduce using rule 69 (compex1 -> empty .)
    OR              reduce using rule 69 (compex1 -> empty .)
    RPARENTHESIS    reduce using rule 69 (compex1 -> empty .)
    COMMA           reduce using rule 69 (compex1 -> empty .)
    SEMICOLON       reduce using rule 69 (compex1 -> empty .)


state 167

    (70) sumexp -> mulexp plusQuad sumexp1 .

    GTHAN           reduce using rule 70 (sumexp -> mulexp plusQuad sumexp1 .)
    LTHAN           reduce using rule 70 (sumexp -> mulexp plusQuad sumexp1 .)
    GTHANEQ         reduce using rule 70 (sumexp -> mulexp plusQuad sumexp1 .)
    LTHANEQ         reduce using rule 70 (sumexp -> mulexp plusQuad sumexp1 .)
    DIFFERENT       reduce using rule 70 (sumexp -> mulexp plusQuad sumexp1 .)
    EQUALS          reduce using rule 70 (sumexp -> mulexp plusQuad sumexp1 .)
    AND             reduce using rule 70 (sumexp -> mulexp plusQuad sumexp1 .)
    OR              reduce using rule 70 (sumexp -> mulexp plusQuad sumexp1 .)
    RPARENTHESIS    reduce using rule 70 (sumexp -> mulexp plusQuad sumexp1 .)
    COMMA           reduce using rule 70 (sumexp -> mulexp plusQuad sumexp1 .)
    SEMICOLON       reduce using rule 70 (sumexp -> mulexp plusQuad sumexp1 .)


state 168

    (71) sumexp1 -> PLUS . addOperator sumexp
    (94) addOperator -> .

    CTEI            reduce using rule 94 (addOperator -> .)
    CTEF            reduce using rule 94 (addOperator -> .)
    CTEC            reduce using rule 94 (addOperator -> .)
    CTESTRING       reduce using rule 94 (addOperator -> .)
    ID              reduce using rule 94 (addOperator -> .)
    LPARENTHESIS    reduce using rule 94 (addOperator -> .)

    addOperator                    shift and go to state 192

state 169

    (72) sumexp1 -> MINUS . addOperator sumexp
    (94) addOperator -> .

    CTEI            reduce using rule 94 (addOperator -> .)
    CTEF            reduce using rule 94 (addOperator -> .)
    CTEC            reduce using rule 94 (addOperator -> .)
    CTESTRING       reduce using rule 94 (addOperator -> .)
    ID              reduce using rule 94 (addOperator -> .)
    LPARENTHESIS    reduce using rule 94 (addOperator -> .)

    addOperator                    shift and go to state 193

state 170

    (73) sumexp1 -> empty .

    GTHAN           reduce using rule 73 (sumexp1 -> empty .)
    LTHAN           reduce using rule 73 (sumexp1 -> empty .)
    GTHANEQ         reduce using rule 73 (sumexp1 -> empty .)
    LTHANEQ         reduce using rule 73 (sumexp1 -> empty .)
    DIFFERENT       reduce using rule 73 (sumexp1 -> empty .)
    EQUALS          reduce using rule 73 (sumexp1 -> empty .)
    AND             reduce using rule 73 (sumexp1 -> empty .)
    OR              reduce using rule 73 (sumexp1 -> empty .)
    RPARENTHESIS    reduce using rule 73 (sumexp1 -> empty .)
    COMMA           reduce using rule 73 (sumexp1 -> empty .)
    SEMICOLON       reduce using rule 73 (sumexp1 -> empty .)


state 171

    (74) mulexp -> pexp multQuad mulexp1 .

    PLUS            reduce using rule 74 (mulexp -> pexp multQuad mulexp1 .)
    MINUS           reduce using rule 74 (mulexp -> pexp multQuad mulexp1 .)
    GTHAN           reduce using rule 74 (mulexp -> pexp multQuad mulexp1 .)
    LTHAN           reduce using rule 74 (mulexp -> pexp multQuad mulexp1 .)
    GTHANEQ         reduce using rule 74 (mulexp -> pexp multQuad mulexp1 .)
    LTHANEQ         reduce using rule 74 (mulexp -> pexp multQuad mulexp1 .)
    DIFFERENT       reduce using rule 74 (mulexp -> pexp multQuad mulexp1 .)
    EQUALS          reduce using rule 74 (mulexp -> pexp multQuad mulexp1 .)
    AND             reduce using rule 74 (mulexp -> pexp multQuad mulexp1 .)
    OR              reduce using rule 74 (mulexp -> pexp multQuad mulexp1 .)
    RPARENTHESIS    reduce using rule 74 (mulexp -> pexp multQuad mulexp1 .)
    COMMA           reduce using rule 74 (mulexp -> pexp multQuad mulexp1 .)
    SEMICOLON       reduce using rule 74 (mulexp -> pexp multQuad mulexp1 .)


state 172

    (75) mulexp1 -> MULTIPLICATION . addOperator mulexp
    (94) addOperator -> .

    CTEI            reduce using rule 94 (addOperator -> .)
    CTEF            reduce using rule 94 (addOperator -> .)
    CTEC            reduce using rule 94 (addOperator -> .)
    CTESTRING       reduce using rule 94 (addOperator -> .)
    ID              reduce using rule 94 (addOperator -> .)
    LPARENTHESIS    reduce using rule 94 (addOperator -> .)

    addOperator                    shift and go to state 194

state 173

    (76) mulexp1 -> DIVISION . addOperator mulexp
    (94) addOperator -> .

    CTEI            reduce using rule 94 (addOperator -> .)
    CTEF            reduce using rule 94 (addOperator -> .)
    CTEC            reduce using rule 94 (addOperator -> .)
    CTESTRING       reduce using rule 94 (addOperator -> .)
    ID              reduce using rule 94 (addOperator -> .)
    LPARENTHESIS    reduce using rule 94 (addOperator -> .)

    addOperator                    shift and go to state 195

state 174

    (77) mulexp1 -> empty .

    PLUS            reduce using rule 77 (mulexp1 -> empty .)
    MINUS           reduce using rule 77 (mulexp1 -> empty .)
    GTHAN           reduce using rule 77 (mulexp1 -> empty .)
    LTHAN           reduce using rule 77 (mulexp1 -> empty .)
    GTHANEQ         reduce using rule 77 (mulexp1 -> empty .)
    LTHANEQ         reduce using rule 77 (mulexp1 -> empty .)
    DIFFERENT       reduce using rule 77 (mulexp1 -> empty .)
    EQUALS          reduce using rule 77 (mulexp1 -> empty .)
    AND             reduce using rule 77 (mulexp1 -> empty .)
    OR              reduce using rule 77 (mulexp1 -> empty .)
    RPARENTHESIS    reduce using rule 77 (mulexp1 -> empty .)
    COMMA           reduce using rule 77 (mulexp1 -> empty .)
    SEMICOLON       reduce using rule 77 (mulexp1 -> empty .)


state 175

    (44) lectura -> READ readOperator LPARENTHESIS expresion RPARENTHESIS .

    SEMICOLON       reduce using rule 44 (lectura -> READ readOperator LPARENTHESIS expresion RPARENTHESIS .)


state 176

    (47) escritura1 -> printOperator expresion printQuad . escritura2
    (48) escritura2 -> . COMMA escritura1
    (49) escritura2 -> . empty
    (99) empty -> .

    COMMA           shift and go to state 197
    RPARENTHESIS    reduce using rule 99 (empty -> .)

    escritura2                     shift and go to state 196
    empty                          shift and go to state 198

state 177

    (51) for -> FOR LPARENTHESIS FROM asignacion COMMA . TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    TO              shift and go to state 199


state 178

    (52) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad . THEN LBRACKET estatuto RBRACKET else

    THEN            shift and go to state 200


state 179

    (55) while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET . estatuto RBRACKET
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (99) empty -> .
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (44) lectura -> . READ readOperator LPARENTHESIS expresion RPARENTHESIS
    (46) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (51) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (52) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else
    (55) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 99 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 201
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 180

    (28) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion .

    MAIN            reduce using rule 28 (funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion .)


state 181

    (32) retorno -> RETURN ID SEMICOLON .

    RBRACKET        reduce using rule 32 (retorno -> RETURN ID SEMICOLON .)


state 182

    (42) asignacion -> ID addId arr EQUAL addOperator expresion . quadEqual
    (92) quadEqual -> .

    SEMICOLON       reduce using rule 92 (quadEqual -> .)
    COMMA           reduce using rule 92 (quadEqual -> .)

    quadEqual                      shift and go to state 202

state 183

    (57) expresion1 -> OR addOperator . expresion
    (56) expresion -> . nexp orQuad expresion1
    (59) nexp -> . comexp andQuad nexp1
    (62) comexp -> . sumexp compQuad compex1 compQuad
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    expresion                      shift and go to state 203
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 184

    (60) nexp1 -> AND addOperator . nexp
    (59) nexp -> . comexp andQuad nexp1
    (62) comexp -> . sumexp compQuad compex1 compQuad
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    nexp                           shift and go to state 204
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 185

    (62) comexp -> sumexp compQuad compex1 compQuad .

    AND             reduce using rule 62 (comexp -> sumexp compQuad compex1 compQuad .)
    OR              reduce using rule 62 (comexp -> sumexp compQuad compex1 compQuad .)
    RPARENTHESIS    reduce using rule 62 (comexp -> sumexp compQuad compex1 compQuad .)
    COMMA           reduce using rule 62 (comexp -> sumexp compQuad compex1 compQuad .)
    SEMICOLON       reduce using rule 62 (comexp -> sumexp compQuad compex1 compQuad .)


state 186

    (63) compex1 -> GTHAN addOperator . sumexp
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    sumexp                         shift and go to state 205
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 187

    (64) compex1 -> LTHAN addOperator . sumexp
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    sumexp                         shift and go to state 206
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 188

    (65) compex1 -> GTHANEQ addOperator . sumexp
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    sumexp                         shift and go to state 207
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 189

    (66) compex1 -> LTHANEQ addOperator . sumexp
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    sumexp                         shift and go to state 208
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 190

    (67) compex1 -> DIFFERENT addOperator . sumexp
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    sumexp                         shift and go to state 209
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 191

    (68) compex1 -> EQUALS addOperator . sumexp
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    sumexp                         shift and go to state 210
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 192

    (71) sumexp1 -> PLUS addOperator . sumexp
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    sumexp                         shift and go to state 211
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 193

    (72) sumexp1 -> MINUS addOperator . sumexp
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    sumexp                         shift and go to state 212
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 194

    (75) mulexp1 -> MULTIPLICATION addOperator . mulexp
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    mulexp                         shift and go to state 213
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 195

    (76) mulexp1 -> DIVISION addOperator . mulexp
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    mulexp                         shift and go to state 214
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 196

    (47) escritura1 -> printOperator expresion printQuad escritura2 .

    RPARENTHESIS    reduce using rule 47 (escritura1 -> printOperator expresion printQuad escritura2 .)


state 197

    (48) escritura2 -> COMMA . escritura1
    (47) escritura1 -> . printOperator expresion printQuad escritura2
    (50) printOperator -> .

    CTEI            reduce using rule 50 (printOperator -> .)
    CTEF            reduce using rule 50 (printOperator -> .)
    CTEC            reduce using rule 50 (printOperator -> .)
    CTESTRING       reduce using rule 50 (printOperator -> .)
    ID              reduce using rule 50 (printOperator -> .)
    LPARENTHESIS    reduce using rule 50 (printOperator -> .)

    escritura1                     shift and go to state 215
    printOperator                  shift and go to state 118

state 198

    (49) escritura2 -> empty .

    RPARENTHESIS    reduce using rule 49 (escritura2 -> empty .)


state 199

    (51) for -> FOR LPARENTHESIS FROM asignacion COMMA TO . expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (56) expresion -> . nexp orQuad expresion1
    (59) nexp -> . comexp andQuad nexp1
    (62) comexp -> . sumexp compQuad compex1 compQuad
    (70) sumexp -> . mulexp plusQuad sumexp1
    (74) mulexp -> . pexp multQuad mulexp1
    (78) pexp -> . CTEI addOperandCte
    (79) pexp -> . CTEF addOperandCte
    (80) pexp -> . CTEC addOperandCte
    (81) pexp -> . CTESTRING addOperandCte
    (82) pexp -> . llamada
    (83) pexp -> . ID addOperandVar
    (84) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    CTESTRING       shift and go to state 114
    ID              shift and go to state 103
    LPARENTHESIS    shift and go to state 104

    expresion                      shift and go to state 216
    nexp                           shift and go to state 106
    comexp                         shift and go to state 107
    sumexp                         shift and go to state 108
    mulexp                         shift and go to state 109
    pexp                           shift and go to state 110
    llamada                        shift and go to state 115

state 200

    (52) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN . LBRACKET estatuto RBRACKET else

    LBRACKET        shift and go to state 217


state 201

    (55) while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 218


state 202

    (42) asignacion -> ID addId arr EQUAL addOperator expresion quadEqual .

    SEMICOLON       reduce using rule 42 (asignacion -> ID addId arr EQUAL addOperator expresion quadEqual .)
    COMMA           reduce using rule 42 (asignacion -> ID addId arr EQUAL addOperator expresion quadEqual .)


state 203

    (57) expresion1 -> OR addOperator expresion .

    RPARENTHESIS    reduce using rule 57 (expresion1 -> OR addOperator expresion .)
    COMMA           reduce using rule 57 (expresion1 -> OR addOperator expresion .)
    SEMICOLON       reduce using rule 57 (expresion1 -> OR addOperator expresion .)


state 204

    (60) nexp1 -> AND addOperator nexp .

    OR              reduce using rule 60 (nexp1 -> AND addOperator nexp .)
    RPARENTHESIS    reduce using rule 60 (nexp1 -> AND addOperator nexp .)
    COMMA           reduce using rule 60 (nexp1 -> AND addOperator nexp .)
    SEMICOLON       reduce using rule 60 (nexp1 -> AND addOperator nexp .)


state 205

    (63) compex1 -> GTHAN addOperator sumexp .

    AND             reduce using rule 63 (compex1 -> GTHAN addOperator sumexp .)
    OR              reduce using rule 63 (compex1 -> GTHAN addOperator sumexp .)
    RPARENTHESIS    reduce using rule 63 (compex1 -> GTHAN addOperator sumexp .)
    COMMA           reduce using rule 63 (compex1 -> GTHAN addOperator sumexp .)
    SEMICOLON       reduce using rule 63 (compex1 -> GTHAN addOperator sumexp .)


state 206

    (64) compex1 -> LTHAN addOperator sumexp .

    AND             reduce using rule 64 (compex1 -> LTHAN addOperator sumexp .)
    OR              reduce using rule 64 (compex1 -> LTHAN addOperator sumexp .)
    RPARENTHESIS    reduce using rule 64 (compex1 -> LTHAN addOperator sumexp .)
    COMMA           reduce using rule 64 (compex1 -> LTHAN addOperator sumexp .)
    SEMICOLON       reduce using rule 64 (compex1 -> LTHAN addOperator sumexp .)


state 207

    (65) compex1 -> GTHANEQ addOperator sumexp .

    AND             reduce using rule 65 (compex1 -> GTHANEQ addOperator sumexp .)
    OR              reduce using rule 65 (compex1 -> GTHANEQ addOperator sumexp .)
    RPARENTHESIS    reduce using rule 65 (compex1 -> GTHANEQ addOperator sumexp .)
    COMMA           reduce using rule 65 (compex1 -> GTHANEQ addOperator sumexp .)
    SEMICOLON       reduce using rule 65 (compex1 -> GTHANEQ addOperator sumexp .)


state 208

    (66) compex1 -> LTHANEQ addOperator sumexp .

    AND             reduce using rule 66 (compex1 -> LTHANEQ addOperator sumexp .)
    OR              reduce using rule 66 (compex1 -> LTHANEQ addOperator sumexp .)
    RPARENTHESIS    reduce using rule 66 (compex1 -> LTHANEQ addOperator sumexp .)
    COMMA           reduce using rule 66 (compex1 -> LTHANEQ addOperator sumexp .)
    SEMICOLON       reduce using rule 66 (compex1 -> LTHANEQ addOperator sumexp .)


state 209

    (67) compex1 -> DIFFERENT addOperator sumexp .

    AND             reduce using rule 67 (compex1 -> DIFFERENT addOperator sumexp .)
    OR              reduce using rule 67 (compex1 -> DIFFERENT addOperator sumexp .)
    RPARENTHESIS    reduce using rule 67 (compex1 -> DIFFERENT addOperator sumexp .)
    COMMA           reduce using rule 67 (compex1 -> DIFFERENT addOperator sumexp .)
    SEMICOLON       reduce using rule 67 (compex1 -> DIFFERENT addOperator sumexp .)


state 210

    (68) compex1 -> EQUALS addOperator sumexp .

    AND             reduce using rule 68 (compex1 -> EQUALS addOperator sumexp .)
    OR              reduce using rule 68 (compex1 -> EQUALS addOperator sumexp .)
    RPARENTHESIS    reduce using rule 68 (compex1 -> EQUALS addOperator sumexp .)
    COMMA           reduce using rule 68 (compex1 -> EQUALS addOperator sumexp .)
    SEMICOLON       reduce using rule 68 (compex1 -> EQUALS addOperator sumexp .)


state 211

    (71) sumexp1 -> PLUS addOperator sumexp .

    GTHAN           reduce using rule 71 (sumexp1 -> PLUS addOperator sumexp .)
    LTHAN           reduce using rule 71 (sumexp1 -> PLUS addOperator sumexp .)
    GTHANEQ         reduce using rule 71 (sumexp1 -> PLUS addOperator sumexp .)
    LTHANEQ         reduce using rule 71 (sumexp1 -> PLUS addOperator sumexp .)
    DIFFERENT       reduce using rule 71 (sumexp1 -> PLUS addOperator sumexp .)
    EQUALS          reduce using rule 71 (sumexp1 -> PLUS addOperator sumexp .)
    AND             reduce using rule 71 (sumexp1 -> PLUS addOperator sumexp .)
    OR              reduce using rule 71 (sumexp1 -> PLUS addOperator sumexp .)
    RPARENTHESIS    reduce using rule 71 (sumexp1 -> PLUS addOperator sumexp .)
    COMMA           reduce using rule 71 (sumexp1 -> PLUS addOperator sumexp .)
    SEMICOLON       reduce using rule 71 (sumexp1 -> PLUS addOperator sumexp .)


state 212

    (72) sumexp1 -> MINUS addOperator sumexp .

    GTHAN           reduce using rule 72 (sumexp1 -> MINUS addOperator sumexp .)
    LTHAN           reduce using rule 72 (sumexp1 -> MINUS addOperator sumexp .)
    GTHANEQ         reduce using rule 72 (sumexp1 -> MINUS addOperator sumexp .)
    LTHANEQ         reduce using rule 72 (sumexp1 -> MINUS addOperator sumexp .)
    DIFFERENT       reduce using rule 72 (sumexp1 -> MINUS addOperator sumexp .)
    EQUALS          reduce using rule 72 (sumexp1 -> MINUS addOperator sumexp .)
    AND             reduce using rule 72 (sumexp1 -> MINUS addOperator sumexp .)
    OR              reduce using rule 72 (sumexp1 -> MINUS addOperator sumexp .)
    RPARENTHESIS    reduce using rule 72 (sumexp1 -> MINUS addOperator sumexp .)
    COMMA           reduce using rule 72 (sumexp1 -> MINUS addOperator sumexp .)
    SEMICOLON       reduce using rule 72 (sumexp1 -> MINUS addOperator sumexp .)


state 213

    (75) mulexp1 -> MULTIPLICATION addOperator mulexp .

    PLUS            reduce using rule 75 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    MINUS           reduce using rule 75 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    GTHAN           reduce using rule 75 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    LTHAN           reduce using rule 75 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    GTHANEQ         reduce using rule 75 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    LTHANEQ         reduce using rule 75 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    DIFFERENT       reduce using rule 75 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    EQUALS          reduce using rule 75 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    AND             reduce using rule 75 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    OR              reduce using rule 75 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    RPARENTHESIS    reduce using rule 75 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    COMMA           reduce using rule 75 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    SEMICOLON       reduce using rule 75 (mulexp1 -> MULTIPLICATION addOperator mulexp .)


state 214

    (76) mulexp1 -> DIVISION addOperator mulexp .

    PLUS            reduce using rule 76 (mulexp1 -> DIVISION addOperator mulexp .)
    MINUS           reduce using rule 76 (mulexp1 -> DIVISION addOperator mulexp .)
    GTHAN           reduce using rule 76 (mulexp1 -> DIVISION addOperator mulexp .)
    LTHAN           reduce using rule 76 (mulexp1 -> DIVISION addOperator mulexp .)
    GTHANEQ         reduce using rule 76 (mulexp1 -> DIVISION addOperator mulexp .)
    LTHANEQ         reduce using rule 76 (mulexp1 -> DIVISION addOperator mulexp .)
    DIFFERENT       reduce using rule 76 (mulexp1 -> DIVISION addOperator mulexp .)
    EQUALS          reduce using rule 76 (mulexp1 -> DIVISION addOperator mulexp .)
    AND             reduce using rule 76 (mulexp1 -> DIVISION addOperator mulexp .)
    OR              reduce using rule 76 (mulexp1 -> DIVISION addOperator mulexp .)
    RPARENTHESIS    reduce using rule 76 (mulexp1 -> DIVISION addOperator mulexp .)
    COMMA           reduce using rule 76 (mulexp1 -> DIVISION addOperator mulexp .)
    SEMICOLON       reduce using rule 76 (mulexp1 -> DIVISION addOperator mulexp .)


state 215

    (48) escritura2 -> COMMA escritura1 .

    RPARENTHESIS    reduce using rule 48 (escritura2 -> COMMA escritura1 .)


state 216

    (51) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion . RPARENTHESIS LBRACKET estatuto RBRACKET

    RPARENTHESIS    shift and go to state 219


state 217

    (52) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET . estatuto RBRACKET else
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (99) empty -> .
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (44) lectura -> . READ readOperator LPARENTHESIS expresion RPARENTHESIS
    (46) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (51) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (52) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else
    (55) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 99 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 220
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 218

    (55) while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .

    ID              reduce using rule 55 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    READ            reduce using rule 55 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    PRINT           reduce using rule 55 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    FOR             reduce using rule 55 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    IF              reduce using rule 55 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    WHILE           reduce using rule 55 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    RBRACKET        reduce using rule 55 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    RETURN          reduce using rule 55 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)


state 219

    (51) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 221


state 220

    (52) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto . RBRACKET else

    RBRACKET        shift and go to state 222


state 221

    (51) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET . estatuto RBRACKET
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (99) empty -> .
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (44) lectura -> . READ readOperator LPARENTHESIS expresion RPARENTHESIS
    (46) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (51) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (52) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else
    (55) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 99 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    asignacion                     shift and go to state 68
    estatuto                       shift and go to state 223
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 222

    (52) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET . else
    (53) else -> . ELSE LBRACKET estatuto RBRACKET
    (54) else -> . empty
    (99) empty -> .

    ELSE            shift and go to state 225
    ID              reduce using rule 99 (empty -> .)
    READ            reduce using rule 99 (empty -> .)
    PRINT           reduce using rule 99 (empty -> .)
    FOR             reduce using rule 99 (empty -> .)
    IF              reduce using rule 99 (empty -> .)
    WHILE           reduce using rule 99 (empty -> .)
    RBRACKET        reduce using rule 99 (empty -> .)
    RETURN          reduce using rule 99 (empty -> .)

    else                           shift and go to state 224
    empty                          shift and go to state 226

state 223

    (51) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 227


state 224

    (52) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else .

    ID              reduce using rule 52 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else .)
    READ            reduce using rule 52 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else .)
    PRINT           reduce using rule 52 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else .)
    FOR             reduce using rule 52 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else .)
    IF              reduce using rule 52 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else .)
    WHILE           reduce using rule 52 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else .)
    RBRACKET        reduce using rule 52 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else .)
    RETURN          reduce using rule 52 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else .)


state 225

    (53) else -> ELSE . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 228


state 226

    (54) else -> empty .

    ID              reduce using rule 54 (else -> empty .)
    READ            reduce using rule 54 (else -> empty .)
    PRINT           reduce using rule 54 (else -> empty .)
    FOR             reduce using rule 54 (else -> empty .)
    IF              reduce using rule 54 (else -> empty .)
    WHILE           reduce using rule 54 (else -> empty .)
    RBRACKET        reduce using rule 54 (else -> empty .)
    RETURN          reduce using rule 54 (else -> empty .)


state 227

    (51) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .

    ID              reduce using rule 51 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    READ            reduce using rule 51 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    PRINT           reduce using rule 51 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    FOR             reduce using rule 51 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    IF              reduce using rule 51 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    WHILE           reduce using rule 51 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    RBRACKET        reduce using rule 51 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    RETURN          reduce using rule 51 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)


state 228

    (53) else -> ELSE LBRACKET . estatuto RBRACKET
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (99) empty -> .
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (44) lectura -> . READ readOperator LPARENTHESIS expresion RPARENTHESIS
    (46) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (51) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (52) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else
    (55) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 99 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 229
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 229

    (53) else -> ELSE LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 230


state 230

    (53) else -> ELSE LBRACKET estatuto RBRACKET .

    ID              reduce using rule 53 (else -> ELSE LBRACKET estatuto RBRACKET .)
    READ            reduce using rule 53 (else -> ELSE LBRACKET estatuto RBRACKET .)
    PRINT           reduce using rule 53 (else -> ELSE LBRACKET estatuto RBRACKET .)
    FOR             reduce using rule 53 (else -> ELSE LBRACKET estatuto RBRACKET .)
    IF              reduce using rule 53 (else -> ELSE LBRACKET estatuto RBRACKET .)
    WHILE           reduce using rule 53 (else -> ELSE LBRACKET estatuto RBRACKET .)
    RBRACKET        reduce using rule 53 (else -> ELSE LBRACKET estatuto RBRACKET .)
    RETURN          reduce using rule 53 (else -> ELSE LBRACKET estatuto RBRACKET .)


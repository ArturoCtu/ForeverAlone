Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> addProgram PROGRAM ID SEMICOLON programa1 END
Rule 2     addProgram -> <empty>
Rule 3     programa1 -> vars funcion principal
Rule 4     principal -> MAIN LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
Rule 5     vars -> VAR vars1
Rule 6     vars -> empty
Rule 7     vars1 -> tipo vars2 SEMICOLON varsadd
Rule 8     vars2 -> ID arr vars3
Rule 9     vars3 -> COMMA vars2
Rule 10    vars3 -> empty
Rule 11    varsadd -> vars1
Rule 12    varsadd -> empty
Rule 13    tipo -> INT
Rule 14    tipo -> FLOAT
Rule 15    tipo -> CHAR
Rule 16    tipo -> STRING
Rule 17    arr -> LSQRBRACKET CTEI RSQRBRACKET
Rule 18    arr -> empty
Rule 19    parameters -> parameters2
Rule 20    parameters -> empty
Rule 21    parameters2 -> tipo ID
Rule 22    parameters2 -> tipo ID parameters3
Rule 23    parameters3 -> COMMA ID parameters3
Rule 24    parameters3 -> COMMA tipo ID parameters3
Rule 25    parameters3 -> COMMA ID
Rule 26    parameters3 -> COMMA tipo ID
Rule 27    funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
Rule 28    funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
Rule 29    funcion -> empty
Rule 30    addFunction -> <empty>
Rule 31    retorno -> RETURN ID SEMICOLON
Rule 32    estatuto -> estatuto2 estatuto
Rule 33    estatuto -> empty
Rule 34    estatuto2 -> asignacion SEMICOLON
Rule 35    estatuto2 -> llamada SEMICOLON
Rule 36    estatuto2 -> lectura SEMICOLON
Rule 37    estatuto2 -> escritura SEMICOLON
Rule 38    estatuto2 -> for
Rule 39    estatuto2 -> if
Rule 40    estatuto2 -> while
Rule 41    asignacion -> ID arr EQUALS expresion
Rule 42    llamada -> ID LPARENTHESIS expresion RPARENTHESIS
Rule 43    lectura -> READ LPARENTHESIS vars2 RPARENTHESIS
Rule 44    escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS
Rule 45    escritura1 -> expresion escritura2
Rule 46    escritura2 -> COMMA escritura1
Rule 47    escritura2 -> empty
Rule 48    for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
Rule 49    if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
Rule 50    else -> ELSE LBRACKET estatuto RBRACKET
Rule 51    else -> empty
Rule 52    while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET
Rule 53    expresion -> nexp expresion1
Rule 54    expresion1 -> OR expresion
Rule 55    expresion1 -> empty
Rule 56    nexp -> comexp nexp1
Rule 57    nexp1 -> AND nexp
Rule 58    nexp1 -> empty
Rule 59    comexp -> sumexp compex1
Rule 60    compex1 -> GTHAN sumexp
Rule 61    compex1 -> LTHAN sumexp
Rule 62    compex1 -> GTHANEQ sumexp
Rule 63    compex1 -> LTHANEQ sumexp
Rule 64    compex1 -> DIFFERENT sumexp
Rule 65    compex1 -> empty
Rule 66    sumexp -> mulexp sumexp1
Rule 67    sumexp1 -> PLUS sumexp
Rule 68    sumexp1 -> MINUS sumexp
Rule 69    sumexp1 -> empty
Rule 70    mulexp -> pexp mulexp1
Rule 71    mulexp1 -> MULTIPLICATION mulexp
Rule 72    mulexp1 -> DIVISION mulexp
Rule 73    mulexp1 -> empty
Rule 74    pexp -> CTEI
Rule 75    pexp -> CTEF
Rule 76    pexp -> CTEC
Rule 77    pexp -> CTESTRING
Rule 78    pexp -> llamada
Rule 79    pexp -> ID
Rule 80    pexp -> LPARENTHESIS expresion RPARENTHESIS
Rule 81    empty -> <empty>

Terminals, with rules where they appear

AND                  : 57
CHAR                 : 15
COMMA                : 9 23 24 25 26 46 48
CTEC                 : 76
CTEF                 : 75
CTEI                 : 17 74
CTESTRING            : 77
DIFFERENT            : 64
DIVISION             : 72
ELSE                 : 50
END                  : 1
EQUALS               : 41
FLOAT                : 14
FOR                  : 48
FROM                 : 48
FUNCTION             : 27 28
GTHAN                : 60
GTHANEQ              : 62
ID                   : 1 8 21 22 23 24 25 26 27 28 31 41 42 79
IF                   : 49
INT                  : 13
LBRACKET             : 4 27 28 48 49 50 52
LPARENTHESIS         : 4 27 28 42 43 44 48 49 52 80
LSQRBRACKET          : 17
LTHAN                : 61
LTHANEQ              : 63
MAIN                 : 4
MINUS                : 68
MULTIPLICATION       : 71
OR                   : 54
PLUS                 : 67
PRINT                : 44
PROGRAM              : 1
RBRACKET             : 4 27 28 48 49 50 52
READ                 : 43
RETURN               : 31
RPARENTHESIS         : 4 27 28 42 43 44 48 49 52 80
RSQRBRACKET          : 17
SEMICOLON            : 1 7 31 34 35 36 37
STRING               : 16
THEN                 : 49
TO                   : 48
VAR                  : 5
VOID                 : 28
WHILE                : 52
error                : 

Nonterminals, with rules where they appear

addFunction          : 27 28
addProgram           : 1
arr                  : 8 41
asignacion           : 34 48
comexp               : 56
compex1              : 59
else                 : 49
empty                : 6 10 12 18 20 29 33 47 51 55 58 65 69 73
escritura            : 37
escritura1           : 44 46
escritura2           : 45
estatuto             : 4 27 28 32 48 49 50 52
estatuto2            : 32
expresion            : 41 42 45 48 49 52 54 80
expresion1           : 53
for                  : 38
funcion              : 3 27 28
if                   : 39
lectura              : 36
llamada              : 35 78
mulexp               : 66 71 72
mulexp1              : 70
nexp                 : 53 57
nexp1                : 56
parameters           : 4 27 28
parameters2          : 19
parameters3          : 22 23 24
pexp                 : 70
principal            : 3
programa             : 0
programa1            : 1
retorno              : 27
sumexp               : 59 60 61 62 63 64 67 68
sumexp1              : 66
tipo                 : 7 21 22 24 26 27
vars                 : 3 4 27 28
vars1                : 5 11
vars2                : 7 9 43
vars3                : 8
varsadd              : 7
while                : 40

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . addProgram PROGRAM ID SEMICOLON programa1 END
    (2) addProgram -> .

    PROGRAM         reduce using rule 2 (addProgram -> .)

    programa                       shift and go to state 1
    addProgram                     shift and go to state 2

state 1

    (0) S' -> programa .



state 2

    (1) programa -> addProgram . PROGRAM ID SEMICOLON programa1 END

    PROGRAM         shift and go to state 3


state 3

    (1) programa -> addProgram PROGRAM . ID SEMICOLON programa1 END

    ID              shift and go to state 4


state 4

    (1) programa -> addProgram PROGRAM ID . SEMICOLON programa1 END

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> addProgram PROGRAM ID SEMICOLON . programa1 END
    (3) programa1 -> . vars funcion principal
    (5) vars -> . VAR vars1
    (6) vars -> . empty
    (81) empty -> .

    VAR             shift and go to state 8
    FUNCTION        reduce using rule 81 (empty -> .)
    MAIN            reduce using rule 81 (empty -> .)

    programa1                      shift and go to state 6
    vars                           shift and go to state 7
    empty                          shift and go to state 9

state 6

    (1) programa -> addProgram PROGRAM ID SEMICOLON programa1 . END

    END             shift and go to state 10


state 7

    (3) programa1 -> vars . funcion principal
    (27) funcion -> . FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (28) funcion -> . FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (29) funcion -> . empty
    (81) empty -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 81 (empty -> .)

    funcion                        shift and go to state 11
    empty                          shift and go to state 13

state 8

    (5) vars -> VAR . vars1
    (7) vars1 -> . tipo vars2 SEMICOLON varsadd
    (13) tipo -> . INT
    (14) tipo -> . FLOAT
    (15) tipo -> . CHAR
    (16) tipo -> . STRING

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    vars1                          shift and go to state 14
    tipo                           shift and go to state 15

state 9

    (6) vars -> empty .

    FUNCTION        reduce using rule 6 (vars -> empty .)
    MAIN            reduce using rule 6 (vars -> empty .)
    LBRACKET        reduce using rule 6 (vars -> empty .)


state 10

    (1) programa -> addProgram PROGRAM ID SEMICOLON programa1 END .

    $end            reduce using rule 1 (programa -> addProgram PROGRAM ID SEMICOLON programa1 END .)


state 11

    (3) programa1 -> vars funcion . principal
    (4) principal -> . MAIN LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET

    MAIN            shift and go to state 21

    principal                      shift and go to state 20

state 12

    (27) funcion -> FUNCTION . tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (28) funcion -> FUNCTION . VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (13) tipo -> . INT
    (14) tipo -> . FLOAT
    (15) tipo -> . CHAR
    (16) tipo -> . STRING

    VOID            shift and go to state 23
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 22

state 13

    (29) funcion -> empty .

    MAIN            reduce using rule 29 (funcion -> empty .)


state 14

    (5) vars -> VAR vars1 .

    FUNCTION        reduce using rule 5 (vars -> VAR vars1 .)
    MAIN            reduce using rule 5 (vars -> VAR vars1 .)
    LBRACKET        reduce using rule 5 (vars -> VAR vars1 .)


state 15

    (7) vars1 -> tipo . vars2 SEMICOLON varsadd
    (8) vars2 -> . ID arr vars3

    ID              shift and go to state 25

    vars2                          shift and go to state 24

state 16

    (13) tipo -> INT .

    ID              reduce using rule 13 (tipo -> INT .)


state 17

    (14) tipo -> FLOAT .

    ID              reduce using rule 14 (tipo -> FLOAT .)


state 18

    (15) tipo -> CHAR .

    ID              reduce using rule 15 (tipo -> CHAR .)


state 19

    (16) tipo -> STRING .

    ID              reduce using rule 16 (tipo -> STRING .)


state 20

    (3) programa1 -> vars funcion principal .

    END             reduce using rule 3 (programa1 -> vars funcion principal .)


state 21

    (4) principal -> MAIN . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET

    LPARENTHESIS    shift and go to state 26


state 22

    (27) funcion -> FUNCTION tipo . ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion

    ID              shift and go to state 27


state 23

    (28) funcion -> FUNCTION VOID . ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion

    ID              shift and go to state 28


state 24

    (7) vars1 -> tipo vars2 . SEMICOLON varsadd

    SEMICOLON       shift and go to state 29


state 25

    (8) vars2 -> ID . arr vars3
    (17) arr -> . LSQRBRACKET CTEI RSQRBRACKET
    (18) arr -> . empty
    (81) empty -> .

    LSQRBRACKET     shift and go to state 31
    COMMA           reduce using rule 81 (empty -> .)
    SEMICOLON       reduce using rule 81 (empty -> .)
    RPARENTHESIS    reduce using rule 81 (empty -> .)

    arr                            shift and go to state 30
    empty                          shift and go to state 32

state 26

    (4) principal -> MAIN LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
    (19) parameters -> . parameters2
    (20) parameters -> . empty
    (21) parameters2 -> . tipo ID
    (22) parameters2 -> . tipo ID parameters3
    (81) empty -> .
    (13) tipo -> . INT
    (14) tipo -> . FLOAT
    (15) tipo -> . CHAR
    (16) tipo -> . STRING

    RPARENTHESIS    reduce using rule 81 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    parameters                     shift and go to state 33
    parameters2                    shift and go to state 34
    empty                          shift and go to state 35
    tipo                           shift and go to state 36

state 27

    (27) funcion -> FUNCTION tipo ID . addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (30) addFunction -> .

    LPARENTHESIS    reduce using rule 30 (addFunction -> .)

    addFunction                    shift and go to state 37

state 28

    (28) funcion -> FUNCTION VOID ID . addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (30) addFunction -> .

    LPARENTHESIS    reduce using rule 30 (addFunction -> .)

    addFunction                    shift and go to state 38

state 29

    (7) vars1 -> tipo vars2 SEMICOLON . varsadd
    (11) varsadd -> . vars1
    (12) varsadd -> . empty
    (7) vars1 -> . tipo vars2 SEMICOLON varsadd
    (81) empty -> .
    (13) tipo -> . INT
    (14) tipo -> . FLOAT
    (15) tipo -> . CHAR
    (16) tipo -> . STRING

    FUNCTION        reduce using rule 81 (empty -> .)
    MAIN            reduce using rule 81 (empty -> .)
    LBRACKET        reduce using rule 81 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 15
    varsadd                        shift and go to state 39
    vars1                          shift and go to state 40
    empty                          shift and go to state 41

state 30

    (8) vars2 -> ID arr . vars3
    (9) vars3 -> . COMMA vars2
    (10) vars3 -> . empty
    (81) empty -> .

    COMMA           shift and go to state 43
    SEMICOLON       reduce using rule 81 (empty -> .)
    RPARENTHESIS    reduce using rule 81 (empty -> .)

    vars3                          shift and go to state 42
    empty                          shift and go to state 44

state 31

    (17) arr -> LSQRBRACKET . CTEI RSQRBRACKET

    CTEI            shift and go to state 45


state 32

    (18) arr -> empty .

    COMMA           reduce using rule 18 (arr -> empty .)
    SEMICOLON       reduce using rule 18 (arr -> empty .)
    RPARENTHESIS    reduce using rule 18 (arr -> empty .)
    EQUALS          reduce using rule 18 (arr -> empty .)


state 33

    (4) principal -> MAIN LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto RBRACKET

    RPARENTHESIS    shift and go to state 46


state 34

    (19) parameters -> parameters2 .

    RPARENTHESIS    reduce using rule 19 (parameters -> parameters2 .)


state 35

    (20) parameters -> empty .

    RPARENTHESIS    reduce using rule 20 (parameters -> empty .)


state 36

    (21) parameters2 -> tipo . ID
    (22) parameters2 -> tipo . ID parameters3

    ID              shift and go to state 47


state 37

    (27) funcion -> FUNCTION tipo ID addFunction . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion

    LPARENTHESIS    shift and go to state 48


state 38

    (28) funcion -> FUNCTION VOID ID addFunction . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion

    LPARENTHESIS    shift and go to state 49


state 39

    (7) vars1 -> tipo vars2 SEMICOLON varsadd .

    FUNCTION        reduce using rule 7 (vars1 -> tipo vars2 SEMICOLON varsadd .)
    MAIN            reduce using rule 7 (vars1 -> tipo vars2 SEMICOLON varsadd .)
    LBRACKET        reduce using rule 7 (vars1 -> tipo vars2 SEMICOLON varsadd .)


state 40

    (11) varsadd -> vars1 .

    FUNCTION        reduce using rule 11 (varsadd -> vars1 .)
    MAIN            reduce using rule 11 (varsadd -> vars1 .)
    LBRACKET        reduce using rule 11 (varsadd -> vars1 .)


state 41

    (12) varsadd -> empty .

    FUNCTION        reduce using rule 12 (varsadd -> empty .)
    MAIN            reduce using rule 12 (varsadd -> empty .)
    LBRACKET        reduce using rule 12 (varsadd -> empty .)


state 42

    (8) vars2 -> ID arr vars3 .

    SEMICOLON       reduce using rule 8 (vars2 -> ID arr vars3 .)
    RPARENTHESIS    reduce using rule 8 (vars2 -> ID arr vars3 .)


state 43

    (9) vars3 -> COMMA . vars2
    (8) vars2 -> . ID arr vars3

    ID              shift and go to state 25

    vars2                          shift and go to state 50

state 44

    (10) vars3 -> empty .

    SEMICOLON       reduce using rule 10 (vars3 -> empty .)
    RPARENTHESIS    reduce using rule 10 (vars3 -> empty .)


state 45

    (17) arr -> LSQRBRACKET CTEI . RSQRBRACKET

    RSQRBRACKET     shift and go to state 51


state 46

    (4) principal -> MAIN LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto RBRACKET
    (5) vars -> . VAR vars1
    (6) vars -> . empty
    (81) empty -> .

    VAR             shift and go to state 8
    LBRACKET        reduce using rule 81 (empty -> .)

    vars                           shift and go to state 52
    empty                          shift and go to state 9

state 47

    (21) parameters2 -> tipo ID .
    (22) parameters2 -> tipo ID . parameters3
    (23) parameters3 -> . COMMA ID parameters3
    (24) parameters3 -> . COMMA tipo ID parameters3
    (25) parameters3 -> . COMMA ID
    (26) parameters3 -> . COMMA tipo ID

    RPARENTHESIS    reduce using rule 21 (parameters2 -> tipo ID .)
    COMMA           shift and go to state 54

    parameters3                    shift and go to state 53

state 48

    (27) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (19) parameters -> . parameters2
    (20) parameters -> . empty
    (21) parameters2 -> . tipo ID
    (22) parameters2 -> . tipo ID parameters3
    (81) empty -> .
    (13) tipo -> . INT
    (14) tipo -> . FLOAT
    (15) tipo -> . CHAR
    (16) tipo -> . STRING

    RPARENTHESIS    reduce using rule 81 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 36
    parameters                     shift and go to state 55
    parameters2                    shift and go to state 34
    empty                          shift and go to state 35

state 49

    (28) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (19) parameters -> . parameters2
    (20) parameters -> . empty
    (21) parameters2 -> . tipo ID
    (22) parameters2 -> . tipo ID parameters3
    (81) empty -> .
    (13) tipo -> . INT
    (14) tipo -> . FLOAT
    (15) tipo -> . CHAR
    (16) tipo -> . STRING

    RPARENTHESIS    reduce using rule 81 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    parameters                     shift and go to state 56
    parameters2                    shift and go to state 34
    empty                          shift and go to state 35
    tipo                           shift and go to state 36

state 50

    (9) vars3 -> COMMA vars2 .

    SEMICOLON       reduce using rule 9 (vars3 -> COMMA vars2 .)
    RPARENTHESIS    reduce using rule 9 (vars3 -> COMMA vars2 .)


state 51

    (17) arr -> LSQRBRACKET CTEI RSQRBRACKET .

    COMMA           reduce using rule 17 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)
    SEMICOLON       reduce using rule 17 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)
    RPARENTHESIS    reduce using rule 17 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)
    EQUALS          reduce using rule 17 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)


state 52

    (4) principal -> MAIN LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 57


state 53

    (22) parameters2 -> tipo ID parameters3 .

    RPARENTHESIS    reduce using rule 22 (parameters2 -> tipo ID parameters3 .)


state 54

    (23) parameters3 -> COMMA . ID parameters3
    (24) parameters3 -> COMMA . tipo ID parameters3
    (25) parameters3 -> COMMA . ID
    (26) parameters3 -> COMMA . tipo ID
    (13) tipo -> . INT
    (14) tipo -> . FLOAT
    (15) tipo -> . CHAR
    (16) tipo -> . STRING

    ID              shift and go to state 58
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 59

state 55

    (27) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion

    RPARENTHESIS    shift and go to state 60


state 56

    (28) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion

    RPARENTHESIS    shift and go to state 61


state 57

    (4) principal -> MAIN LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto RBRACKET
    (32) estatuto -> . estatuto2 estatuto
    (33) estatuto -> . empty
    (34) estatuto2 -> . asignacion SEMICOLON
    (35) estatuto2 -> . llamada SEMICOLON
    (36) estatuto2 -> . lectura SEMICOLON
    (37) estatuto2 -> . escritura SEMICOLON
    (38) estatuto2 -> . for
    (39) estatuto2 -> . if
    (40) estatuto2 -> . while
    (81) empty -> .
    (41) asignacion -> . ID arr EQUALS expresion
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (43) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (44) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (48) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (49) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (52) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 81 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    PRINT           shift and go to state 74
    FOR             shift and go to state 75
    IF              shift and go to state 76
    WHILE           shift and go to state 77

    estatuto                       shift and go to state 62
    estatuto2                      shift and go to state 63
    empty                          shift and go to state 64
    asignacion                     shift and go to state 65
    llamada                        shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    for                            shift and go to state 69
    if                             shift and go to state 70
    while                          shift and go to state 71

state 58

    (23) parameters3 -> COMMA ID . parameters3
    (25) parameters3 -> COMMA ID .
    (23) parameters3 -> . COMMA ID parameters3
    (24) parameters3 -> . COMMA tipo ID parameters3
    (25) parameters3 -> . COMMA ID
    (26) parameters3 -> . COMMA tipo ID

    RPARENTHESIS    reduce using rule 25 (parameters3 -> COMMA ID .)
    COMMA           shift and go to state 54

    parameters3                    shift and go to state 78

state 59

    (24) parameters3 -> COMMA tipo . ID parameters3
    (26) parameters3 -> COMMA tipo . ID

    ID              shift and go to state 79


state 60

    (27) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto retorno RBRACKET funcion
    (5) vars -> . VAR vars1
    (6) vars -> . empty
    (81) empty -> .

    VAR             shift and go to state 8
    LBRACKET        reduce using rule 81 (empty -> .)

    vars                           shift and go to state 80
    empty                          shift and go to state 9

state 61

    (28) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto RBRACKET funcion
    (5) vars -> . VAR vars1
    (6) vars -> . empty
    (81) empty -> .

    VAR             shift and go to state 8
    LBRACKET        reduce using rule 81 (empty -> .)

    vars                           shift and go to state 81
    empty                          shift and go to state 9

state 62

    (4) principal -> MAIN LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 82


state 63

    (32) estatuto -> estatuto2 . estatuto
    (32) estatuto -> . estatuto2 estatuto
    (33) estatuto -> . empty
    (34) estatuto2 -> . asignacion SEMICOLON
    (35) estatuto2 -> . llamada SEMICOLON
    (36) estatuto2 -> . lectura SEMICOLON
    (37) estatuto2 -> . escritura SEMICOLON
    (38) estatuto2 -> . for
    (39) estatuto2 -> . if
    (40) estatuto2 -> . while
    (81) empty -> .
    (41) asignacion -> . ID arr EQUALS expresion
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (43) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (44) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (48) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (49) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (52) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 81 (empty -> .)
    RETURN          reduce using rule 81 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    PRINT           shift and go to state 74
    FOR             shift and go to state 75
    IF              shift and go to state 76
    WHILE           shift and go to state 77

    estatuto2                      shift and go to state 63
    estatuto                       shift and go to state 83
    empty                          shift and go to state 64
    asignacion                     shift and go to state 65
    llamada                        shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    for                            shift and go to state 69
    if                             shift and go to state 70
    while                          shift and go to state 71

state 64

    (33) estatuto -> empty .

    RBRACKET        reduce using rule 33 (estatuto -> empty .)
    RETURN          reduce using rule 33 (estatuto -> empty .)


state 65

    (34) estatuto2 -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 84


state 66

    (35) estatuto2 -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 85


state 67

    (36) estatuto2 -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 86


state 68

    (37) estatuto2 -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 87


state 69

    (38) estatuto2 -> for .

    ID              reduce using rule 38 (estatuto2 -> for .)
    READ            reduce using rule 38 (estatuto2 -> for .)
    PRINT           reduce using rule 38 (estatuto2 -> for .)
    FOR             reduce using rule 38 (estatuto2 -> for .)
    IF              reduce using rule 38 (estatuto2 -> for .)
    WHILE           reduce using rule 38 (estatuto2 -> for .)
    RBRACKET        reduce using rule 38 (estatuto2 -> for .)
    RETURN          reduce using rule 38 (estatuto2 -> for .)


state 70

    (39) estatuto2 -> if .

    ID              reduce using rule 39 (estatuto2 -> if .)
    READ            reduce using rule 39 (estatuto2 -> if .)
    PRINT           reduce using rule 39 (estatuto2 -> if .)
    FOR             reduce using rule 39 (estatuto2 -> if .)
    IF              reduce using rule 39 (estatuto2 -> if .)
    WHILE           reduce using rule 39 (estatuto2 -> if .)
    RBRACKET        reduce using rule 39 (estatuto2 -> if .)
    RETURN          reduce using rule 39 (estatuto2 -> if .)


state 71

    (40) estatuto2 -> while .

    ID              reduce using rule 40 (estatuto2 -> while .)
    READ            reduce using rule 40 (estatuto2 -> while .)
    PRINT           reduce using rule 40 (estatuto2 -> while .)
    FOR             reduce using rule 40 (estatuto2 -> while .)
    IF              reduce using rule 40 (estatuto2 -> while .)
    WHILE           reduce using rule 40 (estatuto2 -> while .)
    RBRACKET        reduce using rule 40 (estatuto2 -> while .)
    RETURN          reduce using rule 40 (estatuto2 -> while .)


state 72

    (41) asignacion -> ID . arr EQUALS expresion
    (42) llamada -> ID . LPARENTHESIS expresion RPARENTHESIS
    (17) arr -> . LSQRBRACKET CTEI RSQRBRACKET
    (18) arr -> . empty
    (81) empty -> .

    LPARENTHESIS    shift and go to state 89
    LSQRBRACKET     shift and go to state 31
    EQUALS          reduce using rule 81 (empty -> .)

    arr                            shift and go to state 88
    empty                          shift and go to state 32

state 73

    (43) lectura -> READ . LPARENTHESIS vars2 RPARENTHESIS

    LPARENTHESIS    shift and go to state 90


state 74

    (44) escritura -> PRINT . LPARENTHESIS escritura1 RPARENTHESIS

    LPARENTHESIS    shift and go to state 91


state 75

    (48) for -> FOR . LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    LPARENTHESIS    shift and go to state 92


state 76

    (49) if -> IF . LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else

    LPARENTHESIS    shift and go to state 93


state 77

    (52) while -> WHILE . LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    LPARENTHESIS    shift and go to state 94


state 78

    (23) parameters3 -> COMMA ID parameters3 .

    RPARENTHESIS    reduce using rule 23 (parameters3 -> COMMA ID parameters3 .)


state 79

    (24) parameters3 -> COMMA tipo ID . parameters3
    (26) parameters3 -> COMMA tipo ID .
    (23) parameters3 -> . COMMA ID parameters3
    (24) parameters3 -> . COMMA tipo ID parameters3
    (25) parameters3 -> . COMMA ID
    (26) parameters3 -> . COMMA tipo ID

    RPARENTHESIS    reduce using rule 26 (parameters3 -> COMMA tipo ID .)
    COMMA           shift and go to state 54

    parameters3                    shift and go to state 95

state 80

    (27) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto retorno RBRACKET funcion

    LBRACKET        shift and go to state 96


state 81

    (28) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto RBRACKET funcion

    LBRACKET        shift and go to state 97


state 82

    (4) principal -> MAIN LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET .

    END             reduce using rule 4 (principal -> MAIN LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET .)


state 83

    (32) estatuto -> estatuto2 estatuto .

    RBRACKET        reduce using rule 32 (estatuto -> estatuto2 estatuto .)
    RETURN          reduce using rule 32 (estatuto -> estatuto2 estatuto .)


state 84

    (34) estatuto2 -> asignacion SEMICOLON .

    ID              reduce using rule 34 (estatuto2 -> asignacion SEMICOLON .)
    READ            reduce using rule 34 (estatuto2 -> asignacion SEMICOLON .)
    PRINT           reduce using rule 34 (estatuto2 -> asignacion SEMICOLON .)
    FOR             reduce using rule 34 (estatuto2 -> asignacion SEMICOLON .)
    IF              reduce using rule 34 (estatuto2 -> asignacion SEMICOLON .)
    WHILE           reduce using rule 34 (estatuto2 -> asignacion SEMICOLON .)
    RBRACKET        reduce using rule 34 (estatuto2 -> asignacion SEMICOLON .)
    RETURN          reduce using rule 34 (estatuto2 -> asignacion SEMICOLON .)


state 85

    (35) estatuto2 -> llamada SEMICOLON .

    ID              reduce using rule 35 (estatuto2 -> llamada SEMICOLON .)
    READ            reduce using rule 35 (estatuto2 -> llamada SEMICOLON .)
    PRINT           reduce using rule 35 (estatuto2 -> llamada SEMICOLON .)
    FOR             reduce using rule 35 (estatuto2 -> llamada SEMICOLON .)
    IF              reduce using rule 35 (estatuto2 -> llamada SEMICOLON .)
    WHILE           reduce using rule 35 (estatuto2 -> llamada SEMICOLON .)
    RBRACKET        reduce using rule 35 (estatuto2 -> llamada SEMICOLON .)
    RETURN          reduce using rule 35 (estatuto2 -> llamada SEMICOLON .)


state 86

    (36) estatuto2 -> lectura SEMICOLON .

    ID              reduce using rule 36 (estatuto2 -> lectura SEMICOLON .)
    READ            reduce using rule 36 (estatuto2 -> lectura SEMICOLON .)
    PRINT           reduce using rule 36 (estatuto2 -> lectura SEMICOLON .)
    FOR             reduce using rule 36 (estatuto2 -> lectura SEMICOLON .)
    IF              reduce using rule 36 (estatuto2 -> lectura SEMICOLON .)
    WHILE           reduce using rule 36 (estatuto2 -> lectura SEMICOLON .)
    RBRACKET        reduce using rule 36 (estatuto2 -> lectura SEMICOLON .)
    RETURN          reduce using rule 36 (estatuto2 -> lectura SEMICOLON .)


state 87

    (37) estatuto2 -> escritura SEMICOLON .

    ID              reduce using rule 37 (estatuto2 -> escritura SEMICOLON .)
    READ            reduce using rule 37 (estatuto2 -> escritura SEMICOLON .)
    PRINT           reduce using rule 37 (estatuto2 -> escritura SEMICOLON .)
    FOR             reduce using rule 37 (estatuto2 -> escritura SEMICOLON .)
    IF              reduce using rule 37 (estatuto2 -> escritura SEMICOLON .)
    WHILE           reduce using rule 37 (estatuto2 -> escritura SEMICOLON .)
    RBRACKET        reduce using rule 37 (estatuto2 -> escritura SEMICOLON .)
    RETURN          reduce using rule 37 (estatuto2 -> escritura SEMICOLON .)


state 88

    (41) asignacion -> ID arr . EQUALS expresion

    EQUALS          shift and go to state 98


state 89

    (42) llamada -> ID LPARENTHESIS . expresion RPARENTHESIS
    (53) expresion -> . nexp expresion1
    (56) nexp -> . comexp nexp1
    (59) comexp -> . sumexp compex1
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    expresion                      shift and go to state 101
    nexp                           shift and go to state 102
    comexp                         shift and go to state 103
    sumexp                         shift and go to state 104
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 90

    (43) lectura -> READ LPARENTHESIS . vars2 RPARENTHESIS
    (8) vars2 -> . ID arr vars3

    ID              shift and go to state 25

    vars2                          shift and go to state 112

state 91

    (44) escritura -> PRINT LPARENTHESIS . escritura1 RPARENTHESIS
    (45) escritura1 -> . expresion escritura2
    (53) expresion -> . nexp expresion1
    (56) nexp -> . comexp nexp1
    (59) comexp -> . sumexp compex1
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    escritura1                     shift and go to state 113
    expresion                      shift and go to state 114
    nexp                           shift and go to state 102
    comexp                         shift and go to state 103
    sumexp                         shift and go to state 104
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 92

    (48) for -> FOR LPARENTHESIS . FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    FROM            shift and go to state 115


state 93

    (49) if -> IF LPARENTHESIS . expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (53) expresion -> . nexp expresion1
    (56) nexp -> . comexp nexp1
    (59) comexp -> . sumexp compex1
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    expresion                      shift and go to state 116
    nexp                           shift and go to state 102
    comexp                         shift and go to state 103
    sumexp                         shift and go to state 104
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 94

    (52) while -> WHILE LPARENTHESIS . expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (53) expresion -> . nexp expresion1
    (56) nexp -> . comexp nexp1
    (59) comexp -> . sumexp compex1
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    expresion                      shift and go to state 117
    nexp                           shift and go to state 102
    comexp                         shift and go to state 103
    sumexp                         shift and go to state 104
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 95

    (24) parameters3 -> COMMA tipo ID parameters3 .

    RPARENTHESIS    reduce using rule 24 (parameters3 -> COMMA tipo ID parameters3 .)


state 96

    (27) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto retorno RBRACKET funcion
    (32) estatuto -> . estatuto2 estatuto
    (33) estatuto -> . empty
    (34) estatuto2 -> . asignacion SEMICOLON
    (35) estatuto2 -> . llamada SEMICOLON
    (36) estatuto2 -> . lectura SEMICOLON
    (37) estatuto2 -> . escritura SEMICOLON
    (38) estatuto2 -> . for
    (39) estatuto2 -> . if
    (40) estatuto2 -> . while
    (81) empty -> .
    (41) asignacion -> . ID arr EQUALS expresion
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (43) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (44) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (48) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (49) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (52) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RETURN          reduce using rule 81 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    PRINT           shift and go to state 74
    FOR             shift and go to state 75
    IF              shift and go to state 76
    WHILE           shift and go to state 77

    estatuto                       shift and go to state 118
    estatuto2                      shift and go to state 63
    empty                          shift and go to state 64
    asignacion                     shift and go to state 65
    llamada                        shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    for                            shift and go to state 69
    if                             shift and go to state 70
    while                          shift and go to state 71

state 97

    (28) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto RBRACKET funcion
    (32) estatuto -> . estatuto2 estatuto
    (33) estatuto -> . empty
    (34) estatuto2 -> . asignacion SEMICOLON
    (35) estatuto2 -> . llamada SEMICOLON
    (36) estatuto2 -> . lectura SEMICOLON
    (37) estatuto2 -> . escritura SEMICOLON
    (38) estatuto2 -> . for
    (39) estatuto2 -> . if
    (40) estatuto2 -> . while
    (81) empty -> .
    (41) asignacion -> . ID arr EQUALS expresion
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (43) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (44) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (48) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (49) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (52) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 81 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    PRINT           shift and go to state 74
    FOR             shift and go to state 75
    IF              shift and go to state 76
    WHILE           shift and go to state 77

    estatuto                       shift and go to state 119
    estatuto2                      shift and go to state 63
    empty                          shift and go to state 64
    asignacion                     shift and go to state 65
    llamada                        shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    for                            shift and go to state 69
    if                             shift and go to state 70
    while                          shift and go to state 71

state 98

    (41) asignacion -> ID arr EQUALS . expresion
    (53) expresion -> . nexp expresion1
    (56) nexp -> . comexp nexp1
    (59) comexp -> . sumexp compex1
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    expresion                      shift and go to state 120
    nexp                           shift and go to state 102
    comexp                         shift and go to state 103
    sumexp                         shift and go to state 104
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 99

    (79) pexp -> ID .
    (42) llamada -> ID . LPARENTHESIS expresion RPARENTHESIS

    MULTIPLICATION  reduce using rule 79 (pexp -> ID .)
    DIVISION        reduce using rule 79 (pexp -> ID .)
    PLUS            reduce using rule 79 (pexp -> ID .)
    MINUS           reduce using rule 79 (pexp -> ID .)
    GTHAN           reduce using rule 79 (pexp -> ID .)
    LTHAN           reduce using rule 79 (pexp -> ID .)
    GTHANEQ         reduce using rule 79 (pexp -> ID .)
    LTHANEQ         reduce using rule 79 (pexp -> ID .)
    DIFFERENT       reduce using rule 79 (pexp -> ID .)
    AND             reduce using rule 79 (pexp -> ID .)
    OR              reduce using rule 79 (pexp -> ID .)
    RPARENTHESIS    reduce using rule 79 (pexp -> ID .)
    COMMA           reduce using rule 79 (pexp -> ID .)
    SEMICOLON       reduce using rule 79 (pexp -> ID .)
    LPARENTHESIS    shift and go to state 89


state 100

    (80) pexp -> LPARENTHESIS . expresion RPARENTHESIS
    (53) expresion -> . nexp expresion1
    (56) nexp -> . comexp nexp1
    (59) comexp -> . sumexp compex1
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    expresion                      shift and go to state 121
    nexp                           shift and go to state 102
    comexp                         shift and go to state 103
    sumexp                         shift and go to state 104
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 101

    (42) llamada -> ID LPARENTHESIS expresion . RPARENTHESIS

    RPARENTHESIS    shift and go to state 122


state 102

    (53) expresion -> nexp . expresion1
    (54) expresion1 -> . OR expresion
    (55) expresion1 -> . empty
    (81) empty -> .

    OR              shift and go to state 124
    RPARENTHESIS    reduce using rule 81 (empty -> .)
    COMMA           reduce using rule 81 (empty -> .)
    SEMICOLON       reduce using rule 81 (empty -> .)

    expresion1                     shift and go to state 123
    empty                          shift and go to state 125

state 103

    (56) nexp -> comexp . nexp1
    (57) nexp1 -> . AND nexp
    (58) nexp1 -> . empty
    (81) empty -> .

    AND             shift and go to state 127
    OR              reduce using rule 81 (empty -> .)
    RPARENTHESIS    reduce using rule 81 (empty -> .)
    COMMA           reduce using rule 81 (empty -> .)
    SEMICOLON       reduce using rule 81 (empty -> .)

    nexp1                          shift and go to state 126
    empty                          shift and go to state 128

state 104

    (59) comexp -> sumexp . compex1
    (60) compex1 -> . GTHAN sumexp
    (61) compex1 -> . LTHAN sumexp
    (62) compex1 -> . GTHANEQ sumexp
    (63) compex1 -> . LTHANEQ sumexp
    (64) compex1 -> . DIFFERENT sumexp
    (65) compex1 -> . empty
    (81) empty -> .

    GTHAN           shift and go to state 130
    LTHAN           shift and go to state 131
    GTHANEQ         shift and go to state 132
    LTHANEQ         shift and go to state 133
    DIFFERENT       shift and go to state 134
    AND             reduce using rule 81 (empty -> .)
    OR              reduce using rule 81 (empty -> .)
    RPARENTHESIS    reduce using rule 81 (empty -> .)
    COMMA           reduce using rule 81 (empty -> .)
    SEMICOLON       reduce using rule 81 (empty -> .)

    compex1                        shift and go to state 129
    empty                          shift and go to state 135

state 105

    (66) sumexp -> mulexp . sumexp1
    (67) sumexp1 -> . PLUS sumexp
    (68) sumexp1 -> . MINUS sumexp
    (69) sumexp1 -> . empty
    (81) empty -> .

    PLUS            shift and go to state 137
    MINUS           shift and go to state 138
    GTHAN           reduce using rule 81 (empty -> .)
    LTHAN           reduce using rule 81 (empty -> .)
    GTHANEQ         reduce using rule 81 (empty -> .)
    LTHANEQ         reduce using rule 81 (empty -> .)
    DIFFERENT       reduce using rule 81 (empty -> .)
    AND             reduce using rule 81 (empty -> .)
    OR              reduce using rule 81 (empty -> .)
    RPARENTHESIS    reduce using rule 81 (empty -> .)
    COMMA           reduce using rule 81 (empty -> .)
    SEMICOLON       reduce using rule 81 (empty -> .)

    sumexp1                        shift and go to state 136
    empty                          shift and go to state 139

state 106

    (70) mulexp -> pexp . mulexp1
    (71) mulexp1 -> . MULTIPLICATION mulexp
    (72) mulexp1 -> . DIVISION mulexp
    (73) mulexp1 -> . empty
    (81) empty -> .

    MULTIPLICATION  shift and go to state 141
    DIVISION        shift and go to state 142
    PLUS            reduce using rule 81 (empty -> .)
    MINUS           reduce using rule 81 (empty -> .)
    GTHAN           reduce using rule 81 (empty -> .)
    LTHAN           reduce using rule 81 (empty -> .)
    GTHANEQ         reduce using rule 81 (empty -> .)
    LTHANEQ         reduce using rule 81 (empty -> .)
    DIFFERENT       reduce using rule 81 (empty -> .)
    AND             reduce using rule 81 (empty -> .)
    OR              reduce using rule 81 (empty -> .)
    RPARENTHESIS    reduce using rule 81 (empty -> .)
    COMMA           reduce using rule 81 (empty -> .)
    SEMICOLON       reduce using rule 81 (empty -> .)

    mulexp1                        shift and go to state 140
    empty                          shift and go to state 143

state 107

    (74) pexp -> CTEI .

    MULTIPLICATION  reduce using rule 74 (pexp -> CTEI .)
    DIVISION        reduce using rule 74 (pexp -> CTEI .)
    PLUS            reduce using rule 74 (pexp -> CTEI .)
    MINUS           reduce using rule 74 (pexp -> CTEI .)
    GTHAN           reduce using rule 74 (pexp -> CTEI .)
    LTHAN           reduce using rule 74 (pexp -> CTEI .)
    GTHANEQ         reduce using rule 74 (pexp -> CTEI .)
    LTHANEQ         reduce using rule 74 (pexp -> CTEI .)
    DIFFERENT       reduce using rule 74 (pexp -> CTEI .)
    AND             reduce using rule 74 (pexp -> CTEI .)
    OR              reduce using rule 74 (pexp -> CTEI .)
    RPARENTHESIS    reduce using rule 74 (pexp -> CTEI .)
    COMMA           reduce using rule 74 (pexp -> CTEI .)
    SEMICOLON       reduce using rule 74 (pexp -> CTEI .)


state 108

    (75) pexp -> CTEF .

    MULTIPLICATION  reduce using rule 75 (pexp -> CTEF .)
    DIVISION        reduce using rule 75 (pexp -> CTEF .)
    PLUS            reduce using rule 75 (pexp -> CTEF .)
    MINUS           reduce using rule 75 (pexp -> CTEF .)
    GTHAN           reduce using rule 75 (pexp -> CTEF .)
    LTHAN           reduce using rule 75 (pexp -> CTEF .)
    GTHANEQ         reduce using rule 75 (pexp -> CTEF .)
    LTHANEQ         reduce using rule 75 (pexp -> CTEF .)
    DIFFERENT       reduce using rule 75 (pexp -> CTEF .)
    AND             reduce using rule 75 (pexp -> CTEF .)
    OR              reduce using rule 75 (pexp -> CTEF .)
    RPARENTHESIS    reduce using rule 75 (pexp -> CTEF .)
    COMMA           reduce using rule 75 (pexp -> CTEF .)
    SEMICOLON       reduce using rule 75 (pexp -> CTEF .)


state 109

    (76) pexp -> CTEC .

    MULTIPLICATION  reduce using rule 76 (pexp -> CTEC .)
    DIVISION        reduce using rule 76 (pexp -> CTEC .)
    PLUS            reduce using rule 76 (pexp -> CTEC .)
    MINUS           reduce using rule 76 (pexp -> CTEC .)
    GTHAN           reduce using rule 76 (pexp -> CTEC .)
    LTHAN           reduce using rule 76 (pexp -> CTEC .)
    GTHANEQ         reduce using rule 76 (pexp -> CTEC .)
    LTHANEQ         reduce using rule 76 (pexp -> CTEC .)
    DIFFERENT       reduce using rule 76 (pexp -> CTEC .)
    AND             reduce using rule 76 (pexp -> CTEC .)
    OR              reduce using rule 76 (pexp -> CTEC .)
    RPARENTHESIS    reduce using rule 76 (pexp -> CTEC .)
    COMMA           reduce using rule 76 (pexp -> CTEC .)
    SEMICOLON       reduce using rule 76 (pexp -> CTEC .)


state 110

    (77) pexp -> CTESTRING .

    MULTIPLICATION  reduce using rule 77 (pexp -> CTESTRING .)
    DIVISION        reduce using rule 77 (pexp -> CTESTRING .)
    PLUS            reduce using rule 77 (pexp -> CTESTRING .)
    MINUS           reduce using rule 77 (pexp -> CTESTRING .)
    GTHAN           reduce using rule 77 (pexp -> CTESTRING .)
    LTHAN           reduce using rule 77 (pexp -> CTESTRING .)
    GTHANEQ         reduce using rule 77 (pexp -> CTESTRING .)
    LTHANEQ         reduce using rule 77 (pexp -> CTESTRING .)
    DIFFERENT       reduce using rule 77 (pexp -> CTESTRING .)
    AND             reduce using rule 77 (pexp -> CTESTRING .)
    OR              reduce using rule 77 (pexp -> CTESTRING .)
    RPARENTHESIS    reduce using rule 77 (pexp -> CTESTRING .)
    COMMA           reduce using rule 77 (pexp -> CTESTRING .)
    SEMICOLON       reduce using rule 77 (pexp -> CTESTRING .)


state 111

    (78) pexp -> llamada .

    MULTIPLICATION  reduce using rule 78 (pexp -> llamada .)
    DIVISION        reduce using rule 78 (pexp -> llamada .)
    PLUS            reduce using rule 78 (pexp -> llamada .)
    MINUS           reduce using rule 78 (pexp -> llamada .)
    GTHAN           reduce using rule 78 (pexp -> llamada .)
    LTHAN           reduce using rule 78 (pexp -> llamada .)
    GTHANEQ         reduce using rule 78 (pexp -> llamada .)
    LTHANEQ         reduce using rule 78 (pexp -> llamada .)
    DIFFERENT       reduce using rule 78 (pexp -> llamada .)
    AND             reduce using rule 78 (pexp -> llamada .)
    OR              reduce using rule 78 (pexp -> llamada .)
    RPARENTHESIS    reduce using rule 78 (pexp -> llamada .)
    COMMA           reduce using rule 78 (pexp -> llamada .)
    SEMICOLON       reduce using rule 78 (pexp -> llamada .)


state 112

    (43) lectura -> READ LPARENTHESIS vars2 . RPARENTHESIS

    RPARENTHESIS    shift and go to state 144


state 113

    (44) escritura -> PRINT LPARENTHESIS escritura1 . RPARENTHESIS

    RPARENTHESIS    shift and go to state 145


state 114

    (45) escritura1 -> expresion . escritura2
    (46) escritura2 -> . COMMA escritura1
    (47) escritura2 -> . empty
    (81) empty -> .

    COMMA           shift and go to state 147
    RPARENTHESIS    reduce using rule 81 (empty -> .)

    escritura2                     shift and go to state 146
    empty                          shift and go to state 148

state 115

    (48) for -> FOR LPARENTHESIS FROM . asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (41) asignacion -> . ID arr EQUALS expresion

    ID              shift and go to state 150

    asignacion                     shift and go to state 149

state 116

    (49) if -> IF LPARENTHESIS expresion . RPARENTHESIS THEN LBRACKET estatuto RBRACKET else

    RPARENTHESIS    shift and go to state 151


state 117

    (52) while -> WHILE LPARENTHESIS expresion . RPARENTHESIS LBRACKET estatuto RBRACKET

    RPARENTHESIS    shift and go to state 152


state 118

    (27) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . retorno RBRACKET funcion
    (31) retorno -> . RETURN ID SEMICOLON

    RETURN          shift and go to state 154

    retorno                        shift and go to state 153

state 119

    (28) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . RBRACKET funcion

    RBRACKET        shift and go to state 155


state 120

    (41) asignacion -> ID arr EQUALS expresion .

    SEMICOLON       reduce using rule 41 (asignacion -> ID arr EQUALS expresion .)
    COMMA           reduce using rule 41 (asignacion -> ID arr EQUALS expresion .)


state 121

    (80) pexp -> LPARENTHESIS expresion . RPARENTHESIS

    RPARENTHESIS    shift and go to state 156


state 122

    (42) llamada -> ID LPARENTHESIS expresion RPARENTHESIS .

    SEMICOLON       reduce using rule 42 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    MULTIPLICATION  reduce using rule 42 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    DIVISION        reduce using rule 42 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    PLUS            reduce using rule 42 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    MINUS           reduce using rule 42 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    GTHAN           reduce using rule 42 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    LTHAN           reduce using rule 42 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    GTHANEQ         reduce using rule 42 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    LTHANEQ         reduce using rule 42 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    DIFFERENT       reduce using rule 42 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    AND             reduce using rule 42 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    OR              reduce using rule 42 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 42 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)
    COMMA           reduce using rule 42 (llamada -> ID LPARENTHESIS expresion RPARENTHESIS .)


state 123

    (53) expresion -> nexp expresion1 .

    RPARENTHESIS    reduce using rule 53 (expresion -> nexp expresion1 .)
    COMMA           reduce using rule 53 (expresion -> nexp expresion1 .)
    SEMICOLON       reduce using rule 53 (expresion -> nexp expresion1 .)


state 124

    (54) expresion1 -> OR . expresion
    (53) expresion -> . nexp expresion1
    (56) nexp -> . comexp nexp1
    (59) comexp -> . sumexp compex1
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    expresion                      shift and go to state 157
    nexp                           shift and go to state 102
    comexp                         shift and go to state 103
    sumexp                         shift and go to state 104
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 125

    (55) expresion1 -> empty .

    RPARENTHESIS    reduce using rule 55 (expresion1 -> empty .)
    COMMA           reduce using rule 55 (expresion1 -> empty .)
    SEMICOLON       reduce using rule 55 (expresion1 -> empty .)


state 126

    (56) nexp -> comexp nexp1 .

    OR              reduce using rule 56 (nexp -> comexp nexp1 .)
    RPARENTHESIS    reduce using rule 56 (nexp -> comexp nexp1 .)
    COMMA           reduce using rule 56 (nexp -> comexp nexp1 .)
    SEMICOLON       reduce using rule 56 (nexp -> comexp nexp1 .)


state 127

    (57) nexp1 -> AND . nexp
    (56) nexp -> . comexp nexp1
    (59) comexp -> . sumexp compex1
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    nexp                           shift and go to state 158
    comexp                         shift and go to state 103
    sumexp                         shift and go to state 104
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 128

    (58) nexp1 -> empty .

    OR              reduce using rule 58 (nexp1 -> empty .)
    RPARENTHESIS    reduce using rule 58 (nexp1 -> empty .)
    COMMA           reduce using rule 58 (nexp1 -> empty .)
    SEMICOLON       reduce using rule 58 (nexp1 -> empty .)


state 129

    (59) comexp -> sumexp compex1 .

    AND             reduce using rule 59 (comexp -> sumexp compex1 .)
    OR              reduce using rule 59 (comexp -> sumexp compex1 .)
    RPARENTHESIS    reduce using rule 59 (comexp -> sumexp compex1 .)
    COMMA           reduce using rule 59 (comexp -> sumexp compex1 .)
    SEMICOLON       reduce using rule 59 (comexp -> sumexp compex1 .)


state 130

    (60) compex1 -> GTHAN . sumexp
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    sumexp                         shift and go to state 159
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 131

    (61) compex1 -> LTHAN . sumexp
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    sumexp                         shift and go to state 160
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 132

    (62) compex1 -> GTHANEQ . sumexp
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    sumexp                         shift and go to state 161
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 133

    (63) compex1 -> LTHANEQ . sumexp
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    sumexp                         shift and go to state 162
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 134

    (64) compex1 -> DIFFERENT . sumexp
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    sumexp                         shift and go to state 163
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 135

    (65) compex1 -> empty .

    AND             reduce using rule 65 (compex1 -> empty .)
    OR              reduce using rule 65 (compex1 -> empty .)
    RPARENTHESIS    reduce using rule 65 (compex1 -> empty .)
    COMMA           reduce using rule 65 (compex1 -> empty .)
    SEMICOLON       reduce using rule 65 (compex1 -> empty .)


state 136

    (66) sumexp -> mulexp sumexp1 .

    GTHAN           reduce using rule 66 (sumexp -> mulexp sumexp1 .)
    LTHAN           reduce using rule 66 (sumexp -> mulexp sumexp1 .)
    GTHANEQ         reduce using rule 66 (sumexp -> mulexp sumexp1 .)
    LTHANEQ         reduce using rule 66 (sumexp -> mulexp sumexp1 .)
    DIFFERENT       reduce using rule 66 (sumexp -> mulexp sumexp1 .)
    AND             reduce using rule 66 (sumexp -> mulexp sumexp1 .)
    OR              reduce using rule 66 (sumexp -> mulexp sumexp1 .)
    RPARENTHESIS    reduce using rule 66 (sumexp -> mulexp sumexp1 .)
    COMMA           reduce using rule 66 (sumexp -> mulexp sumexp1 .)
    SEMICOLON       reduce using rule 66 (sumexp -> mulexp sumexp1 .)


state 137

    (67) sumexp1 -> PLUS . sumexp
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    sumexp                         shift and go to state 164
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 138

    (68) sumexp1 -> MINUS . sumexp
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    sumexp                         shift and go to state 165
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 139

    (69) sumexp1 -> empty .

    GTHAN           reduce using rule 69 (sumexp1 -> empty .)
    LTHAN           reduce using rule 69 (sumexp1 -> empty .)
    GTHANEQ         reduce using rule 69 (sumexp1 -> empty .)
    LTHANEQ         reduce using rule 69 (sumexp1 -> empty .)
    DIFFERENT       reduce using rule 69 (sumexp1 -> empty .)
    AND             reduce using rule 69 (sumexp1 -> empty .)
    OR              reduce using rule 69 (sumexp1 -> empty .)
    RPARENTHESIS    reduce using rule 69 (sumexp1 -> empty .)
    COMMA           reduce using rule 69 (sumexp1 -> empty .)
    SEMICOLON       reduce using rule 69 (sumexp1 -> empty .)


state 140

    (70) mulexp -> pexp mulexp1 .

    PLUS            reduce using rule 70 (mulexp -> pexp mulexp1 .)
    MINUS           reduce using rule 70 (mulexp -> pexp mulexp1 .)
    GTHAN           reduce using rule 70 (mulexp -> pexp mulexp1 .)
    LTHAN           reduce using rule 70 (mulexp -> pexp mulexp1 .)
    GTHANEQ         reduce using rule 70 (mulexp -> pexp mulexp1 .)
    LTHANEQ         reduce using rule 70 (mulexp -> pexp mulexp1 .)
    DIFFERENT       reduce using rule 70 (mulexp -> pexp mulexp1 .)
    AND             reduce using rule 70 (mulexp -> pexp mulexp1 .)
    OR              reduce using rule 70 (mulexp -> pexp mulexp1 .)
    RPARENTHESIS    reduce using rule 70 (mulexp -> pexp mulexp1 .)
    COMMA           reduce using rule 70 (mulexp -> pexp mulexp1 .)
    SEMICOLON       reduce using rule 70 (mulexp -> pexp mulexp1 .)


state 141

    (71) mulexp1 -> MULTIPLICATION . mulexp
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    mulexp                         shift and go to state 166
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 142

    (72) mulexp1 -> DIVISION . mulexp
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    mulexp                         shift and go to state 167
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 143

    (73) mulexp1 -> empty .

    PLUS            reduce using rule 73 (mulexp1 -> empty .)
    MINUS           reduce using rule 73 (mulexp1 -> empty .)
    GTHAN           reduce using rule 73 (mulexp1 -> empty .)
    LTHAN           reduce using rule 73 (mulexp1 -> empty .)
    GTHANEQ         reduce using rule 73 (mulexp1 -> empty .)
    LTHANEQ         reduce using rule 73 (mulexp1 -> empty .)
    DIFFERENT       reduce using rule 73 (mulexp1 -> empty .)
    AND             reduce using rule 73 (mulexp1 -> empty .)
    OR              reduce using rule 73 (mulexp1 -> empty .)
    RPARENTHESIS    reduce using rule 73 (mulexp1 -> empty .)
    COMMA           reduce using rule 73 (mulexp1 -> empty .)
    SEMICOLON       reduce using rule 73 (mulexp1 -> empty .)


state 144

    (43) lectura -> READ LPARENTHESIS vars2 RPARENTHESIS .

    SEMICOLON       reduce using rule 43 (lectura -> READ LPARENTHESIS vars2 RPARENTHESIS .)


state 145

    (44) escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS .

    SEMICOLON       reduce using rule 44 (escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS .)


state 146

    (45) escritura1 -> expresion escritura2 .

    RPARENTHESIS    reduce using rule 45 (escritura1 -> expresion escritura2 .)


state 147

    (46) escritura2 -> COMMA . escritura1
    (45) escritura1 -> . expresion escritura2
    (53) expresion -> . nexp expresion1
    (56) nexp -> . comexp nexp1
    (59) comexp -> . sumexp compex1
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    escritura1                     shift and go to state 168
    expresion                      shift and go to state 114
    nexp                           shift and go to state 102
    comexp                         shift and go to state 103
    sumexp                         shift and go to state 104
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 148

    (47) escritura2 -> empty .

    RPARENTHESIS    reduce using rule 47 (escritura2 -> empty .)


state 149

    (48) for -> FOR LPARENTHESIS FROM asignacion . COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    COMMA           shift and go to state 169


state 150

    (41) asignacion -> ID . arr EQUALS expresion
    (17) arr -> . LSQRBRACKET CTEI RSQRBRACKET
    (18) arr -> . empty
    (81) empty -> .

    LSQRBRACKET     shift and go to state 31
    EQUALS          reduce using rule 81 (empty -> .)

    arr                            shift and go to state 88
    empty                          shift and go to state 32

state 151

    (49) if -> IF LPARENTHESIS expresion RPARENTHESIS . THEN LBRACKET estatuto RBRACKET else

    THEN            shift and go to state 170


state 152

    (52) while -> WHILE LPARENTHESIS expresion RPARENTHESIS . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 171


state 153

    (27) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno . RBRACKET funcion

    RBRACKET        shift and go to state 172


state 154

    (31) retorno -> RETURN . ID SEMICOLON

    ID              shift and go to state 173


state 155

    (28) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET . funcion
    (27) funcion -> . FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (28) funcion -> . FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (29) funcion -> . empty
    (81) empty -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 81 (empty -> .)

    funcion                        shift and go to state 174
    empty                          shift and go to state 13

state 156

    (80) pexp -> LPARENTHESIS expresion RPARENTHESIS .

    MULTIPLICATION  reduce using rule 80 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    DIVISION        reduce using rule 80 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    PLUS            reduce using rule 80 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    MINUS           reduce using rule 80 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    GTHAN           reduce using rule 80 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    LTHAN           reduce using rule 80 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    GTHANEQ         reduce using rule 80 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    LTHANEQ         reduce using rule 80 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    DIFFERENT       reduce using rule 80 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    AND             reduce using rule 80 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    OR              reduce using rule 80 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 80 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    COMMA           reduce using rule 80 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    SEMICOLON       reduce using rule 80 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)


state 157

    (54) expresion1 -> OR expresion .

    RPARENTHESIS    reduce using rule 54 (expresion1 -> OR expresion .)
    COMMA           reduce using rule 54 (expresion1 -> OR expresion .)
    SEMICOLON       reduce using rule 54 (expresion1 -> OR expresion .)


state 158

    (57) nexp1 -> AND nexp .

    OR              reduce using rule 57 (nexp1 -> AND nexp .)
    RPARENTHESIS    reduce using rule 57 (nexp1 -> AND nexp .)
    COMMA           reduce using rule 57 (nexp1 -> AND nexp .)
    SEMICOLON       reduce using rule 57 (nexp1 -> AND nexp .)


state 159

    (60) compex1 -> GTHAN sumexp .

    AND             reduce using rule 60 (compex1 -> GTHAN sumexp .)
    OR              reduce using rule 60 (compex1 -> GTHAN sumexp .)
    RPARENTHESIS    reduce using rule 60 (compex1 -> GTHAN sumexp .)
    COMMA           reduce using rule 60 (compex1 -> GTHAN sumexp .)
    SEMICOLON       reduce using rule 60 (compex1 -> GTHAN sumexp .)


state 160

    (61) compex1 -> LTHAN sumexp .

    AND             reduce using rule 61 (compex1 -> LTHAN sumexp .)
    OR              reduce using rule 61 (compex1 -> LTHAN sumexp .)
    RPARENTHESIS    reduce using rule 61 (compex1 -> LTHAN sumexp .)
    COMMA           reduce using rule 61 (compex1 -> LTHAN sumexp .)
    SEMICOLON       reduce using rule 61 (compex1 -> LTHAN sumexp .)


state 161

    (62) compex1 -> GTHANEQ sumexp .

    AND             reduce using rule 62 (compex1 -> GTHANEQ sumexp .)
    OR              reduce using rule 62 (compex1 -> GTHANEQ sumexp .)
    RPARENTHESIS    reduce using rule 62 (compex1 -> GTHANEQ sumexp .)
    COMMA           reduce using rule 62 (compex1 -> GTHANEQ sumexp .)
    SEMICOLON       reduce using rule 62 (compex1 -> GTHANEQ sumexp .)


state 162

    (63) compex1 -> LTHANEQ sumexp .

    AND             reduce using rule 63 (compex1 -> LTHANEQ sumexp .)
    OR              reduce using rule 63 (compex1 -> LTHANEQ sumexp .)
    RPARENTHESIS    reduce using rule 63 (compex1 -> LTHANEQ sumexp .)
    COMMA           reduce using rule 63 (compex1 -> LTHANEQ sumexp .)
    SEMICOLON       reduce using rule 63 (compex1 -> LTHANEQ sumexp .)


state 163

    (64) compex1 -> DIFFERENT sumexp .

    AND             reduce using rule 64 (compex1 -> DIFFERENT sumexp .)
    OR              reduce using rule 64 (compex1 -> DIFFERENT sumexp .)
    RPARENTHESIS    reduce using rule 64 (compex1 -> DIFFERENT sumexp .)
    COMMA           reduce using rule 64 (compex1 -> DIFFERENT sumexp .)
    SEMICOLON       reduce using rule 64 (compex1 -> DIFFERENT sumexp .)


state 164

    (67) sumexp1 -> PLUS sumexp .

    GTHAN           reduce using rule 67 (sumexp1 -> PLUS sumexp .)
    LTHAN           reduce using rule 67 (sumexp1 -> PLUS sumexp .)
    GTHANEQ         reduce using rule 67 (sumexp1 -> PLUS sumexp .)
    LTHANEQ         reduce using rule 67 (sumexp1 -> PLUS sumexp .)
    DIFFERENT       reduce using rule 67 (sumexp1 -> PLUS sumexp .)
    AND             reduce using rule 67 (sumexp1 -> PLUS sumexp .)
    OR              reduce using rule 67 (sumexp1 -> PLUS sumexp .)
    RPARENTHESIS    reduce using rule 67 (sumexp1 -> PLUS sumexp .)
    COMMA           reduce using rule 67 (sumexp1 -> PLUS sumexp .)
    SEMICOLON       reduce using rule 67 (sumexp1 -> PLUS sumexp .)


state 165

    (68) sumexp1 -> MINUS sumexp .

    GTHAN           reduce using rule 68 (sumexp1 -> MINUS sumexp .)
    LTHAN           reduce using rule 68 (sumexp1 -> MINUS sumexp .)
    GTHANEQ         reduce using rule 68 (sumexp1 -> MINUS sumexp .)
    LTHANEQ         reduce using rule 68 (sumexp1 -> MINUS sumexp .)
    DIFFERENT       reduce using rule 68 (sumexp1 -> MINUS sumexp .)
    AND             reduce using rule 68 (sumexp1 -> MINUS sumexp .)
    OR              reduce using rule 68 (sumexp1 -> MINUS sumexp .)
    RPARENTHESIS    reduce using rule 68 (sumexp1 -> MINUS sumexp .)
    COMMA           reduce using rule 68 (sumexp1 -> MINUS sumexp .)
    SEMICOLON       reduce using rule 68 (sumexp1 -> MINUS sumexp .)


state 166

    (71) mulexp1 -> MULTIPLICATION mulexp .

    PLUS            reduce using rule 71 (mulexp1 -> MULTIPLICATION mulexp .)
    MINUS           reduce using rule 71 (mulexp1 -> MULTIPLICATION mulexp .)
    GTHAN           reduce using rule 71 (mulexp1 -> MULTIPLICATION mulexp .)
    LTHAN           reduce using rule 71 (mulexp1 -> MULTIPLICATION mulexp .)
    GTHANEQ         reduce using rule 71 (mulexp1 -> MULTIPLICATION mulexp .)
    LTHANEQ         reduce using rule 71 (mulexp1 -> MULTIPLICATION mulexp .)
    DIFFERENT       reduce using rule 71 (mulexp1 -> MULTIPLICATION mulexp .)
    AND             reduce using rule 71 (mulexp1 -> MULTIPLICATION mulexp .)
    OR              reduce using rule 71 (mulexp1 -> MULTIPLICATION mulexp .)
    RPARENTHESIS    reduce using rule 71 (mulexp1 -> MULTIPLICATION mulexp .)
    COMMA           reduce using rule 71 (mulexp1 -> MULTIPLICATION mulexp .)
    SEMICOLON       reduce using rule 71 (mulexp1 -> MULTIPLICATION mulexp .)


state 167

    (72) mulexp1 -> DIVISION mulexp .

    PLUS            reduce using rule 72 (mulexp1 -> DIVISION mulexp .)
    MINUS           reduce using rule 72 (mulexp1 -> DIVISION mulexp .)
    GTHAN           reduce using rule 72 (mulexp1 -> DIVISION mulexp .)
    LTHAN           reduce using rule 72 (mulexp1 -> DIVISION mulexp .)
    GTHANEQ         reduce using rule 72 (mulexp1 -> DIVISION mulexp .)
    LTHANEQ         reduce using rule 72 (mulexp1 -> DIVISION mulexp .)
    DIFFERENT       reduce using rule 72 (mulexp1 -> DIVISION mulexp .)
    AND             reduce using rule 72 (mulexp1 -> DIVISION mulexp .)
    OR              reduce using rule 72 (mulexp1 -> DIVISION mulexp .)
    RPARENTHESIS    reduce using rule 72 (mulexp1 -> DIVISION mulexp .)
    COMMA           reduce using rule 72 (mulexp1 -> DIVISION mulexp .)
    SEMICOLON       reduce using rule 72 (mulexp1 -> DIVISION mulexp .)


state 168

    (46) escritura2 -> COMMA escritura1 .

    RPARENTHESIS    reduce using rule 46 (escritura2 -> COMMA escritura1 .)


state 169

    (48) for -> FOR LPARENTHESIS FROM asignacion COMMA . TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    TO              shift and go to state 175


state 170

    (49) if -> IF LPARENTHESIS expresion RPARENTHESIS THEN . LBRACKET estatuto RBRACKET else

    LBRACKET        shift and go to state 176


state 171

    (52) while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET . estatuto RBRACKET
    (32) estatuto -> . estatuto2 estatuto
    (33) estatuto -> . empty
    (34) estatuto2 -> . asignacion SEMICOLON
    (35) estatuto2 -> . llamada SEMICOLON
    (36) estatuto2 -> . lectura SEMICOLON
    (37) estatuto2 -> . escritura SEMICOLON
    (38) estatuto2 -> . for
    (39) estatuto2 -> . if
    (40) estatuto2 -> . while
    (81) empty -> .
    (41) asignacion -> . ID arr EQUALS expresion
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (43) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (44) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (48) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (49) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (52) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 81 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    PRINT           shift and go to state 74
    FOR             shift and go to state 75
    IF              shift and go to state 76
    WHILE           shift and go to state 77

    estatuto                       shift and go to state 177
    estatuto2                      shift and go to state 63
    empty                          shift and go to state 64
    asignacion                     shift and go to state 65
    llamada                        shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    for                            shift and go to state 69
    if                             shift and go to state 70
    while                          shift and go to state 71

state 172

    (27) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET . funcion
    (27) funcion -> . FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion
    (28) funcion -> . FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion
    (29) funcion -> . empty
    (81) empty -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 81 (empty -> .)

    funcion                        shift and go to state 178
    empty                          shift and go to state 13

state 173

    (31) retorno -> RETURN ID . SEMICOLON

    SEMICOLON       shift and go to state 179


state 174

    (28) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion .

    MAIN            reduce using rule 28 (funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET funcion .)


state 175

    (48) for -> FOR LPARENTHESIS FROM asignacion COMMA TO . expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (53) expresion -> . nexp expresion1
    (56) nexp -> . comexp nexp1
    (59) comexp -> . sumexp compex1
    (66) sumexp -> . mulexp sumexp1
    (70) mulexp -> . pexp mulexp1
    (74) pexp -> . CTEI
    (75) pexp -> . CTEF
    (76) pexp -> . CTEC
    (77) pexp -> . CTESTRING
    (78) pexp -> . llamada
    (79) pexp -> . ID
    (80) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS

    CTEI            shift and go to state 107
    CTEF            shift and go to state 108
    CTEC            shift and go to state 109
    CTESTRING       shift and go to state 110
    ID              shift and go to state 99
    LPARENTHESIS    shift and go to state 100

    expresion                      shift and go to state 180
    nexp                           shift and go to state 102
    comexp                         shift and go to state 103
    sumexp                         shift and go to state 104
    mulexp                         shift and go to state 105
    pexp                           shift and go to state 106
    llamada                        shift and go to state 111

state 176

    (49) if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET . estatuto RBRACKET else
    (32) estatuto -> . estatuto2 estatuto
    (33) estatuto -> . empty
    (34) estatuto2 -> . asignacion SEMICOLON
    (35) estatuto2 -> . llamada SEMICOLON
    (36) estatuto2 -> . lectura SEMICOLON
    (37) estatuto2 -> . escritura SEMICOLON
    (38) estatuto2 -> . for
    (39) estatuto2 -> . if
    (40) estatuto2 -> . while
    (81) empty -> .
    (41) asignacion -> . ID arr EQUALS expresion
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (43) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (44) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (48) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (49) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (52) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 81 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    PRINT           shift and go to state 74
    FOR             shift and go to state 75
    IF              shift and go to state 76
    WHILE           shift and go to state 77

    estatuto                       shift and go to state 181
    estatuto2                      shift and go to state 63
    empty                          shift and go to state 64
    asignacion                     shift and go to state 65
    llamada                        shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    for                            shift and go to state 69
    if                             shift and go to state 70
    while                          shift and go to state 71

state 177

    (52) while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 182


state 178

    (27) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion .

    MAIN            reduce using rule 27 (funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET funcion .)


state 179

    (31) retorno -> RETURN ID SEMICOLON .

    RBRACKET        reduce using rule 31 (retorno -> RETURN ID SEMICOLON .)


state 180

    (48) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion . RPARENTHESIS LBRACKET estatuto RBRACKET

    RPARENTHESIS    shift and go to state 183


state 181

    (49) if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto . RBRACKET else

    RBRACKET        shift and go to state 184


state 182

    (52) while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .

    ID              reduce using rule 52 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    READ            reduce using rule 52 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    PRINT           reduce using rule 52 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    FOR             reduce using rule 52 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    IF              reduce using rule 52 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    WHILE           reduce using rule 52 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    RBRACKET        reduce using rule 52 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    RETURN          reduce using rule 52 (while -> WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)


state 183

    (48) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 185


state 184

    (49) if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET . else
    (50) else -> . ELSE LBRACKET estatuto RBRACKET
    (51) else -> . empty
    (81) empty -> .

    ELSE            shift and go to state 187
    ID              reduce using rule 81 (empty -> .)
    READ            reduce using rule 81 (empty -> .)
    PRINT           reduce using rule 81 (empty -> .)
    FOR             reduce using rule 81 (empty -> .)
    IF              reduce using rule 81 (empty -> .)
    WHILE           reduce using rule 81 (empty -> .)
    RBRACKET        reduce using rule 81 (empty -> .)
    RETURN          reduce using rule 81 (empty -> .)

    else                           shift and go to state 186
    empty                          shift and go to state 188

state 185

    (48) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET . estatuto RBRACKET
    (32) estatuto -> . estatuto2 estatuto
    (33) estatuto -> . empty
    (34) estatuto2 -> . asignacion SEMICOLON
    (35) estatuto2 -> . llamada SEMICOLON
    (36) estatuto2 -> . lectura SEMICOLON
    (37) estatuto2 -> . escritura SEMICOLON
    (38) estatuto2 -> . for
    (39) estatuto2 -> . if
    (40) estatuto2 -> . while
    (81) empty -> .
    (41) asignacion -> . ID arr EQUALS expresion
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (43) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (44) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (48) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (49) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (52) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 81 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    PRINT           shift and go to state 74
    FOR             shift and go to state 75
    IF              shift and go to state 76
    WHILE           shift and go to state 77

    asignacion                     shift and go to state 65
    estatuto                       shift and go to state 189
    estatuto2                      shift and go to state 63
    empty                          shift and go to state 64
    llamada                        shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    for                            shift and go to state 69
    if                             shift and go to state 70
    while                          shift and go to state 71

state 186

    (49) if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .

    ID              reduce using rule 49 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    READ            reduce using rule 49 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    PRINT           reduce using rule 49 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    FOR             reduce using rule 49 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    IF              reduce using rule 49 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    WHILE           reduce using rule 49 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    RBRACKET        reduce using rule 49 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)
    RETURN          reduce using rule 49 (if -> IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else .)


state 187

    (50) else -> ELSE . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 190


state 188

    (51) else -> empty .

    ID              reduce using rule 51 (else -> empty .)
    READ            reduce using rule 51 (else -> empty .)
    PRINT           reduce using rule 51 (else -> empty .)
    FOR             reduce using rule 51 (else -> empty .)
    IF              reduce using rule 51 (else -> empty .)
    WHILE           reduce using rule 51 (else -> empty .)
    RBRACKET        reduce using rule 51 (else -> empty .)
    RETURN          reduce using rule 51 (else -> empty .)


state 189

    (48) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 191


state 190

    (50) else -> ELSE LBRACKET . estatuto RBRACKET
    (32) estatuto -> . estatuto2 estatuto
    (33) estatuto -> . empty
    (34) estatuto2 -> . asignacion SEMICOLON
    (35) estatuto2 -> . llamada SEMICOLON
    (36) estatuto2 -> . lectura SEMICOLON
    (37) estatuto2 -> . escritura SEMICOLON
    (38) estatuto2 -> . for
    (39) estatuto2 -> . if
    (40) estatuto2 -> . while
    (81) empty -> .
    (41) asignacion -> . ID arr EQUALS expresion
    (42) llamada -> . ID LPARENTHESIS expresion RPARENTHESIS
    (43) lectura -> . READ LPARENTHESIS vars2 RPARENTHESIS
    (44) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (48) for -> . FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET
    (49) if -> . IF LPARENTHESIS expresion RPARENTHESIS THEN LBRACKET estatuto RBRACKET else
    (52) while -> . WHILE LPARENTHESIS expresion RPARENTHESIS LBRACKET estatuto RBRACKET

    RBRACKET        reduce using rule 81 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    PRINT           shift and go to state 74
    FOR             shift and go to state 75
    IF              shift and go to state 76
    WHILE           shift and go to state 77

    estatuto                       shift and go to state 192
    estatuto2                      shift and go to state 63
    empty                          shift and go to state 64
    asignacion                     shift and go to state 65
    llamada                        shift and go to state 66
    lectura                        shift and go to state 67
    escritura                      shift and go to state 68
    for                            shift and go to state 69
    if                             shift and go to state 70
    while                          shift and go to state 71

state 191

    (48) for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .

    ID              reduce using rule 48 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    READ            reduce using rule 48 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    PRINT           reduce using rule 48 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    FOR             reduce using rule 48 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    IF              reduce using rule 48 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    WHILE           reduce using rule 48 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    RBRACKET        reduce using rule 48 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)
    RETURN          reduce using rule 48 (for -> FOR LPARENTHESIS FROM asignacion COMMA TO expresion RPARENTHESIS LBRACKET estatuto RBRACKET .)


state 192

    (50) else -> ELSE LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 193


state 193

    (50) else -> ELSE LBRACKET estatuto RBRACKET .

    ID              reduce using rule 50 (else -> ELSE LBRACKET estatuto RBRACKET .)
    READ            reduce using rule 50 (else -> ELSE LBRACKET estatuto RBRACKET .)
    PRINT           reduce using rule 50 (else -> ELSE LBRACKET estatuto RBRACKET .)
    FOR             reduce using rule 50 (else -> ELSE LBRACKET estatuto RBRACKET .)
    IF              reduce using rule 50 (else -> ELSE LBRACKET estatuto RBRACKET .)
    WHILE           reduce using rule 50 (else -> ELSE LBRACKET estatuto RBRACKET .)
    RBRACKET        reduce using rule 50 (else -> ELSE LBRACKET estatuto RBRACKET .)
    RETURN          reduce using rule 50 (else -> ELSE LBRACKET estatuto RBRACKET .)


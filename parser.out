Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FROM

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID addProgram SEMICOLON programa1 END
Rule 2     addProgram -> <empty>
Rule 3     programa1 -> vars funcion principal
Rule 4     principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
Rule 5     addMain -> <empty>
Rule 6     vars -> VAR vars1
Rule 7     vars -> empty
Rule 8     vars1 -> tipo vars2 SEMICOLON varsadd
Rule 9     vars2 -> ID addVariable arr vars3
Rule 10    vars3 -> COMMA vars2
Rule 11    vars3 -> empty
Rule 12    varsadd -> vars1
Rule 13    varsadd -> empty
Rule 14    tipo -> INT
Rule 15    tipo -> FLOAT
Rule 16    tipo -> CHAR
Rule 17    tipo -> STRING
Rule 18    arr -> LSQRBRACKET CTEI setArr RSQRBRACKET
Rule 19    arr -> empty
Rule 20    setArr -> <empty>
Rule 21    parameters -> parameters2
Rule 22    parameters -> empty
Rule 23    parameters2 -> tipo ID addParameter
Rule 24    parameters2 -> tipo ID addParameter parameters3
Rule 25    parameters3 -> COMMA ID addParameter parameters3
Rule 26    parameters3 -> COMMA tipo ID addParameter parameters3
Rule 27    parameters3 -> COMMA ID addParameter
Rule 28    parameters3 -> COMMA tipo ID addParameter
Rule 29    addParameter -> <empty>
Rule 30    funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion
Rule 31    funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion
Rule 32    funcion -> empty
Rule 33    retorno -> RETURN expresion quadReturn SEMICOLON
Rule 34    estatuto -> estatuto2 estatuto
Rule 35    estatuto -> empty
Rule 36    estatuto2 -> asignacion SEMICOLON
Rule 37    estatuto2 -> llamada SEMICOLON
Rule 38    estatuto2 -> lectura SEMICOLON
Rule 39    estatuto2 -> escritura SEMICOLON
Rule 40    estatuto2 -> for
Rule 41    estatuto2 -> if
Rule 42    estatuto2 -> while
Rule 43    asignacion -> ID addId arreglo EQUAL addOperator expresion quadEqual
Rule 44    arreglo -> LSQRBRACKET expresion arrQuad RSQRBRACKET
Rule 45    arreglo -> empty
Rule 46    arrQuad -> <empty>
Rule 47    leearr -> LSQRBRACKET expresion RSQRBRACKET
Rule 48    llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
Rule 49    enviarAgrs -> expresion quadArg enviarAgrs2
Rule 50    enviarAgrs -> empty
Rule 51    enviarAgrs2 -> COMMA enviarAgrs
Rule 52    enviarAgrs2 -> empty
Rule 53    lectura -> READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
Rule 54    escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS
Rule 55    escritura1 -> printOperator expresion printQuad escritura2
Rule 56    escritura2 -> COMMA escritura1
Rule 57    escritura2 -> empty
Rule 58    for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
Rule 59    if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
Rule 60    else -> ELSE elseQuad LBRACKET estatuto RBRACKET
Rule 61    else -> empty
Rule 62    while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile
Rule 63    expresion -> nexp orQuad expresion1
Rule 64    expresion1 -> OR addOperator expresion
Rule 65    expresion1 -> empty
Rule 66    nexp -> comexp andQuad nexp1
Rule 67    nexp1 -> AND addOperator nexp
Rule 68    nexp1 -> empty
Rule 69    comexp -> sumexp compQuad compex1 compQuad
Rule 70    compex1 -> GTHAN addOperator sumexp
Rule 71    compex1 -> LTHAN addOperator sumexp
Rule 72    compex1 -> GTHANEQ addOperator sumexp
Rule 73    compex1 -> LTHANEQ addOperator sumexp
Rule 74    compex1 -> DIFFERENT addOperator sumexp
Rule 75    compex1 -> EQUALS addOperator sumexp
Rule 76    compex1 -> empty
Rule 77    sumexp -> mulexp plusQuad sumexp1
Rule 78    sumexp1 -> PLUS addOperator sumexp
Rule 79    sumexp1 -> MINUS addOperator sumexp
Rule 80    sumexp1 -> empty
Rule 81    mulexp -> pexp multQuad mulexp1
Rule 82    mulexp1 -> MULTIPLICATION addOperator mulexp
Rule 83    mulexp1 -> DIVISION addOperator mulexp
Rule 84    mulexp1 -> empty
Rule 85    pexp -> CTEI addOperandCte
Rule 86    pexp -> CTEF addOperandCte
Rule 87    pexp -> CTEC addOperandCte
Rule 88    pexp -> CTESTRING addOperandCte
Rule 89    pexp -> llamada
Rule 90    pexp -> ID addOperandVar
Rule 91    pexp -> ID addOperandVar leearr
Rule 92    pexp -> LPARENTHESIS expresion RPARENTHESIS
Rule 93    orQuad -> <empty>
Rule 94    andQuad -> <empty>
Rule 95    compQuad -> <empty>
Rule 96    multQuad -> <empty>
Rule 97    plusQuad -> <empty>
Rule 98    quadEqual -> <empty>
Rule 99    printOperator -> <empty>
Rule 100   printQuad -> <empty>
Rule 101   readOperator -> <empty>
Rule 102   readQuad -> <empty>
Rule 103   ifQuad -> <empty>
Rule 104   elseQuad -> <empty>
Rule 105   endIf -> <empty>
Rule 106   whileOperator -> <empty>
Rule 107   whileQuad -> <empty>
Rule 108   endWhile -> <empty>
Rule 109   forOperator -> <empty>
Rule 110   forQuad -> <empty>
Rule 111   endFor -> <empty>
Rule 112   requestCallMemory -> <empty>
Rule 113   quadArg -> <empty>
Rule 114   addFunction -> <empty>
Rule 115   endFunc -> <empty>
Rule 116   callQuad -> <empty>
Rule 117   quadReturn -> <empty>
Rule 118   addOperator -> <empty>
Rule 119   addVariable -> <empty>
Rule 120   addOperandVar -> <empty>
Rule 121   addOperandFunc -> <empty>
Rule 122   addOperandCte -> <empty>
Rule 123   addId -> <empty>
Rule 124   empty -> <empty>

Terminals, with rules where they appear

AND                  : 67
CHAR                 : 16
COMMA                : 10 25 26 27 28 51 56 58
CTEC                 : 87
CTEF                 : 86
CTEI                 : 18 85
CTESTRING            : 88
DIFFERENT            : 74
DIVISION             : 83
ELSE                 : 60
END                  : 1
EQUAL                : 43
EQUALS               : 75
FLOAT                : 15
FOR                  : 58
FROM                 : 
FUNCTION             : 30 31
GTHAN                : 70
GTHANEQ              : 72
ID                   : 1 9 23 24 25 26 27 28 30 31 43 48 90 91
IF                   : 59
INT                  : 14
LBRACKET             : 4 30 31 58 59 60 62
LPARENTHESIS         : 4 30 31 48 53 54 59 62 92
LSQRBRACKET          : 18 44 47
LTHAN                : 71
LTHANEQ              : 73
MAIN                 : 4
MINUS                : 79
MULTIPLICATION       : 82
OR                   : 64
PLUS                 : 78
PRINT                : 54
PROGRAM              : 1
RBRACKET             : 4 30 31 58 59 60 62
READ                 : 53
RETURN               : 33
RPARENTHESIS         : 4 30 31 48 53 54 59 62 92
RSQRBRACKET          : 18 44 47
SEMICOLON            : 1 8 33 36 37 38 39
STRING               : 17
THEN                 : 59
TO                   : 58
VAR                  : 6
VOID                 : 31
WHILE                : 62
error                : 

Nonterminals, with rules where they appear

addFunction          : 30 31
addId                : 43
addMain              : 4
addOperandCte        : 85 86 87 88
addOperandFunc       : 48
addOperandVar        : 90 91
addOperator          : 43 64 67 70 71 72 73 74 75 78 79 82 83
addParameter         : 23 24 25 26 27 28
addProgram           : 1
addVariable          : 9
andQuad              : 66
arr                  : 9
arrQuad              : 44
arreglo              : 43
asignacion           : 36 58
callQuad             : 48
comexp               : 66
compQuad             : 69 69
compex1              : 69
else                 : 59
elseQuad             : 60
empty                : 7 11 13 19 22 32 35 45 50 52 57 61 65 68 76 80 84
endFor               : 58
endFunc              : 30 31
endIf                : 59
endWhile             : 62
enviarAgrs           : 48 51
enviarAgrs2          : 49
escritura            : 39
escritura1           : 54 56
escritura2           : 55
estatuto             : 4 30 31 34 58 59 60 62
estatuto2            : 34
expresion            : 33 43 44 47 49 53 55 58 59 62 64 92
expresion1           : 63
for                  : 40
forOperator          : 58
forQuad              : 58
funcion              : 3 30 31
if                   : 41
ifQuad               : 59
lectura              : 38
leearr               : 91
llamada              : 37 89
mulexp               : 77 82 83
mulexp1              : 81
multQuad             : 81
nexp                 : 63 67
nexp1                : 66
orQuad               : 63
parameters           : 4 30 31
parameters2          : 21
parameters3          : 24 25 26
pexp                 : 81
plusQuad             : 77
principal            : 3
printOperator        : 55
printQuad            : 55
programa             : 0
programa1            : 1
quadArg              : 49
quadEqual            : 43
quadReturn           : 33
readOperator         : 53
readQuad             : 53
requestCallMemory    : 48
retorno              : 30
setArr               : 18
sumexp               : 69 70 71 72 73 74 75 78 79
sumexp1              : 77
tipo                 : 8 23 24 26 28 30
vars                 : 3 4 30 31
vars1                : 6 12
vars2                : 8 10
vars3                : 9
varsadd              : 8
while                : 42
whileOperator        : 62
whileQuad            : 62

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID addProgram SEMICOLON programa1 END

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID addProgram SEMICOLON programa1 END

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . addProgram SEMICOLON programa1 END
    (2) addProgram -> .

    SEMICOLON       reduce using rule 2 (addProgram -> .)

    addProgram                     shift and go to state 4

state 4

    (1) programa -> PROGRAM ID addProgram . SEMICOLON programa1 END

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID addProgram SEMICOLON . programa1 END
    (3) programa1 -> . vars funcion principal
    (6) vars -> . VAR vars1
    (7) vars -> . empty
    (124) empty -> .

    VAR             shift and go to state 8
    FUNCTION        reduce using rule 124 (empty -> .)
    MAIN            reduce using rule 124 (empty -> .)

    programa1                      shift and go to state 6
    vars                           shift and go to state 7
    empty                          shift and go to state 9

state 6

    (1) programa -> PROGRAM ID addProgram SEMICOLON programa1 . END

    END             shift and go to state 10


state 7

    (3) programa1 -> vars . funcion principal
    (30) funcion -> . FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion
    (31) funcion -> . FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion
    (32) funcion -> . empty
    (124) empty -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 124 (empty -> .)

    funcion                        shift and go to state 11
    empty                          shift and go to state 13

state 8

    (6) vars -> VAR . vars1
    (8) vars1 -> . tipo vars2 SEMICOLON varsadd
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    vars1                          shift and go to state 14
    tipo                           shift and go to state 15

state 9

    (7) vars -> empty .

    FUNCTION        reduce using rule 7 (vars -> empty .)
    MAIN            reduce using rule 7 (vars -> empty .)
    LBRACKET        reduce using rule 7 (vars -> empty .)


state 10

    (1) programa -> PROGRAM ID addProgram SEMICOLON programa1 END .

    $end            reduce using rule 1 (programa -> PROGRAM ID addProgram SEMICOLON programa1 END .)


state 11

    (3) programa1 -> vars funcion . principal
    (4) principal -> . MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET

    MAIN            shift and go to state 21

    principal                      shift and go to state 20

state 12

    (30) funcion -> FUNCTION . tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion
    (31) funcion -> FUNCTION . VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    VOID            shift and go to state 23
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 22

state 13

    (32) funcion -> empty .

    MAIN            reduce using rule 32 (funcion -> empty .)


state 14

    (6) vars -> VAR vars1 .

    FUNCTION        reduce using rule 6 (vars -> VAR vars1 .)
    MAIN            reduce using rule 6 (vars -> VAR vars1 .)
    LBRACKET        reduce using rule 6 (vars -> VAR vars1 .)


state 15

    (8) vars1 -> tipo . vars2 SEMICOLON varsadd
    (9) vars2 -> . ID addVariable arr vars3

    ID              shift and go to state 25

    vars2                          shift and go to state 24

state 16

    (14) tipo -> INT .

    ID              reduce using rule 14 (tipo -> INT .)


state 17

    (15) tipo -> FLOAT .

    ID              reduce using rule 15 (tipo -> FLOAT .)


state 18

    (16) tipo -> CHAR .

    ID              reduce using rule 16 (tipo -> CHAR .)


state 19

    (17) tipo -> STRING .

    ID              reduce using rule 17 (tipo -> STRING .)


state 20

    (3) programa1 -> vars funcion principal .

    END             reduce using rule 3 (programa1 -> vars funcion principal .)


state 21

    (4) principal -> MAIN . addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
    (5) addMain -> .

    LPARENTHESIS    reduce using rule 5 (addMain -> .)

    addMain                        shift and go to state 26

state 22

    (30) funcion -> FUNCTION tipo . ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion

    ID              shift and go to state 27


state 23

    (31) funcion -> FUNCTION VOID . ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion

    ID              shift and go to state 28


state 24

    (8) vars1 -> tipo vars2 . SEMICOLON varsadd

    SEMICOLON       shift and go to state 29


state 25

    (9) vars2 -> ID . addVariable arr vars3
    (119) addVariable -> .

    LSQRBRACKET     reduce using rule 119 (addVariable -> .)
    COMMA           reduce using rule 119 (addVariable -> .)
    SEMICOLON       reduce using rule 119 (addVariable -> .)

    addVariable                    shift and go to state 30

state 26

    (4) principal -> MAIN addMain . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET

    LPARENTHESIS    shift and go to state 31


state 27

    (30) funcion -> FUNCTION tipo ID . addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion
    (114) addFunction -> .

    LPARENTHESIS    reduce using rule 114 (addFunction -> .)

    addFunction                    shift and go to state 32

state 28

    (31) funcion -> FUNCTION VOID ID . addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion
    (114) addFunction -> .

    LPARENTHESIS    reduce using rule 114 (addFunction -> .)

    addFunction                    shift and go to state 33

state 29

    (8) vars1 -> tipo vars2 SEMICOLON . varsadd
    (12) varsadd -> . vars1
    (13) varsadd -> . empty
    (8) vars1 -> . tipo vars2 SEMICOLON varsadd
    (124) empty -> .
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    FUNCTION        reduce using rule 124 (empty -> .)
    MAIN            reduce using rule 124 (empty -> .)
    LBRACKET        reduce using rule 124 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 15
    varsadd                        shift and go to state 34
    vars1                          shift and go to state 35
    empty                          shift and go to state 36

state 30

    (9) vars2 -> ID addVariable . arr vars3
    (18) arr -> . LSQRBRACKET CTEI setArr RSQRBRACKET
    (19) arr -> . empty
    (124) empty -> .

    LSQRBRACKET     shift and go to state 38
    COMMA           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)

    arr                            shift and go to state 37
    empty                          shift and go to state 39

state 31

    (4) principal -> MAIN addMain LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
    (21) parameters -> . parameters2
    (22) parameters -> . empty
    (23) parameters2 -> . tipo ID addParameter
    (24) parameters2 -> . tipo ID addParameter parameters3
    (124) empty -> .
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    RPARENTHESIS    reduce using rule 124 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    parameters                     shift and go to state 40
    parameters2                    shift and go to state 41
    empty                          shift and go to state 42
    tipo                           shift and go to state 43

state 32

    (30) funcion -> FUNCTION tipo ID addFunction . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion

    LPARENTHESIS    shift and go to state 44


state 33

    (31) funcion -> FUNCTION VOID ID addFunction . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion

    LPARENTHESIS    shift and go to state 45


state 34

    (8) vars1 -> tipo vars2 SEMICOLON varsadd .

    FUNCTION        reduce using rule 8 (vars1 -> tipo vars2 SEMICOLON varsadd .)
    MAIN            reduce using rule 8 (vars1 -> tipo vars2 SEMICOLON varsadd .)
    LBRACKET        reduce using rule 8 (vars1 -> tipo vars2 SEMICOLON varsadd .)


state 35

    (12) varsadd -> vars1 .

    FUNCTION        reduce using rule 12 (varsadd -> vars1 .)
    MAIN            reduce using rule 12 (varsadd -> vars1 .)
    LBRACKET        reduce using rule 12 (varsadd -> vars1 .)


state 36

    (13) varsadd -> empty .

    FUNCTION        reduce using rule 13 (varsadd -> empty .)
    MAIN            reduce using rule 13 (varsadd -> empty .)
    LBRACKET        reduce using rule 13 (varsadd -> empty .)


state 37

    (9) vars2 -> ID addVariable arr . vars3
    (10) vars3 -> . COMMA vars2
    (11) vars3 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 47
    SEMICOLON       reduce using rule 124 (empty -> .)

    vars3                          shift and go to state 46
    empty                          shift and go to state 48

state 38

    (18) arr -> LSQRBRACKET . CTEI setArr RSQRBRACKET

    CTEI            shift and go to state 49


state 39

    (19) arr -> empty .

    COMMA           reduce using rule 19 (arr -> empty .)
    SEMICOLON       reduce using rule 19 (arr -> empty .)


state 40

    (4) principal -> MAIN addMain LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto RBRACKET

    RPARENTHESIS    shift and go to state 50


state 41

    (21) parameters -> parameters2 .

    RPARENTHESIS    reduce using rule 21 (parameters -> parameters2 .)


state 42

    (22) parameters -> empty .

    RPARENTHESIS    reduce using rule 22 (parameters -> empty .)


state 43

    (23) parameters2 -> tipo . ID addParameter
    (24) parameters2 -> tipo . ID addParameter parameters3

    ID              shift and go to state 51


state 44

    (30) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion
    (21) parameters -> . parameters2
    (22) parameters -> . empty
    (23) parameters2 -> . tipo ID addParameter
    (24) parameters2 -> . tipo ID addParameter parameters3
    (124) empty -> .
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    RPARENTHESIS    reduce using rule 124 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 43
    parameters                     shift and go to state 52
    parameters2                    shift and go to state 41
    empty                          shift and go to state 42

state 45

    (31) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion
    (21) parameters -> . parameters2
    (22) parameters -> . empty
    (23) parameters2 -> . tipo ID addParameter
    (24) parameters2 -> . tipo ID addParameter parameters3
    (124) empty -> .
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    RPARENTHESIS    reduce using rule 124 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    parameters                     shift and go to state 53
    parameters2                    shift and go to state 41
    empty                          shift and go to state 42
    tipo                           shift and go to state 43

state 46

    (9) vars2 -> ID addVariable arr vars3 .

    SEMICOLON       reduce using rule 9 (vars2 -> ID addVariable arr vars3 .)


state 47

    (10) vars3 -> COMMA . vars2
    (9) vars2 -> . ID addVariable arr vars3

    ID              shift and go to state 25

    vars2                          shift and go to state 54

state 48

    (11) vars3 -> empty .

    SEMICOLON       reduce using rule 11 (vars3 -> empty .)


state 49

    (18) arr -> LSQRBRACKET CTEI . setArr RSQRBRACKET
    (20) setArr -> .

    RSQRBRACKET     reduce using rule 20 (setArr -> .)

    setArr                         shift and go to state 55

state 50

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto RBRACKET
    (6) vars -> . VAR vars1
    (7) vars -> . empty
    (124) empty -> .

    VAR             shift and go to state 8
    LBRACKET        reduce using rule 124 (empty -> .)

    vars                           shift and go to state 56
    empty                          shift and go to state 9

state 51

    (23) parameters2 -> tipo ID . addParameter
    (24) parameters2 -> tipo ID . addParameter parameters3
    (29) addParameter -> .

    COMMA           reduce using rule 29 (addParameter -> .)
    RPARENTHESIS    reduce using rule 29 (addParameter -> .)

    addParameter                   shift and go to state 57

state 52

    (30) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion

    RPARENTHESIS    shift and go to state 58


state 53

    (31) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion

    RPARENTHESIS    shift and go to state 59


state 54

    (10) vars3 -> COMMA vars2 .

    SEMICOLON       reduce using rule 10 (vars3 -> COMMA vars2 .)


state 55

    (18) arr -> LSQRBRACKET CTEI setArr . RSQRBRACKET

    RSQRBRACKET     shift and go to state 60


state 56

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 61


state 57

    (23) parameters2 -> tipo ID addParameter .
    (24) parameters2 -> tipo ID addParameter . parameters3
    (25) parameters3 -> . COMMA ID addParameter parameters3
    (26) parameters3 -> . COMMA tipo ID addParameter parameters3
    (27) parameters3 -> . COMMA ID addParameter
    (28) parameters3 -> . COMMA tipo ID addParameter

    RPARENTHESIS    reduce using rule 23 (parameters2 -> tipo ID addParameter .)
    COMMA           shift and go to state 63

    parameters3                    shift and go to state 62

state 58

    (30) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto retorno RBRACKET endFunc funcion
    (6) vars -> . VAR vars1
    (7) vars -> . empty
    (124) empty -> .

    VAR             shift and go to state 8
    LBRACKET        reduce using rule 124 (empty -> .)

    vars                           shift and go to state 64
    empty                          shift and go to state 9

state 59

    (31) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto RBRACKET endFunc funcion
    (6) vars -> . VAR vars1
    (7) vars -> . empty
    (124) empty -> .

    VAR             shift and go to state 8
    LBRACKET        reduce using rule 124 (empty -> .)

    vars                           shift and go to state 65
    empty                          shift and go to state 9

state 60

    (18) arr -> LSQRBRACKET CTEI setArr RSQRBRACKET .

    COMMA           reduce using rule 18 (arr -> LSQRBRACKET CTEI setArr RSQRBRACKET .)
    SEMICOLON       reduce using rule 18 (arr -> LSQRBRACKET CTEI setArr RSQRBRACKET .)


state 61

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto RBRACKET
    (34) estatuto -> . estatuto2 estatuto
    (35) estatuto -> . empty
    (36) estatuto2 -> . asignacion SEMICOLON
    (37) estatuto2 -> . llamada SEMICOLON
    (38) estatuto2 -> . lectura SEMICOLON
    (39) estatuto2 -> . escritura SEMICOLON
    (40) estatuto2 -> . for
    (41) estatuto2 -> . if
    (42) estatuto2 -> . while
    (124) empty -> .
    (43) asignacion -> . ID addId arreglo EQUAL addOperator expresion quadEqual
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (53) lectura -> . READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (54) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (58) for -> . FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (59) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (62) while -> . WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RBRACKET        reduce using rule 124 (empty -> .)
    ID              shift and go to state 76
    READ            shift and go to state 77
    PRINT           shift and go to state 78
    FOR             shift and go to state 79
    IF              shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 66
    estatuto2                      shift and go to state 67
    empty                          shift and go to state 68
    asignacion                     shift and go to state 69
    llamada                        shift and go to state 70
    lectura                        shift and go to state 71
    escritura                      shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    while                          shift and go to state 75

state 62

    (24) parameters2 -> tipo ID addParameter parameters3 .

    RPARENTHESIS    reduce using rule 24 (parameters2 -> tipo ID addParameter parameters3 .)


state 63

    (25) parameters3 -> COMMA . ID addParameter parameters3
    (26) parameters3 -> COMMA . tipo ID addParameter parameters3
    (27) parameters3 -> COMMA . ID addParameter
    (28) parameters3 -> COMMA . tipo ID addParameter
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    ID              shift and go to state 82
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 83

state 64

    (30) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto retorno RBRACKET endFunc funcion

    LBRACKET        shift and go to state 84


state 65

    (31) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto RBRACKET endFunc funcion

    LBRACKET        shift and go to state 85


state 66

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 86


state 67

    (34) estatuto -> estatuto2 . estatuto
    (34) estatuto -> . estatuto2 estatuto
    (35) estatuto -> . empty
    (36) estatuto2 -> . asignacion SEMICOLON
    (37) estatuto2 -> . llamada SEMICOLON
    (38) estatuto2 -> . lectura SEMICOLON
    (39) estatuto2 -> . escritura SEMICOLON
    (40) estatuto2 -> . for
    (41) estatuto2 -> . if
    (42) estatuto2 -> . while
    (124) empty -> .
    (43) asignacion -> . ID addId arreglo EQUAL addOperator expresion quadEqual
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (53) lectura -> . READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (54) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (58) for -> . FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (59) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (62) while -> . WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RBRACKET        reduce using rule 124 (empty -> .)
    RETURN          reduce using rule 124 (empty -> .)
    ID              shift and go to state 76
    READ            shift and go to state 77
    PRINT           shift and go to state 78
    FOR             shift and go to state 79
    IF              shift and go to state 80
    WHILE           shift and go to state 81

    estatuto2                      shift and go to state 67
    estatuto                       shift and go to state 87
    empty                          shift and go to state 68
    asignacion                     shift and go to state 69
    llamada                        shift and go to state 70
    lectura                        shift and go to state 71
    escritura                      shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    while                          shift and go to state 75

state 68

    (35) estatuto -> empty .

    RBRACKET        reduce using rule 35 (estatuto -> empty .)
    RETURN          reduce using rule 35 (estatuto -> empty .)


state 69

    (36) estatuto2 -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 88


state 70

    (37) estatuto2 -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 89


state 71

    (38) estatuto2 -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 90


state 72

    (39) estatuto2 -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 91


state 73

    (40) estatuto2 -> for .

    ID              reduce using rule 40 (estatuto2 -> for .)
    READ            reduce using rule 40 (estatuto2 -> for .)
    PRINT           reduce using rule 40 (estatuto2 -> for .)
    FOR             reduce using rule 40 (estatuto2 -> for .)
    IF              reduce using rule 40 (estatuto2 -> for .)
    WHILE           reduce using rule 40 (estatuto2 -> for .)
    RBRACKET        reduce using rule 40 (estatuto2 -> for .)
    RETURN          reduce using rule 40 (estatuto2 -> for .)


state 74

    (41) estatuto2 -> if .

    ID              reduce using rule 41 (estatuto2 -> if .)
    READ            reduce using rule 41 (estatuto2 -> if .)
    PRINT           reduce using rule 41 (estatuto2 -> if .)
    FOR             reduce using rule 41 (estatuto2 -> if .)
    IF              reduce using rule 41 (estatuto2 -> if .)
    WHILE           reduce using rule 41 (estatuto2 -> if .)
    RBRACKET        reduce using rule 41 (estatuto2 -> if .)
    RETURN          reduce using rule 41 (estatuto2 -> if .)


state 75

    (42) estatuto2 -> while .

    ID              reduce using rule 42 (estatuto2 -> while .)
    READ            reduce using rule 42 (estatuto2 -> while .)
    PRINT           reduce using rule 42 (estatuto2 -> while .)
    FOR             reduce using rule 42 (estatuto2 -> while .)
    IF              reduce using rule 42 (estatuto2 -> while .)
    WHILE           reduce using rule 42 (estatuto2 -> while .)
    RBRACKET        reduce using rule 42 (estatuto2 -> while .)
    RETURN          reduce using rule 42 (estatuto2 -> while .)


state 76

    (43) asignacion -> ID . addId arreglo EQUAL addOperator expresion quadEqual
    (48) llamada -> ID . addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (123) addId -> .
    (121) addOperandFunc -> .

    LSQRBRACKET     reduce using rule 123 (addId -> .)
    EQUAL           reduce using rule 123 (addId -> .)
    LPARENTHESIS    reduce using rule 121 (addOperandFunc -> .)

    addId                          shift and go to state 92
    addOperandFunc                 shift and go to state 93

state 77

    (53) lectura -> READ . readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (101) readOperator -> .

    LPARENTHESIS    reduce using rule 101 (readOperator -> .)

    readOperator                   shift and go to state 94

state 78

    (54) escritura -> PRINT . LPARENTHESIS escritura1 RPARENTHESIS

    LPARENTHESIS    shift and go to state 95


state 79

    (58) for -> FOR . forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (109) forOperator -> .

    ID              reduce using rule 109 (forOperator -> .)

    forOperator                    shift and go to state 96

state 80

    (59) if -> IF . LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf

    LPARENTHESIS    shift and go to state 97


state 81

    (62) while -> WHILE . whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile
    (106) whileOperator -> .

    LPARENTHESIS    reduce using rule 106 (whileOperator -> .)

    whileOperator                  shift and go to state 98

state 82

    (25) parameters3 -> COMMA ID . addParameter parameters3
    (27) parameters3 -> COMMA ID . addParameter
    (29) addParameter -> .

    COMMA           reduce using rule 29 (addParameter -> .)
    RPARENTHESIS    reduce using rule 29 (addParameter -> .)

    addParameter                   shift and go to state 99

state 83

    (26) parameters3 -> COMMA tipo . ID addParameter parameters3
    (28) parameters3 -> COMMA tipo . ID addParameter

    ID              shift and go to state 100


state 84

    (30) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto retorno RBRACKET endFunc funcion
    (34) estatuto -> . estatuto2 estatuto
    (35) estatuto -> . empty
    (36) estatuto2 -> . asignacion SEMICOLON
    (37) estatuto2 -> . llamada SEMICOLON
    (38) estatuto2 -> . lectura SEMICOLON
    (39) estatuto2 -> . escritura SEMICOLON
    (40) estatuto2 -> . for
    (41) estatuto2 -> . if
    (42) estatuto2 -> . while
    (124) empty -> .
    (43) asignacion -> . ID addId arreglo EQUAL addOperator expresion quadEqual
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (53) lectura -> . READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (54) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (58) for -> . FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (59) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (62) while -> . WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RETURN          reduce using rule 124 (empty -> .)
    ID              shift and go to state 76
    READ            shift and go to state 77
    PRINT           shift and go to state 78
    FOR             shift and go to state 79
    IF              shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 101
    estatuto2                      shift and go to state 67
    empty                          shift and go to state 68
    asignacion                     shift and go to state 69
    llamada                        shift and go to state 70
    lectura                        shift and go to state 71
    escritura                      shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    while                          shift and go to state 75

state 85

    (31) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto RBRACKET endFunc funcion
    (34) estatuto -> . estatuto2 estatuto
    (35) estatuto -> . empty
    (36) estatuto2 -> . asignacion SEMICOLON
    (37) estatuto2 -> . llamada SEMICOLON
    (38) estatuto2 -> . lectura SEMICOLON
    (39) estatuto2 -> . escritura SEMICOLON
    (40) estatuto2 -> . for
    (41) estatuto2 -> . if
    (42) estatuto2 -> . while
    (124) empty -> .
    (43) asignacion -> . ID addId arreglo EQUAL addOperator expresion quadEqual
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (53) lectura -> . READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (54) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (58) for -> . FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (59) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (62) while -> . WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RBRACKET        reduce using rule 124 (empty -> .)
    ID              shift and go to state 76
    READ            shift and go to state 77
    PRINT           shift and go to state 78
    FOR             shift and go to state 79
    IF              shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 102
    estatuto2                      shift and go to state 67
    empty                          shift and go to state 68
    asignacion                     shift and go to state 69
    llamada                        shift and go to state 70
    lectura                        shift and go to state 71
    escritura                      shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    while                          shift and go to state 75

state 86

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET .

    END             reduce using rule 4 (principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET .)


state 87

    (34) estatuto -> estatuto2 estatuto .

    RBRACKET        reduce using rule 34 (estatuto -> estatuto2 estatuto .)
    RETURN          reduce using rule 34 (estatuto -> estatuto2 estatuto .)


state 88

    (36) estatuto2 -> asignacion SEMICOLON .

    ID              reduce using rule 36 (estatuto2 -> asignacion SEMICOLON .)
    READ            reduce using rule 36 (estatuto2 -> asignacion SEMICOLON .)
    PRINT           reduce using rule 36 (estatuto2 -> asignacion SEMICOLON .)
    FOR             reduce using rule 36 (estatuto2 -> asignacion SEMICOLON .)
    IF              reduce using rule 36 (estatuto2 -> asignacion SEMICOLON .)
    WHILE           reduce using rule 36 (estatuto2 -> asignacion SEMICOLON .)
    RBRACKET        reduce using rule 36 (estatuto2 -> asignacion SEMICOLON .)
    RETURN          reduce using rule 36 (estatuto2 -> asignacion SEMICOLON .)


state 89

    (37) estatuto2 -> llamada SEMICOLON .

    ID              reduce using rule 37 (estatuto2 -> llamada SEMICOLON .)
    READ            reduce using rule 37 (estatuto2 -> llamada SEMICOLON .)
    PRINT           reduce using rule 37 (estatuto2 -> llamada SEMICOLON .)
    FOR             reduce using rule 37 (estatuto2 -> llamada SEMICOLON .)
    IF              reduce using rule 37 (estatuto2 -> llamada SEMICOLON .)
    WHILE           reduce using rule 37 (estatuto2 -> llamada SEMICOLON .)
    RBRACKET        reduce using rule 37 (estatuto2 -> llamada SEMICOLON .)
    RETURN          reduce using rule 37 (estatuto2 -> llamada SEMICOLON .)


state 90

    (38) estatuto2 -> lectura SEMICOLON .

    ID              reduce using rule 38 (estatuto2 -> lectura SEMICOLON .)
    READ            reduce using rule 38 (estatuto2 -> lectura SEMICOLON .)
    PRINT           reduce using rule 38 (estatuto2 -> lectura SEMICOLON .)
    FOR             reduce using rule 38 (estatuto2 -> lectura SEMICOLON .)
    IF              reduce using rule 38 (estatuto2 -> lectura SEMICOLON .)
    WHILE           reduce using rule 38 (estatuto2 -> lectura SEMICOLON .)
    RBRACKET        reduce using rule 38 (estatuto2 -> lectura SEMICOLON .)
    RETURN          reduce using rule 38 (estatuto2 -> lectura SEMICOLON .)


state 91

    (39) estatuto2 -> escritura SEMICOLON .

    ID              reduce using rule 39 (estatuto2 -> escritura SEMICOLON .)
    READ            reduce using rule 39 (estatuto2 -> escritura SEMICOLON .)
    PRINT           reduce using rule 39 (estatuto2 -> escritura SEMICOLON .)
    FOR             reduce using rule 39 (estatuto2 -> escritura SEMICOLON .)
    IF              reduce using rule 39 (estatuto2 -> escritura SEMICOLON .)
    WHILE           reduce using rule 39 (estatuto2 -> escritura SEMICOLON .)
    RBRACKET        reduce using rule 39 (estatuto2 -> escritura SEMICOLON .)
    RETURN          reduce using rule 39 (estatuto2 -> escritura SEMICOLON .)


state 92

    (43) asignacion -> ID addId . arreglo EQUAL addOperator expresion quadEqual
    (44) arreglo -> . LSQRBRACKET expresion arrQuad RSQRBRACKET
    (45) arreglo -> . empty
    (124) empty -> .

    LSQRBRACKET     shift and go to state 104
    EQUAL           reduce using rule 124 (empty -> .)

    arreglo                        shift and go to state 103
    empty                          shift and go to state 105

state 93

    (48) llamada -> ID addOperandFunc . requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (112) requestCallMemory -> .

    LPARENTHESIS    reduce using rule 112 (requestCallMemory -> .)

    requestCallMemory              shift and go to state 106

state 94

    (53) lectura -> READ readOperator . LPARENTHESIS expresion readQuad RPARENTHESIS

    LPARENTHESIS    shift and go to state 107


state 95

    (54) escritura -> PRINT LPARENTHESIS . escritura1 RPARENTHESIS
    (55) escritura1 -> . printOperator expresion printQuad escritura2
    (99) printOperator -> .

    CTEI            reduce using rule 99 (printOperator -> .)
    CTEF            reduce using rule 99 (printOperator -> .)
    CTEC            reduce using rule 99 (printOperator -> .)
    CTESTRING       reduce using rule 99 (printOperator -> .)
    ID              reduce using rule 99 (printOperator -> .)
    LPARENTHESIS    reduce using rule 99 (printOperator -> .)

    escritura1                     shift and go to state 108
    printOperator                  shift and go to state 109

state 96

    (58) for -> FOR forOperator . asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (43) asignacion -> . ID addId arreglo EQUAL addOperator expresion quadEqual

    ID              shift and go to state 111

    asignacion                     shift and go to state 110

state 97

    (59) if -> IF LPARENTHESIS . expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (63) expresion -> . nexp orQuad expresion1
    (66) nexp -> . comexp andQuad nexp1
    (69) comexp -> . sumexp compQuad compex1 compQuad
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    expresion                      shift and go to state 113
    nexp                           shift and go to state 114
    comexp                         shift and go to state 115
    sumexp                         shift and go to state 116
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 98

    (62) while -> WHILE whileOperator . LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    LPARENTHESIS    shift and go to state 125


state 99

    (25) parameters3 -> COMMA ID addParameter . parameters3
    (27) parameters3 -> COMMA ID addParameter .
    (25) parameters3 -> . COMMA ID addParameter parameters3
    (26) parameters3 -> . COMMA tipo ID addParameter parameters3
    (27) parameters3 -> . COMMA ID addParameter
    (28) parameters3 -> . COMMA tipo ID addParameter

    RPARENTHESIS    reduce using rule 27 (parameters3 -> COMMA ID addParameter .)
    COMMA           shift and go to state 63

    parameters3                    shift and go to state 126

state 100

    (26) parameters3 -> COMMA tipo ID . addParameter parameters3
    (28) parameters3 -> COMMA tipo ID . addParameter
    (29) addParameter -> .

    COMMA           reduce using rule 29 (addParameter -> .)
    RPARENTHESIS    reduce using rule 29 (addParameter -> .)

    addParameter                   shift and go to state 127

state 101

    (30) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . retorno RBRACKET endFunc funcion
    (33) retorno -> . RETURN expresion quadReturn SEMICOLON

    RETURN          shift and go to state 129

    retorno                        shift and go to state 128

state 102

    (31) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . RBRACKET endFunc funcion

    RBRACKET        shift and go to state 130


state 103

    (43) asignacion -> ID addId arreglo . EQUAL addOperator expresion quadEqual

    EQUAL           shift and go to state 131


state 104

    (44) arreglo -> LSQRBRACKET . expresion arrQuad RSQRBRACKET
    (63) expresion -> . nexp orQuad expresion1
    (66) nexp -> . comexp andQuad nexp1
    (69) comexp -> . sumexp compQuad compex1 compQuad
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    expresion                      shift and go to state 132
    nexp                           shift and go to state 114
    comexp                         shift and go to state 115
    sumexp                         shift and go to state 116
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 105

    (45) arreglo -> empty .

    EQUAL           reduce using rule 45 (arreglo -> empty .)


state 106

    (48) llamada -> ID addOperandFunc requestCallMemory . LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    LPARENTHESIS    shift and go to state 133


state 107

    (53) lectura -> READ readOperator LPARENTHESIS . expresion readQuad RPARENTHESIS
    (63) expresion -> . nexp orQuad expresion1
    (66) nexp -> . comexp andQuad nexp1
    (69) comexp -> . sumexp compQuad compex1 compQuad
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    expresion                      shift and go to state 134
    nexp                           shift and go to state 114
    comexp                         shift and go to state 115
    sumexp                         shift and go to state 116
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 108

    (54) escritura -> PRINT LPARENTHESIS escritura1 . RPARENTHESIS

    RPARENTHESIS    shift and go to state 135


state 109

    (55) escritura1 -> printOperator . expresion printQuad escritura2
    (63) expresion -> . nexp orQuad expresion1
    (66) nexp -> . comexp andQuad nexp1
    (69) comexp -> . sumexp compQuad compex1 compQuad
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    expresion                      shift and go to state 136
    nexp                           shift and go to state 114
    comexp                         shift and go to state 115
    sumexp                         shift and go to state 116
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 110

    (58) for -> FOR forOperator asignacion . COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor

    COMMA           shift and go to state 137


state 111

    (43) asignacion -> ID . addId arreglo EQUAL addOperator expresion quadEqual
    (123) addId -> .

    LSQRBRACKET     reduce using rule 123 (addId -> .)
    EQUAL           reduce using rule 123 (addId -> .)

    addId                          shift and go to state 92

state 112

    (92) pexp -> LPARENTHESIS . expresion RPARENTHESIS
    (63) expresion -> . nexp orQuad expresion1
    (66) nexp -> . comexp andQuad nexp1
    (69) comexp -> . sumexp compQuad compex1 compQuad
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    expresion                      shift and go to state 138
    nexp                           shift and go to state 114
    comexp                         shift and go to state 115
    sumexp                         shift and go to state 116
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 113

    (59) if -> IF LPARENTHESIS expresion . RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf

    RPARENTHESIS    shift and go to state 139


state 114

    (63) expresion -> nexp . orQuad expresion1
    (93) orQuad -> .

    OR              reduce using rule 93 (orQuad -> .)
    RPARENTHESIS    reduce using rule 93 (orQuad -> .)
    RSQRBRACKET     reduce using rule 93 (orQuad -> .)
    COMMA           reduce using rule 93 (orQuad -> .)
    SEMICOLON       reduce using rule 93 (orQuad -> .)
    LBRACKET        reduce using rule 93 (orQuad -> .)

    orQuad                         shift and go to state 140

state 115

    (66) nexp -> comexp . andQuad nexp1
    (94) andQuad -> .

    AND             reduce using rule 94 (andQuad -> .)
    OR              reduce using rule 94 (andQuad -> .)
    RPARENTHESIS    reduce using rule 94 (andQuad -> .)
    RSQRBRACKET     reduce using rule 94 (andQuad -> .)
    COMMA           reduce using rule 94 (andQuad -> .)
    SEMICOLON       reduce using rule 94 (andQuad -> .)
    LBRACKET        reduce using rule 94 (andQuad -> .)

    andQuad                        shift and go to state 141

state 116

    (69) comexp -> sumexp . compQuad compex1 compQuad
    (95) compQuad -> .

    GTHAN           reduce using rule 95 (compQuad -> .)
    LTHAN           reduce using rule 95 (compQuad -> .)
    GTHANEQ         reduce using rule 95 (compQuad -> .)
    LTHANEQ         reduce using rule 95 (compQuad -> .)
    DIFFERENT       reduce using rule 95 (compQuad -> .)
    EQUALS          reduce using rule 95 (compQuad -> .)
    AND             reduce using rule 95 (compQuad -> .)
    OR              reduce using rule 95 (compQuad -> .)
    RPARENTHESIS    reduce using rule 95 (compQuad -> .)
    RSQRBRACKET     reduce using rule 95 (compQuad -> .)
    COMMA           reduce using rule 95 (compQuad -> .)
    SEMICOLON       reduce using rule 95 (compQuad -> .)
    LBRACKET        reduce using rule 95 (compQuad -> .)

    compQuad                       shift and go to state 142

state 117

    (77) sumexp -> mulexp . plusQuad sumexp1
    (97) plusQuad -> .

    PLUS            reduce using rule 97 (plusQuad -> .)
    MINUS           reduce using rule 97 (plusQuad -> .)
    GTHAN           reduce using rule 97 (plusQuad -> .)
    LTHAN           reduce using rule 97 (plusQuad -> .)
    GTHANEQ         reduce using rule 97 (plusQuad -> .)
    LTHANEQ         reduce using rule 97 (plusQuad -> .)
    DIFFERENT       reduce using rule 97 (plusQuad -> .)
    EQUALS          reduce using rule 97 (plusQuad -> .)
    AND             reduce using rule 97 (plusQuad -> .)
    OR              reduce using rule 97 (plusQuad -> .)
    RPARENTHESIS    reduce using rule 97 (plusQuad -> .)
    RSQRBRACKET     reduce using rule 97 (plusQuad -> .)
    COMMA           reduce using rule 97 (plusQuad -> .)
    SEMICOLON       reduce using rule 97 (plusQuad -> .)
    LBRACKET        reduce using rule 97 (plusQuad -> .)

    plusQuad                       shift and go to state 143

state 118

    (81) mulexp -> pexp . multQuad mulexp1
    (96) multQuad -> .

    MULTIPLICATION  reduce using rule 96 (multQuad -> .)
    DIVISION        reduce using rule 96 (multQuad -> .)
    PLUS            reduce using rule 96 (multQuad -> .)
    MINUS           reduce using rule 96 (multQuad -> .)
    GTHAN           reduce using rule 96 (multQuad -> .)
    LTHAN           reduce using rule 96 (multQuad -> .)
    GTHANEQ         reduce using rule 96 (multQuad -> .)
    LTHANEQ         reduce using rule 96 (multQuad -> .)
    DIFFERENT       reduce using rule 96 (multQuad -> .)
    EQUALS          reduce using rule 96 (multQuad -> .)
    AND             reduce using rule 96 (multQuad -> .)
    OR              reduce using rule 96 (multQuad -> .)
    RPARENTHESIS    reduce using rule 96 (multQuad -> .)
    RSQRBRACKET     reduce using rule 96 (multQuad -> .)
    COMMA           reduce using rule 96 (multQuad -> .)
    SEMICOLON       reduce using rule 96 (multQuad -> .)
    LBRACKET        reduce using rule 96 (multQuad -> .)

    multQuad                       shift and go to state 144

state 119

    (85) pexp -> CTEI . addOperandCte
    (122) addOperandCte -> .

    MULTIPLICATION  reduce using rule 122 (addOperandCte -> .)
    DIVISION        reduce using rule 122 (addOperandCte -> .)
    PLUS            reduce using rule 122 (addOperandCte -> .)
    MINUS           reduce using rule 122 (addOperandCte -> .)
    GTHAN           reduce using rule 122 (addOperandCte -> .)
    LTHAN           reduce using rule 122 (addOperandCte -> .)
    GTHANEQ         reduce using rule 122 (addOperandCte -> .)
    LTHANEQ         reduce using rule 122 (addOperandCte -> .)
    DIFFERENT       reduce using rule 122 (addOperandCte -> .)
    EQUALS          reduce using rule 122 (addOperandCte -> .)
    AND             reduce using rule 122 (addOperandCte -> .)
    OR              reduce using rule 122 (addOperandCte -> .)
    RPARENTHESIS    reduce using rule 122 (addOperandCte -> .)
    RSQRBRACKET     reduce using rule 122 (addOperandCte -> .)
    COMMA           reduce using rule 122 (addOperandCte -> .)
    SEMICOLON       reduce using rule 122 (addOperandCte -> .)
    LBRACKET        reduce using rule 122 (addOperandCte -> .)

    addOperandCte                  shift and go to state 145

state 120

    (86) pexp -> CTEF . addOperandCte
    (122) addOperandCte -> .

    MULTIPLICATION  reduce using rule 122 (addOperandCte -> .)
    DIVISION        reduce using rule 122 (addOperandCte -> .)
    PLUS            reduce using rule 122 (addOperandCte -> .)
    MINUS           reduce using rule 122 (addOperandCte -> .)
    GTHAN           reduce using rule 122 (addOperandCte -> .)
    LTHAN           reduce using rule 122 (addOperandCte -> .)
    GTHANEQ         reduce using rule 122 (addOperandCte -> .)
    LTHANEQ         reduce using rule 122 (addOperandCte -> .)
    DIFFERENT       reduce using rule 122 (addOperandCte -> .)
    EQUALS          reduce using rule 122 (addOperandCte -> .)
    AND             reduce using rule 122 (addOperandCte -> .)
    OR              reduce using rule 122 (addOperandCte -> .)
    RPARENTHESIS    reduce using rule 122 (addOperandCte -> .)
    RSQRBRACKET     reduce using rule 122 (addOperandCte -> .)
    COMMA           reduce using rule 122 (addOperandCte -> .)
    SEMICOLON       reduce using rule 122 (addOperandCte -> .)
    LBRACKET        reduce using rule 122 (addOperandCte -> .)

    addOperandCte                  shift and go to state 146

state 121

    (87) pexp -> CTEC . addOperandCte
    (122) addOperandCte -> .

    MULTIPLICATION  reduce using rule 122 (addOperandCte -> .)
    DIVISION        reduce using rule 122 (addOperandCte -> .)
    PLUS            reduce using rule 122 (addOperandCte -> .)
    MINUS           reduce using rule 122 (addOperandCte -> .)
    GTHAN           reduce using rule 122 (addOperandCte -> .)
    LTHAN           reduce using rule 122 (addOperandCte -> .)
    GTHANEQ         reduce using rule 122 (addOperandCte -> .)
    LTHANEQ         reduce using rule 122 (addOperandCte -> .)
    DIFFERENT       reduce using rule 122 (addOperandCte -> .)
    EQUALS          reduce using rule 122 (addOperandCte -> .)
    AND             reduce using rule 122 (addOperandCte -> .)
    OR              reduce using rule 122 (addOperandCte -> .)
    RPARENTHESIS    reduce using rule 122 (addOperandCte -> .)
    RSQRBRACKET     reduce using rule 122 (addOperandCte -> .)
    COMMA           reduce using rule 122 (addOperandCte -> .)
    SEMICOLON       reduce using rule 122 (addOperandCte -> .)
    LBRACKET        reduce using rule 122 (addOperandCte -> .)

    addOperandCte                  shift and go to state 147

state 122

    (88) pexp -> CTESTRING . addOperandCte
    (122) addOperandCte -> .

    MULTIPLICATION  reduce using rule 122 (addOperandCte -> .)
    DIVISION        reduce using rule 122 (addOperandCte -> .)
    PLUS            reduce using rule 122 (addOperandCte -> .)
    MINUS           reduce using rule 122 (addOperandCte -> .)
    GTHAN           reduce using rule 122 (addOperandCte -> .)
    LTHAN           reduce using rule 122 (addOperandCte -> .)
    GTHANEQ         reduce using rule 122 (addOperandCte -> .)
    LTHANEQ         reduce using rule 122 (addOperandCte -> .)
    DIFFERENT       reduce using rule 122 (addOperandCte -> .)
    EQUALS          reduce using rule 122 (addOperandCte -> .)
    AND             reduce using rule 122 (addOperandCte -> .)
    OR              reduce using rule 122 (addOperandCte -> .)
    RPARENTHESIS    reduce using rule 122 (addOperandCte -> .)
    RSQRBRACKET     reduce using rule 122 (addOperandCte -> .)
    COMMA           reduce using rule 122 (addOperandCte -> .)
    SEMICOLON       reduce using rule 122 (addOperandCte -> .)
    LBRACKET        reduce using rule 122 (addOperandCte -> .)

    addOperandCte                  shift and go to state 148

state 123

    (89) pexp -> llamada .

    MULTIPLICATION  reduce using rule 89 (pexp -> llamada .)
    DIVISION        reduce using rule 89 (pexp -> llamada .)
    PLUS            reduce using rule 89 (pexp -> llamada .)
    MINUS           reduce using rule 89 (pexp -> llamada .)
    GTHAN           reduce using rule 89 (pexp -> llamada .)
    LTHAN           reduce using rule 89 (pexp -> llamada .)
    GTHANEQ         reduce using rule 89 (pexp -> llamada .)
    LTHANEQ         reduce using rule 89 (pexp -> llamada .)
    DIFFERENT       reduce using rule 89 (pexp -> llamada .)
    EQUALS          reduce using rule 89 (pexp -> llamada .)
    AND             reduce using rule 89 (pexp -> llamada .)
    OR              reduce using rule 89 (pexp -> llamada .)
    RPARENTHESIS    reduce using rule 89 (pexp -> llamada .)
    RSQRBRACKET     reduce using rule 89 (pexp -> llamada .)
    COMMA           reduce using rule 89 (pexp -> llamada .)
    SEMICOLON       reduce using rule 89 (pexp -> llamada .)
    LBRACKET        reduce using rule 89 (pexp -> llamada .)


state 124

    (90) pexp -> ID . addOperandVar
    (91) pexp -> ID . addOperandVar leearr
    (48) llamada -> ID . addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (120) addOperandVar -> .
    (121) addOperandFunc -> .

    LSQRBRACKET     reduce using rule 120 (addOperandVar -> .)
    MULTIPLICATION  reduce using rule 120 (addOperandVar -> .)
    DIVISION        reduce using rule 120 (addOperandVar -> .)
    PLUS            reduce using rule 120 (addOperandVar -> .)
    MINUS           reduce using rule 120 (addOperandVar -> .)
    GTHAN           reduce using rule 120 (addOperandVar -> .)
    LTHAN           reduce using rule 120 (addOperandVar -> .)
    GTHANEQ         reduce using rule 120 (addOperandVar -> .)
    LTHANEQ         reduce using rule 120 (addOperandVar -> .)
    DIFFERENT       reduce using rule 120 (addOperandVar -> .)
    EQUALS          reduce using rule 120 (addOperandVar -> .)
    AND             reduce using rule 120 (addOperandVar -> .)
    OR              reduce using rule 120 (addOperandVar -> .)
    RPARENTHESIS    reduce using rule 120 (addOperandVar -> .)
    RSQRBRACKET     reduce using rule 120 (addOperandVar -> .)
    COMMA           reduce using rule 120 (addOperandVar -> .)
    SEMICOLON       reduce using rule 120 (addOperandVar -> .)
    LBRACKET        reduce using rule 120 (addOperandVar -> .)
    LPARENTHESIS    reduce using rule 121 (addOperandFunc -> .)

    addOperandVar                  shift and go to state 149
    addOperandFunc                 shift and go to state 93

state 125

    (62) while -> WHILE whileOperator LPARENTHESIS . expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile
    (63) expresion -> . nexp orQuad expresion1
    (66) nexp -> . comexp andQuad nexp1
    (69) comexp -> . sumexp compQuad compex1 compQuad
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    expresion                      shift and go to state 150
    nexp                           shift and go to state 114
    comexp                         shift and go to state 115
    sumexp                         shift and go to state 116
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 126

    (25) parameters3 -> COMMA ID addParameter parameters3 .

    RPARENTHESIS    reduce using rule 25 (parameters3 -> COMMA ID addParameter parameters3 .)


state 127

    (26) parameters3 -> COMMA tipo ID addParameter . parameters3
    (28) parameters3 -> COMMA tipo ID addParameter .
    (25) parameters3 -> . COMMA ID addParameter parameters3
    (26) parameters3 -> . COMMA tipo ID addParameter parameters3
    (27) parameters3 -> . COMMA ID addParameter
    (28) parameters3 -> . COMMA tipo ID addParameter

    RPARENTHESIS    reduce using rule 28 (parameters3 -> COMMA tipo ID addParameter .)
    COMMA           shift and go to state 63

    parameters3                    shift and go to state 151

state 128

    (30) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno . RBRACKET endFunc funcion

    RBRACKET        shift and go to state 152


state 129

    (33) retorno -> RETURN . expresion quadReturn SEMICOLON
    (63) expresion -> . nexp orQuad expresion1
    (66) nexp -> . comexp andQuad nexp1
    (69) comexp -> . sumexp compQuad compex1 compQuad
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    expresion                      shift and go to state 153
    nexp                           shift and go to state 114
    comexp                         shift and go to state 115
    sumexp                         shift and go to state 116
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 130

    (31) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET . endFunc funcion
    (115) endFunc -> .

    FUNCTION        reduce using rule 115 (endFunc -> .)
    MAIN            reduce using rule 115 (endFunc -> .)

    endFunc                        shift and go to state 154

state 131

    (43) asignacion -> ID addId arreglo EQUAL . addOperator expresion quadEqual
    (118) addOperator -> .

    CTEI            reduce using rule 118 (addOperator -> .)
    CTEF            reduce using rule 118 (addOperator -> .)
    CTEC            reduce using rule 118 (addOperator -> .)
    CTESTRING       reduce using rule 118 (addOperator -> .)
    ID              reduce using rule 118 (addOperator -> .)
    LPARENTHESIS    reduce using rule 118 (addOperator -> .)

    addOperator                    shift and go to state 155

state 132

    (44) arreglo -> LSQRBRACKET expresion . arrQuad RSQRBRACKET
    (46) arrQuad -> .

    RSQRBRACKET     reduce using rule 46 (arrQuad -> .)

    arrQuad                        shift and go to state 156

state 133

    (48) llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS . enviarAgrs RPARENTHESIS callQuad
    (49) enviarAgrs -> . expresion quadArg enviarAgrs2
    (50) enviarAgrs -> . empty
    (63) expresion -> . nexp orQuad expresion1
    (124) empty -> .
    (66) nexp -> . comexp andQuad nexp1
    (69) comexp -> . sumexp compQuad compex1 compQuad
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    RPARENTHESIS    reduce using rule 124 (empty -> .)
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    enviarAgrs                     shift and go to state 157
    expresion                      shift and go to state 158
    empty                          shift and go to state 159
    nexp                           shift and go to state 114
    comexp                         shift and go to state 115
    sumexp                         shift and go to state 116
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 134

    (53) lectura -> READ readOperator LPARENTHESIS expresion . readQuad RPARENTHESIS
    (102) readQuad -> .

    RPARENTHESIS    reduce using rule 102 (readQuad -> .)

    readQuad                       shift and go to state 160

state 135

    (54) escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS .

    SEMICOLON       reduce using rule 54 (escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS .)


state 136

    (55) escritura1 -> printOperator expresion . printQuad escritura2
    (100) printQuad -> .

    COMMA           reduce using rule 100 (printQuad -> .)
    RPARENTHESIS    reduce using rule 100 (printQuad -> .)

    printQuad                      shift and go to state 161

state 137

    (58) for -> FOR forOperator asignacion COMMA . TO expresion forQuad LBRACKET estatuto RBRACKET endFor

    TO              shift and go to state 162


state 138

    (92) pexp -> LPARENTHESIS expresion . RPARENTHESIS

    RPARENTHESIS    shift and go to state 163


state 139

    (59) if -> IF LPARENTHESIS expresion RPARENTHESIS . ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (103) ifQuad -> .

    THEN            reduce using rule 103 (ifQuad -> .)

    ifQuad                         shift and go to state 164

state 140

    (63) expresion -> nexp orQuad . expresion1
    (64) expresion1 -> . OR addOperator expresion
    (65) expresion1 -> . empty
    (124) empty -> .

    OR              shift and go to state 166
    RPARENTHESIS    reduce using rule 124 (empty -> .)
    RSQRBRACKET     reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    LBRACKET        reduce using rule 124 (empty -> .)

    expresion1                     shift and go to state 165
    empty                          shift and go to state 167

state 141

    (66) nexp -> comexp andQuad . nexp1
    (67) nexp1 -> . AND addOperator nexp
    (68) nexp1 -> . empty
    (124) empty -> .

    AND             shift and go to state 169
    OR              reduce using rule 124 (empty -> .)
    RPARENTHESIS    reduce using rule 124 (empty -> .)
    RSQRBRACKET     reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    LBRACKET        reduce using rule 124 (empty -> .)

    nexp1                          shift and go to state 168
    empty                          shift and go to state 170

state 142

    (69) comexp -> sumexp compQuad . compex1 compQuad
    (70) compex1 -> . GTHAN addOperator sumexp
    (71) compex1 -> . LTHAN addOperator sumexp
    (72) compex1 -> . GTHANEQ addOperator sumexp
    (73) compex1 -> . LTHANEQ addOperator sumexp
    (74) compex1 -> . DIFFERENT addOperator sumexp
    (75) compex1 -> . EQUALS addOperator sumexp
    (76) compex1 -> . empty
    (124) empty -> .

    GTHAN           shift and go to state 172
    LTHAN           shift and go to state 173
    GTHANEQ         shift and go to state 174
    LTHANEQ         shift and go to state 175
    DIFFERENT       shift and go to state 176
    EQUALS          shift and go to state 177
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    RPARENTHESIS    reduce using rule 124 (empty -> .)
    RSQRBRACKET     reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    LBRACKET        reduce using rule 124 (empty -> .)

    compex1                        shift and go to state 171
    empty                          shift and go to state 178

state 143

    (77) sumexp -> mulexp plusQuad . sumexp1
    (78) sumexp1 -> . PLUS addOperator sumexp
    (79) sumexp1 -> . MINUS addOperator sumexp
    (80) sumexp1 -> . empty
    (124) empty -> .

    PLUS            shift and go to state 180
    MINUS           shift and go to state 181
    GTHAN           reduce using rule 124 (empty -> .)
    LTHAN           reduce using rule 124 (empty -> .)
    GTHANEQ         reduce using rule 124 (empty -> .)
    LTHANEQ         reduce using rule 124 (empty -> .)
    DIFFERENT       reduce using rule 124 (empty -> .)
    EQUALS          reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    RPARENTHESIS    reduce using rule 124 (empty -> .)
    RSQRBRACKET     reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    LBRACKET        reduce using rule 124 (empty -> .)

    sumexp1                        shift and go to state 179
    empty                          shift and go to state 182

state 144

    (81) mulexp -> pexp multQuad . mulexp1
    (82) mulexp1 -> . MULTIPLICATION addOperator mulexp
    (83) mulexp1 -> . DIVISION addOperator mulexp
    (84) mulexp1 -> . empty
    (124) empty -> .

    MULTIPLICATION  shift and go to state 184
    DIVISION        shift and go to state 185
    PLUS            reduce using rule 124 (empty -> .)
    MINUS           reduce using rule 124 (empty -> .)
    GTHAN           reduce using rule 124 (empty -> .)
    LTHAN           reduce using rule 124 (empty -> .)
    GTHANEQ         reduce using rule 124 (empty -> .)
    LTHANEQ         reduce using rule 124 (empty -> .)
    DIFFERENT       reduce using rule 124 (empty -> .)
    EQUALS          reduce using rule 124 (empty -> .)
    AND             reduce using rule 124 (empty -> .)
    OR              reduce using rule 124 (empty -> .)
    RPARENTHESIS    reduce using rule 124 (empty -> .)
    RSQRBRACKET     reduce using rule 124 (empty -> .)
    COMMA           reduce using rule 124 (empty -> .)
    SEMICOLON       reduce using rule 124 (empty -> .)
    LBRACKET        reduce using rule 124 (empty -> .)

    mulexp1                        shift and go to state 183
    empty                          shift and go to state 186

state 145

    (85) pexp -> CTEI addOperandCte .

    MULTIPLICATION  reduce using rule 85 (pexp -> CTEI addOperandCte .)
    DIVISION        reduce using rule 85 (pexp -> CTEI addOperandCte .)
    PLUS            reduce using rule 85 (pexp -> CTEI addOperandCte .)
    MINUS           reduce using rule 85 (pexp -> CTEI addOperandCte .)
    GTHAN           reduce using rule 85 (pexp -> CTEI addOperandCte .)
    LTHAN           reduce using rule 85 (pexp -> CTEI addOperandCte .)
    GTHANEQ         reduce using rule 85 (pexp -> CTEI addOperandCte .)
    LTHANEQ         reduce using rule 85 (pexp -> CTEI addOperandCte .)
    DIFFERENT       reduce using rule 85 (pexp -> CTEI addOperandCte .)
    EQUALS          reduce using rule 85 (pexp -> CTEI addOperandCte .)
    AND             reduce using rule 85 (pexp -> CTEI addOperandCte .)
    OR              reduce using rule 85 (pexp -> CTEI addOperandCte .)
    RPARENTHESIS    reduce using rule 85 (pexp -> CTEI addOperandCte .)
    RSQRBRACKET     reduce using rule 85 (pexp -> CTEI addOperandCte .)
    COMMA           reduce using rule 85 (pexp -> CTEI addOperandCte .)
    SEMICOLON       reduce using rule 85 (pexp -> CTEI addOperandCte .)
    LBRACKET        reduce using rule 85 (pexp -> CTEI addOperandCte .)


state 146

    (86) pexp -> CTEF addOperandCte .

    MULTIPLICATION  reduce using rule 86 (pexp -> CTEF addOperandCte .)
    DIVISION        reduce using rule 86 (pexp -> CTEF addOperandCte .)
    PLUS            reduce using rule 86 (pexp -> CTEF addOperandCte .)
    MINUS           reduce using rule 86 (pexp -> CTEF addOperandCte .)
    GTHAN           reduce using rule 86 (pexp -> CTEF addOperandCte .)
    LTHAN           reduce using rule 86 (pexp -> CTEF addOperandCte .)
    GTHANEQ         reduce using rule 86 (pexp -> CTEF addOperandCte .)
    LTHANEQ         reduce using rule 86 (pexp -> CTEF addOperandCte .)
    DIFFERENT       reduce using rule 86 (pexp -> CTEF addOperandCte .)
    EQUALS          reduce using rule 86 (pexp -> CTEF addOperandCte .)
    AND             reduce using rule 86 (pexp -> CTEF addOperandCte .)
    OR              reduce using rule 86 (pexp -> CTEF addOperandCte .)
    RPARENTHESIS    reduce using rule 86 (pexp -> CTEF addOperandCte .)
    RSQRBRACKET     reduce using rule 86 (pexp -> CTEF addOperandCte .)
    COMMA           reduce using rule 86 (pexp -> CTEF addOperandCte .)
    SEMICOLON       reduce using rule 86 (pexp -> CTEF addOperandCte .)
    LBRACKET        reduce using rule 86 (pexp -> CTEF addOperandCte .)


state 147

    (87) pexp -> CTEC addOperandCte .

    MULTIPLICATION  reduce using rule 87 (pexp -> CTEC addOperandCte .)
    DIVISION        reduce using rule 87 (pexp -> CTEC addOperandCte .)
    PLUS            reduce using rule 87 (pexp -> CTEC addOperandCte .)
    MINUS           reduce using rule 87 (pexp -> CTEC addOperandCte .)
    GTHAN           reduce using rule 87 (pexp -> CTEC addOperandCte .)
    LTHAN           reduce using rule 87 (pexp -> CTEC addOperandCte .)
    GTHANEQ         reduce using rule 87 (pexp -> CTEC addOperandCte .)
    LTHANEQ         reduce using rule 87 (pexp -> CTEC addOperandCte .)
    DIFFERENT       reduce using rule 87 (pexp -> CTEC addOperandCte .)
    EQUALS          reduce using rule 87 (pexp -> CTEC addOperandCte .)
    AND             reduce using rule 87 (pexp -> CTEC addOperandCte .)
    OR              reduce using rule 87 (pexp -> CTEC addOperandCte .)
    RPARENTHESIS    reduce using rule 87 (pexp -> CTEC addOperandCte .)
    RSQRBRACKET     reduce using rule 87 (pexp -> CTEC addOperandCte .)
    COMMA           reduce using rule 87 (pexp -> CTEC addOperandCte .)
    SEMICOLON       reduce using rule 87 (pexp -> CTEC addOperandCte .)
    LBRACKET        reduce using rule 87 (pexp -> CTEC addOperandCte .)


state 148

    (88) pexp -> CTESTRING addOperandCte .

    MULTIPLICATION  reduce using rule 88 (pexp -> CTESTRING addOperandCte .)
    DIVISION        reduce using rule 88 (pexp -> CTESTRING addOperandCte .)
    PLUS            reduce using rule 88 (pexp -> CTESTRING addOperandCte .)
    MINUS           reduce using rule 88 (pexp -> CTESTRING addOperandCte .)
    GTHAN           reduce using rule 88 (pexp -> CTESTRING addOperandCte .)
    LTHAN           reduce using rule 88 (pexp -> CTESTRING addOperandCte .)
    GTHANEQ         reduce using rule 88 (pexp -> CTESTRING addOperandCte .)
    LTHANEQ         reduce using rule 88 (pexp -> CTESTRING addOperandCte .)
    DIFFERENT       reduce using rule 88 (pexp -> CTESTRING addOperandCte .)
    EQUALS          reduce using rule 88 (pexp -> CTESTRING addOperandCte .)
    AND             reduce using rule 88 (pexp -> CTESTRING addOperandCte .)
    OR              reduce using rule 88 (pexp -> CTESTRING addOperandCte .)
    RPARENTHESIS    reduce using rule 88 (pexp -> CTESTRING addOperandCte .)
    RSQRBRACKET     reduce using rule 88 (pexp -> CTESTRING addOperandCte .)
    COMMA           reduce using rule 88 (pexp -> CTESTRING addOperandCte .)
    SEMICOLON       reduce using rule 88 (pexp -> CTESTRING addOperandCte .)
    LBRACKET        reduce using rule 88 (pexp -> CTESTRING addOperandCte .)


state 149

    (90) pexp -> ID addOperandVar .
    (91) pexp -> ID addOperandVar . leearr
    (47) leearr -> . LSQRBRACKET expresion RSQRBRACKET

    MULTIPLICATION  reduce using rule 90 (pexp -> ID addOperandVar .)
    DIVISION        reduce using rule 90 (pexp -> ID addOperandVar .)
    PLUS            reduce using rule 90 (pexp -> ID addOperandVar .)
    MINUS           reduce using rule 90 (pexp -> ID addOperandVar .)
    GTHAN           reduce using rule 90 (pexp -> ID addOperandVar .)
    LTHAN           reduce using rule 90 (pexp -> ID addOperandVar .)
    GTHANEQ         reduce using rule 90 (pexp -> ID addOperandVar .)
    LTHANEQ         reduce using rule 90 (pexp -> ID addOperandVar .)
    DIFFERENT       reduce using rule 90 (pexp -> ID addOperandVar .)
    EQUALS          reduce using rule 90 (pexp -> ID addOperandVar .)
    AND             reduce using rule 90 (pexp -> ID addOperandVar .)
    OR              reduce using rule 90 (pexp -> ID addOperandVar .)
    RPARENTHESIS    reduce using rule 90 (pexp -> ID addOperandVar .)
    RSQRBRACKET     reduce using rule 90 (pexp -> ID addOperandVar .)
    COMMA           reduce using rule 90 (pexp -> ID addOperandVar .)
    SEMICOLON       reduce using rule 90 (pexp -> ID addOperandVar .)
    LBRACKET        reduce using rule 90 (pexp -> ID addOperandVar .)
    LSQRBRACKET     shift and go to state 188

    leearr                         shift and go to state 187

state 150

    (62) while -> WHILE whileOperator LPARENTHESIS expresion . RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RPARENTHESIS    shift and go to state 189


state 151

    (26) parameters3 -> COMMA tipo ID addParameter parameters3 .

    RPARENTHESIS    reduce using rule 26 (parameters3 -> COMMA tipo ID addParameter parameters3 .)


state 152

    (30) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET . endFunc funcion
    (115) endFunc -> .

    FUNCTION        reduce using rule 115 (endFunc -> .)
    MAIN            reduce using rule 115 (endFunc -> .)

    endFunc                        shift and go to state 190

state 153

    (33) retorno -> RETURN expresion . quadReturn SEMICOLON
    (117) quadReturn -> .

    SEMICOLON       reduce using rule 117 (quadReturn -> .)

    quadReturn                     shift and go to state 191

state 154

    (31) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc . funcion
    (30) funcion -> . FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion
    (31) funcion -> . FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion
    (32) funcion -> . empty
    (124) empty -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 124 (empty -> .)

    funcion                        shift and go to state 192
    empty                          shift and go to state 13

state 155

    (43) asignacion -> ID addId arreglo EQUAL addOperator . expresion quadEqual
    (63) expresion -> . nexp orQuad expresion1
    (66) nexp -> . comexp andQuad nexp1
    (69) comexp -> . sumexp compQuad compex1 compQuad
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    expresion                      shift and go to state 193
    nexp                           shift and go to state 114
    comexp                         shift and go to state 115
    sumexp                         shift and go to state 116
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 156

    (44) arreglo -> LSQRBRACKET expresion arrQuad . RSQRBRACKET

    RSQRBRACKET     shift and go to state 194


state 157

    (48) llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs . RPARENTHESIS callQuad

    RPARENTHESIS    shift and go to state 195


state 158

    (49) enviarAgrs -> expresion . quadArg enviarAgrs2
    (113) quadArg -> .

    COMMA           reduce using rule 113 (quadArg -> .)
    RPARENTHESIS    reduce using rule 113 (quadArg -> .)

    quadArg                        shift and go to state 196

state 159

    (50) enviarAgrs -> empty .

    RPARENTHESIS    reduce using rule 50 (enviarAgrs -> empty .)


state 160

    (53) lectura -> READ readOperator LPARENTHESIS expresion readQuad . RPARENTHESIS

    RPARENTHESIS    shift and go to state 197


state 161

    (55) escritura1 -> printOperator expresion printQuad . escritura2
    (56) escritura2 -> . COMMA escritura1
    (57) escritura2 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 199
    RPARENTHESIS    reduce using rule 124 (empty -> .)

    escritura2                     shift and go to state 198
    empty                          shift and go to state 200

state 162

    (58) for -> FOR forOperator asignacion COMMA TO . expresion forQuad LBRACKET estatuto RBRACKET endFor
    (63) expresion -> . nexp orQuad expresion1
    (66) nexp -> . comexp andQuad nexp1
    (69) comexp -> . sumexp compQuad compex1 compQuad
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    expresion                      shift and go to state 201
    nexp                           shift and go to state 114
    comexp                         shift and go to state 115
    sumexp                         shift and go to state 116
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 163

    (92) pexp -> LPARENTHESIS expresion RPARENTHESIS .

    MULTIPLICATION  reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    DIVISION        reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    PLUS            reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    MINUS           reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    GTHAN           reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    LTHAN           reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    GTHANEQ         reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    LTHANEQ         reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    DIFFERENT       reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    EQUALS          reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    AND             reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    OR              reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    RSQRBRACKET     reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    COMMA           reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    SEMICOLON       reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    LBRACKET        reduce using rule 92 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)


state 164

    (59) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad . THEN LBRACKET estatuto RBRACKET else endIf

    THEN            shift and go to state 202


state 165

    (63) expresion -> nexp orQuad expresion1 .

    RPARENTHESIS    reduce using rule 63 (expresion -> nexp orQuad expresion1 .)
    RSQRBRACKET     reduce using rule 63 (expresion -> nexp orQuad expresion1 .)
    COMMA           reduce using rule 63 (expresion -> nexp orQuad expresion1 .)
    SEMICOLON       reduce using rule 63 (expresion -> nexp orQuad expresion1 .)
    LBRACKET        reduce using rule 63 (expresion -> nexp orQuad expresion1 .)


state 166

    (64) expresion1 -> OR . addOperator expresion
    (118) addOperator -> .

    CTEI            reduce using rule 118 (addOperator -> .)
    CTEF            reduce using rule 118 (addOperator -> .)
    CTEC            reduce using rule 118 (addOperator -> .)
    CTESTRING       reduce using rule 118 (addOperator -> .)
    ID              reduce using rule 118 (addOperator -> .)
    LPARENTHESIS    reduce using rule 118 (addOperator -> .)

    addOperator                    shift and go to state 203

state 167

    (65) expresion1 -> empty .

    RPARENTHESIS    reduce using rule 65 (expresion1 -> empty .)
    RSQRBRACKET     reduce using rule 65 (expresion1 -> empty .)
    COMMA           reduce using rule 65 (expresion1 -> empty .)
    SEMICOLON       reduce using rule 65 (expresion1 -> empty .)
    LBRACKET        reduce using rule 65 (expresion1 -> empty .)


state 168

    (66) nexp -> comexp andQuad nexp1 .

    OR              reduce using rule 66 (nexp -> comexp andQuad nexp1 .)
    RPARENTHESIS    reduce using rule 66 (nexp -> comexp andQuad nexp1 .)
    RSQRBRACKET     reduce using rule 66 (nexp -> comexp andQuad nexp1 .)
    COMMA           reduce using rule 66 (nexp -> comexp andQuad nexp1 .)
    SEMICOLON       reduce using rule 66 (nexp -> comexp andQuad nexp1 .)
    LBRACKET        reduce using rule 66 (nexp -> comexp andQuad nexp1 .)


state 169

    (67) nexp1 -> AND . addOperator nexp
    (118) addOperator -> .

    CTEI            reduce using rule 118 (addOperator -> .)
    CTEF            reduce using rule 118 (addOperator -> .)
    CTEC            reduce using rule 118 (addOperator -> .)
    CTESTRING       reduce using rule 118 (addOperator -> .)
    ID              reduce using rule 118 (addOperator -> .)
    LPARENTHESIS    reduce using rule 118 (addOperator -> .)

    addOperator                    shift and go to state 204

state 170

    (68) nexp1 -> empty .

    OR              reduce using rule 68 (nexp1 -> empty .)
    RPARENTHESIS    reduce using rule 68 (nexp1 -> empty .)
    RSQRBRACKET     reduce using rule 68 (nexp1 -> empty .)
    COMMA           reduce using rule 68 (nexp1 -> empty .)
    SEMICOLON       reduce using rule 68 (nexp1 -> empty .)
    LBRACKET        reduce using rule 68 (nexp1 -> empty .)


state 171

    (69) comexp -> sumexp compQuad compex1 . compQuad
    (95) compQuad -> .

    AND             reduce using rule 95 (compQuad -> .)
    OR              reduce using rule 95 (compQuad -> .)
    RPARENTHESIS    reduce using rule 95 (compQuad -> .)
    RSQRBRACKET     reduce using rule 95 (compQuad -> .)
    COMMA           reduce using rule 95 (compQuad -> .)
    SEMICOLON       reduce using rule 95 (compQuad -> .)
    LBRACKET        reduce using rule 95 (compQuad -> .)

    compQuad                       shift and go to state 205

state 172

    (70) compex1 -> GTHAN . addOperator sumexp
    (118) addOperator -> .

    CTEI            reduce using rule 118 (addOperator -> .)
    CTEF            reduce using rule 118 (addOperator -> .)
    CTEC            reduce using rule 118 (addOperator -> .)
    CTESTRING       reduce using rule 118 (addOperator -> .)
    ID              reduce using rule 118 (addOperator -> .)
    LPARENTHESIS    reduce using rule 118 (addOperator -> .)

    addOperator                    shift and go to state 206

state 173

    (71) compex1 -> LTHAN . addOperator sumexp
    (118) addOperator -> .

    CTEI            reduce using rule 118 (addOperator -> .)
    CTEF            reduce using rule 118 (addOperator -> .)
    CTEC            reduce using rule 118 (addOperator -> .)
    CTESTRING       reduce using rule 118 (addOperator -> .)
    ID              reduce using rule 118 (addOperator -> .)
    LPARENTHESIS    reduce using rule 118 (addOperator -> .)

    addOperator                    shift and go to state 207

state 174

    (72) compex1 -> GTHANEQ . addOperator sumexp
    (118) addOperator -> .

    CTEI            reduce using rule 118 (addOperator -> .)
    CTEF            reduce using rule 118 (addOperator -> .)
    CTEC            reduce using rule 118 (addOperator -> .)
    CTESTRING       reduce using rule 118 (addOperator -> .)
    ID              reduce using rule 118 (addOperator -> .)
    LPARENTHESIS    reduce using rule 118 (addOperator -> .)

    addOperator                    shift and go to state 208

state 175

    (73) compex1 -> LTHANEQ . addOperator sumexp
    (118) addOperator -> .

    CTEI            reduce using rule 118 (addOperator -> .)
    CTEF            reduce using rule 118 (addOperator -> .)
    CTEC            reduce using rule 118 (addOperator -> .)
    CTESTRING       reduce using rule 118 (addOperator -> .)
    ID              reduce using rule 118 (addOperator -> .)
    LPARENTHESIS    reduce using rule 118 (addOperator -> .)

    addOperator                    shift and go to state 209

state 176

    (74) compex1 -> DIFFERENT . addOperator sumexp
    (118) addOperator -> .

    CTEI            reduce using rule 118 (addOperator -> .)
    CTEF            reduce using rule 118 (addOperator -> .)
    CTEC            reduce using rule 118 (addOperator -> .)
    CTESTRING       reduce using rule 118 (addOperator -> .)
    ID              reduce using rule 118 (addOperator -> .)
    LPARENTHESIS    reduce using rule 118 (addOperator -> .)

    addOperator                    shift and go to state 210

state 177

    (75) compex1 -> EQUALS . addOperator sumexp
    (118) addOperator -> .

    CTEI            reduce using rule 118 (addOperator -> .)
    CTEF            reduce using rule 118 (addOperator -> .)
    CTEC            reduce using rule 118 (addOperator -> .)
    CTESTRING       reduce using rule 118 (addOperator -> .)
    ID              reduce using rule 118 (addOperator -> .)
    LPARENTHESIS    reduce using rule 118 (addOperator -> .)

    addOperator                    shift and go to state 211

state 178

    (76) compex1 -> empty .

    AND             reduce using rule 76 (compex1 -> empty .)
    OR              reduce using rule 76 (compex1 -> empty .)
    RPARENTHESIS    reduce using rule 76 (compex1 -> empty .)
    RSQRBRACKET     reduce using rule 76 (compex1 -> empty .)
    COMMA           reduce using rule 76 (compex1 -> empty .)
    SEMICOLON       reduce using rule 76 (compex1 -> empty .)
    LBRACKET        reduce using rule 76 (compex1 -> empty .)


state 179

    (77) sumexp -> mulexp plusQuad sumexp1 .

    GTHAN           reduce using rule 77 (sumexp -> mulexp plusQuad sumexp1 .)
    LTHAN           reduce using rule 77 (sumexp -> mulexp plusQuad sumexp1 .)
    GTHANEQ         reduce using rule 77 (sumexp -> mulexp plusQuad sumexp1 .)
    LTHANEQ         reduce using rule 77 (sumexp -> mulexp plusQuad sumexp1 .)
    DIFFERENT       reduce using rule 77 (sumexp -> mulexp plusQuad sumexp1 .)
    EQUALS          reduce using rule 77 (sumexp -> mulexp plusQuad sumexp1 .)
    AND             reduce using rule 77 (sumexp -> mulexp plusQuad sumexp1 .)
    OR              reduce using rule 77 (sumexp -> mulexp plusQuad sumexp1 .)
    RPARENTHESIS    reduce using rule 77 (sumexp -> mulexp plusQuad sumexp1 .)
    RSQRBRACKET     reduce using rule 77 (sumexp -> mulexp plusQuad sumexp1 .)
    COMMA           reduce using rule 77 (sumexp -> mulexp plusQuad sumexp1 .)
    SEMICOLON       reduce using rule 77 (sumexp -> mulexp plusQuad sumexp1 .)
    LBRACKET        reduce using rule 77 (sumexp -> mulexp plusQuad sumexp1 .)


state 180

    (78) sumexp1 -> PLUS . addOperator sumexp
    (118) addOperator -> .

    CTEI            reduce using rule 118 (addOperator -> .)
    CTEF            reduce using rule 118 (addOperator -> .)
    CTEC            reduce using rule 118 (addOperator -> .)
    CTESTRING       reduce using rule 118 (addOperator -> .)
    ID              reduce using rule 118 (addOperator -> .)
    LPARENTHESIS    reduce using rule 118 (addOperator -> .)

    addOperator                    shift and go to state 212

state 181

    (79) sumexp1 -> MINUS . addOperator sumexp
    (118) addOperator -> .

    CTEI            reduce using rule 118 (addOperator -> .)
    CTEF            reduce using rule 118 (addOperator -> .)
    CTEC            reduce using rule 118 (addOperator -> .)
    CTESTRING       reduce using rule 118 (addOperator -> .)
    ID              reduce using rule 118 (addOperator -> .)
    LPARENTHESIS    reduce using rule 118 (addOperator -> .)

    addOperator                    shift and go to state 213

state 182

    (80) sumexp1 -> empty .

    GTHAN           reduce using rule 80 (sumexp1 -> empty .)
    LTHAN           reduce using rule 80 (sumexp1 -> empty .)
    GTHANEQ         reduce using rule 80 (sumexp1 -> empty .)
    LTHANEQ         reduce using rule 80 (sumexp1 -> empty .)
    DIFFERENT       reduce using rule 80 (sumexp1 -> empty .)
    EQUALS          reduce using rule 80 (sumexp1 -> empty .)
    AND             reduce using rule 80 (sumexp1 -> empty .)
    OR              reduce using rule 80 (sumexp1 -> empty .)
    RPARENTHESIS    reduce using rule 80 (sumexp1 -> empty .)
    RSQRBRACKET     reduce using rule 80 (sumexp1 -> empty .)
    COMMA           reduce using rule 80 (sumexp1 -> empty .)
    SEMICOLON       reduce using rule 80 (sumexp1 -> empty .)
    LBRACKET        reduce using rule 80 (sumexp1 -> empty .)


state 183

    (81) mulexp -> pexp multQuad mulexp1 .

    PLUS            reduce using rule 81 (mulexp -> pexp multQuad mulexp1 .)
    MINUS           reduce using rule 81 (mulexp -> pexp multQuad mulexp1 .)
    GTHAN           reduce using rule 81 (mulexp -> pexp multQuad mulexp1 .)
    LTHAN           reduce using rule 81 (mulexp -> pexp multQuad mulexp1 .)
    GTHANEQ         reduce using rule 81 (mulexp -> pexp multQuad mulexp1 .)
    LTHANEQ         reduce using rule 81 (mulexp -> pexp multQuad mulexp1 .)
    DIFFERENT       reduce using rule 81 (mulexp -> pexp multQuad mulexp1 .)
    EQUALS          reduce using rule 81 (mulexp -> pexp multQuad mulexp1 .)
    AND             reduce using rule 81 (mulexp -> pexp multQuad mulexp1 .)
    OR              reduce using rule 81 (mulexp -> pexp multQuad mulexp1 .)
    RPARENTHESIS    reduce using rule 81 (mulexp -> pexp multQuad mulexp1 .)
    RSQRBRACKET     reduce using rule 81 (mulexp -> pexp multQuad mulexp1 .)
    COMMA           reduce using rule 81 (mulexp -> pexp multQuad mulexp1 .)
    SEMICOLON       reduce using rule 81 (mulexp -> pexp multQuad mulexp1 .)
    LBRACKET        reduce using rule 81 (mulexp -> pexp multQuad mulexp1 .)


state 184

    (82) mulexp1 -> MULTIPLICATION . addOperator mulexp
    (118) addOperator -> .

    CTEI            reduce using rule 118 (addOperator -> .)
    CTEF            reduce using rule 118 (addOperator -> .)
    CTEC            reduce using rule 118 (addOperator -> .)
    CTESTRING       reduce using rule 118 (addOperator -> .)
    ID              reduce using rule 118 (addOperator -> .)
    LPARENTHESIS    reduce using rule 118 (addOperator -> .)

    addOperator                    shift and go to state 214

state 185

    (83) mulexp1 -> DIVISION . addOperator mulexp
    (118) addOperator -> .

    CTEI            reduce using rule 118 (addOperator -> .)
    CTEF            reduce using rule 118 (addOperator -> .)
    CTEC            reduce using rule 118 (addOperator -> .)
    CTESTRING       reduce using rule 118 (addOperator -> .)
    ID              reduce using rule 118 (addOperator -> .)
    LPARENTHESIS    reduce using rule 118 (addOperator -> .)

    addOperator                    shift and go to state 215

state 186

    (84) mulexp1 -> empty .

    PLUS            reduce using rule 84 (mulexp1 -> empty .)
    MINUS           reduce using rule 84 (mulexp1 -> empty .)
    GTHAN           reduce using rule 84 (mulexp1 -> empty .)
    LTHAN           reduce using rule 84 (mulexp1 -> empty .)
    GTHANEQ         reduce using rule 84 (mulexp1 -> empty .)
    LTHANEQ         reduce using rule 84 (mulexp1 -> empty .)
    DIFFERENT       reduce using rule 84 (mulexp1 -> empty .)
    EQUALS          reduce using rule 84 (mulexp1 -> empty .)
    AND             reduce using rule 84 (mulexp1 -> empty .)
    OR              reduce using rule 84 (mulexp1 -> empty .)
    RPARENTHESIS    reduce using rule 84 (mulexp1 -> empty .)
    RSQRBRACKET     reduce using rule 84 (mulexp1 -> empty .)
    COMMA           reduce using rule 84 (mulexp1 -> empty .)
    SEMICOLON       reduce using rule 84 (mulexp1 -> empty .)
    LBRACKET        reduce using rule 84 (mulexp1 -> empty .)


state 187

    (91) pexp -> ID addOperandVar leearr .

    MULTIPLICATION  reduce using rule 91 (pexp -> ID addOperandVar leearr .)
    DIVISION        reduce using rule 91 (pexp -> ID addOperandVar leearr .)
    PLUS            reduce using rule 91 (pexp -> ID addOperandVar leearr .)
    MINUS           reduce using rule 91 (pexp -> ID addOperandVar leearr .)
    GTHAN           reduce using rule 91 (pexp -> ID addOperandVar leearr .)
    LTHAN           reduce using rule 91 (pexp -> ID addOperandVar leearr .)
    GTHANEQ         reduce using rule 91 (pexp -> ID addOperandVar leearr .)
    LTHANEQ         reduce using rule 91 (pexp -> ID addOperandVar leearr .)
    DIFFERENT       reduce using rule 91 (pexp -> ID addOperandVar leearr .)
    EQUALS          reduce using rule 91 (pexp -> ID addOperandVar leearr .)
    AND             reduce using rule 91 (pexp -> ID addOperandVar leearr .)
    OR              reduce using rule 91 (pexp -> ID addOperandVar leearr .)
    RPARENTHESIS    reduce using rule 91 (pexp -> ID addOperandVar leearr .)
    RSQRBRACKET     reduce using rule 91 (pexp -> ID addOperandVar leearr .)
    COMMA           reduce using rule 91 (pexp -> ID addOperandVar leearr .)
    SEMICOLON       reduce using rule 91 (pexp -> ID addOperandVar leearr .)
    LBRACKET        reduce using rule 91 (pexp -> ID addOperandVar leearr .)


state 188

    (47) leearr -> LSQRBRACKET . expresion RSQRBRACKET
    (63) expresion -> . nexp orQuad expresion1
    (66) nexp -> . comexp andQuad nexp1
    (69) comexp -> . sumexp compQuad compex1 compQuad
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    expresion                      shift and go to state 216
    nexp                           shift and go to state 114
    comexp                         shift and go to state 115
    sumexp                         shift and go to state 116
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 189

    (62) while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS . whileQuad LBRACKET estatuto RBRACKET endWhile
    (107) whileQuad -> .

    LBRACKET        reduce using rule 107 (whileQuad -> .)

    whileQuad                      shift and go to state 217

state 190

    (30) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc . funcion
    (30) funcion -> . FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion
    (31) funcion -> . FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion
    (32) funcion -> . empty
    (124) empty -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 124 (empty -> .)

    funcion                        shift and go to state 218
    empty                          shift and go to state 13

state 191

    (33) retorno -> RETURN expresion quadReturn . SEMICOLON

    SEMICOLON       shift and go to state 219


state 192

    (31) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion .

    MAIN            reduce using rule 31 (funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion .)


state 193

    (43) asignacion -> ID addId arreglo EQUAL addOperator expresion . quadEqual
    (98) quadEqual -> .

    SEMICOLON       reduce using rule 98 (quadEqual -> .)
    COMMA           reduce using rule 98 (quadEqual -> .)

    quadEqual                      shift and go to state 220

state 194

    (44) arreglo -> LSQRBRACKET expresion arrQuad RSQRBRACKET .

    EQUAL           reduce using rule 44 (arreglo -> LSQRBRACKET expresion arrQuad RSQRBRACKET .)


state 195

    (48) llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS . callQuad
    (116) callQuad -> .

    SEMICOLON       reduce using rule 116 (callQuad -> .)
    MULTIPLICATION  reduce using rule 116 (callQuad -> .)
    DIVISION        reduce using rule 116 (callQuad -> .)
    PLUS            reduce using rule 116 (callQuad -> .)
    MINUS           reduce using rule 116 (callQuad -> .)
    GTHAN           reduce using rule 116 (callQuad -> .)
    LTHAN           reduce using rule 116 (callQuad -> .)
    GTHANEQ         reduce using rule 116 (callQuad -> .)
    LTHANEQ         reduce using rule 116 (callQuad -> .)
    DIFFERENT       reduce using rule 116 (callQuad -> .)
    EQUALS          reduce using rule 116 (callQuad -> .)
    AND             reduce using rule 116 (callQuad -> .)
    OR              reduce using rule 116 (callQuad -> .)
    RPARENTHESIS    reduce using rule 116 (callQuad -> .)
    RSQRBRACKET     reduce using rule 116 (callQuad -> .)
    COMMA           reduce using rule 116 (callQuad -> .)
    LBRACKET        reduce using rule 116 (callQuad -> .)

    callQuad                       shift and go to state 221

state 196

    (49) enviarAgrs -> expresion quadArg . enviarAgrs2
    (51) enviarAgrs2 -> . COMMA enviarAgrs
    (52) enviarAgrs2 -> . empty
    (124) empty -> .

    COMMA           shift and go to state 223
    RPARENTHESIS    reduce using rule 124 (empty -> .)

    enviarAgrs2                    shift and go to state 222
    empty                          shift and go to state 224

state 197

    (53) lectura -> READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS .

    SEMICOLON       reduce using rule 53 (lectura -> READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS .)


state 198

    (55) escritura1 -> printOperator expresion printQuad escritura2 .

    RPARENTHESIS    reduce using rule 55 (escritura1 -> printOperator expresion printQuad escritura2 .)


state 199

    (56) escritura2 -> COMMA . escritura1
    (55) escritura1 -> . printOperator expresion printQuad escritura2
    (99) printOperator -> .

    CTEI            reduce using rule 99 (printOperator -> .)
    CTEF            reduce using rule 99 (printOperator -> .)
    CTEC            reduce using rule 99 (printOperator -> .)
    CTESTRING       reduce using rule 99 (printOperator -> .)
    ID              reduce using rule 99 (printOperator -> .)
    LPARENTHESIS    reduce using rule 99 (printOperator -> .)

    escritura1                     shift and go to state 225
    printOperator                  shift and go to state 109

state 200

    (57) escritura2 -> empty .

    RPARENTHESIS    reduce using rule 57 (escritura2 -> empty .)


state 201

    (58) for -> FOR forOperator asignacion COMMA TO expresion . forQuad LBRACKET estatuto RBRACKET endFor
    (110) forQuad -> .

    LBRACKET        reduce using rule 110 (forQuad -> .)

    forQuad                        shift and go to state 226

state 202

    (59) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN . LBRACKET estatuto RBRACKET else endIf

    LBRACKET        shift and go to state 227


state 203

    (64) expresion1 -> OR addOperator . expresion
    (63) expresion -> . nexp orQuad expresion1
    (66) nexp -> . comexp andQuad nexp1
    (69) comexp -> . sumexp compQuad compex1 compQuad
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    expresion                      shift and go to state 228
    nexp                           shift and go to state 114
    comexp                         shift and go to state 115
    sumexp                         shift and go to state 116
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 204

    (67) nexp1 -> AND addOperator . nexp
    (66) nexp -> . comexp andQuad nexp1
    (69) comexp -> . sumexp compQuad compex1 compQuad
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    nexp                           shift and go to state 229
    comexp                         shift and go to state 115
    sumexp                         shift and go to state 116
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 205

    (69) comexp -> sumexp compQuad compex1 compQuad .

    AND             reduce using rule 69 (comexp -> sumexp compQuad compex1 compQuad .)
    OR              reduce using rule 69 (comexp -> sumexp compQuad compex1 compQuad .)
    RPARENTHESIS    reduce using rule 69 (comexp -> sumexp compQuad compex1 compQuad .)
    RSQRBRACKET     reduce using rule 69 (comexp -> sumexp compQuad compex1 compQuad .)
    COMMA           reduce using rule 69 (comexp -> sumexp compQuad compex1 compQuad .)
    SEMICOLON       reduce using rule 69 (comexp -> sumexp compQuad compex1 compQuad .)
    LBRACKET        reduce using rule 69 (comexp -> sumexp compQuad compex1 compQuad .)


state 206

    (70) compex1 -> GTHAN addOperator . sumexp
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    sumexp                         shift and go to state 230
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 207

    (71) compex1 -> LTHAN addOperator . sumexp
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    sumexp                         shift and go to state 231
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 208

    (72) compex1 -> GTHANEQ addOperator . sumexp
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    sumexp                         shift and go to state 232
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 209

    (73) compex1 -> LTHANEQ addOperator . sumexp
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    sumexp                         shift and go to state 233
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 210

    (74) compex1 -> DIFFERENT addOperator . sumexp
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    sumexp                         shift and go to state 234
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 211

    (75) compex1 -> EQUALS addOperator . sumexp
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    sumexp                         shift and go to state 235
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 212

    (78) sumexp1 -> PLUS addOperator . sumexp
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    sumexp                         shift and go to state 236
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 213

    (79) sumexp1 -> MINUS addOperator . sumexp
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    sumexp                         shift and go to state 237
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 214

    (82) mulexp1 -> MULTIPLICATION addOperator . mulexp
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    mulexp                         shift and go to state 238
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 215

    (83) mulexp1 -> DIVISION addOperator . mulexp
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    mulexp                         shift and go to state 239
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 216

    (47) leearr -> LSQRBRACKET expresion . RSQRBRACKET

    RSQRBRACKET     shift and go to state 240


state 217

    (62) while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad . LBRACKET estatuto RBRACKET endWhile

    LBRACKET        shift and go to state 241


state 218

    (30) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion .

    MAIN            reduce using rule 30 (funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion .)


state 219

    (33) retorno -> RETURN expresion quadReturn SEMICOLON .

    RBRACKET        reduce using rule 33 (retorno -> RETURN expresion quadReturn SEMICOLON .)


state 220

    (43) asignacion -> ID addId arreglo EQUAL addOperator expresion quadEqual .

    SEMICOLON       reduce using rule 43 (asignacion -> ID addId arreglo EQUAL addOperator expresion quadEqual .)
    COMMA           reduce using rule 43 (asignacion -> ID addId arreglo EQUAL addOperator expresion quadEqual .)


state 221

    (48) llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .

    SEMICOLON       reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    MULTIPLICATION  reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    DIVISION        reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    PLUS            reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    MINUS           reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    GTHAN           reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    LTHAN           reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    GTHANEQ         reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    LTHANEQ         reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    DIFFERENT       reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    EQUALS          reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    AND             reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    OR              reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    RPARENTHESIS    reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    RSQRBRACKET     reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    COMMA           reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    LBRACKET        reduce using rule 48 (llamada -> ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)


state 222

    (49) enviarAgrs -> expresion quadArg enviarAgrs2 .

    RPARENTHESIS    reduce using rule 49 (enviarAgrs -> expresion quadArg enviarAgrs2 .)


state 223

    (51) enviarAgrs2 -> COMMA . enviarAgrs
    (49) enviarAgrs -> . expresion quadArg enviarAgrs2
    (50) enviarAgrs -> . empty
    (63) expresion -> . nexp orQuad expresion1
    (124) empty -> .
    (66) nexp -> . comexp andQuad nexp1
    (69) comexp -> . sumexp compQuad compex1 compQuad
    (77) sumexp -> . mulexp plusQuad sumexp1
    (81) mulexp -> . pexp multQuad mulexp1
    (85) pexp -> . CTEI addOperandCte
    (86) pexp -> . CTEF addOperandCte
    (87) pexp -> . CTEC addOperandCte
    (88) pexp -> . CTESTRING addOperandCte
    (89) pexp -> . llamada
    (90) pexp -> . ID addOperandVar
    (91) pexp -> . ID addOperandVar leearr
    (92) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    RPARENTHESIS    reduce using rule 124 (empty -> .)
    CTEI            shift and go to state 119
    CTEF            shift and go to state 120
    CTEC            shift and go to state 121
    CTESTRING       shift and go to state 122
    ID              shift and go to state 124
    LPARENTHESIS    shift and go to state 112

    enviarAgrs                     shift and go to state 242
    expresion                      shift and go to state 158
    empty                          shift and go to state 159
    nexp                           shift and go to state 114
    comexp                         shift and go to state 115
    sumexp                         shift and go to state 116
    mulexp                         shift and go to state 117
    pexp                           shift and go to state 118
    llamada                        shift and go to state 123

state 224

    (52) enviarAgrs2 -> empty .

    RPARENTHESIS    reduce using rule 52 (enviarAgrs2 -> empty .)


state 225

    (56) escritura2 -> COMMA escritura1 .

    RPARENTHESIS    reduce using rule 56 (escritura2 -> COMMA escritura1 .)


state 226

    (58) for -> FOR forOperator asignacion COMMA TO expresion forQuad . LBRACKET estatuto RBRACKET endFor

    LBRACKET        shift and go to state 243


state 227

    (59) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET . estatuto RBRACKET else endIf
    (34) estatuto -> . estatuto2 estatuto
    (35) estatuto -> . empty
    (36) estatuto2 -> . asignacion SEMICOLON
    (37) estatuto2 -> . llamada SEMICOLON
    (38) estatuto2 -> . lectura SEMICOLON
    (39) estatuto2 -> . escritura SEMICOLON
    (40) estatuto2 -> . for
    (41) estatuto2 -> . if
    (42) estatuto2 -> . while
    (124) empty -> .
    (43) asignacion -> . ID addId arreglo EQUAL addOperator expresion quadEqual
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (53) lectura -> . READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (54) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (58) for -> . FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (59) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (62) while -> . WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RBRACKET        reduce using rule 124 (empty -> .)
    ID              shift and go to state 76
    READ            shift and go to state 77
    PRINT           shift and go to state 78
    FOR             shift and go to state 79
    IF              shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 244
    estatuto2                      shift and go to state 67
    empty                          shift and go to state 68
    asignacion                     shift and go to state 69
    llamada                        shift and go to state 70
    lectura                        shift and go to state 71
    escritura                      shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    while                          shift and go to state 75

state 228

    (64) expresion1 -> OR addOperator expresion .

    RPARENTHESIS    reduce using rule 64 (expresion1 -> OR addOperator expresion .)
    RSQRBRACKET     reduce using rule 64 (expresion1 -> OR addOperator expresion .)
    COMMA           reduce using rule 64 (expresion1 -> OR addOperator expresion .)
    SEMICOLON       reduce using rule 64 (expresion1 -> OR addOperator expresion .)
    LBRACKET        reduce using rule 64 (expresion1 -> OR addOperator expresion .)


state 229

    (67) nexp1 -> AND addOperator nexp .

    OR              reduce using rule 67 (nexp1 -> AND addOperator nexp .)
    RPARENTHESIS    reduce using rule 67 (nexp1 -> AND addOperator nexp .)
    RSQRBRACKET     reduce using rule 67 (nexp1 -> AND addOperator nexp .)
    COMMA           reduce using rule 67 (nexp1 -> AND addOperator nexp .)
    SEMICOLON       reduce using rule 67 (nexp1 -> AND addOperator nexp .)
    LBRACKET        reduce using rule 67 (nexp1 -> AND addOperator nexp .)


state 230

    (70) compex1 -> GTHAN addOperator sumexp .

    AND             reduce using rule 70 (compex1 -> GTHAN addOperator sumexp .)
    OR              reduce using rule 70 (compex1 -> GTHAN addOperator sumexp .)
    RPARENTHESIS    reduce using rule 70 (compex1 -> GTHAN addOperator sumexp .)
    RSQRBRACKET     reduce using rule 70 (compex1 -> GTHAN addOperator sumexp .)
    COMMA           reduce using rule 70 (compex1 -> GTHAN addOperator sumexp .)
    SEMICOLON       reduce using rule 70 (compex1 -> GTHAN addOperator sumexp .)
    LBRACKET        reduce using rule 70 (compex1 -> GTHAN addOperator sumexp .)


state 231

    (71) compex1 -> LTHAN addOperator sumexp .

    AND             reduce using rule 71 (compex1 -> LTHAN addOperator sumexp .)
    OR              reduce using rule 71 (compex1 -> LTHAN addOperator sumexp .)
    RPARENTHESIS    reduce using rule 71 (compex1 -> LTHAN addOperator sumexp .)
    RSQRBRACKET     reduce using rule 71 (compex1 -> LTHAN addOperator sumexp .)
    COMMA           reduce using rule 71 (compex1 -> LTHAN addOperator sumexp .)
    SEMICOLON       reduce using rule 71 (compex1 -> LTHAN addOperator sumexp .)
    LBRACKET        reduce using rule 71 (compex1 -> LTHAN addOperator sumexp .)


state 232

    (72) compex1 -> GTHANEQ addOperator sumexp .

    AND             reduce using rule 72 (compex1 -> GTHANEQ addOperator sumexp .)
    OR              reduce using rule 72 (compex1 -> GTHANEQ addOperator sumexp .)
    RPARENTHESIS    reduce using rule 72 (compex1 -> GTHANEQ addOperator sumexp .)
    RSQRBRACKET     reduce using rule 72 (compex1 -> GTHANEQ addOperator sumexp .)
    COMMA           reduce using rule 72 (compex1 -> GTHANEQ addOperator sumexp .)
    SEMICOLON       reduce using rule 72 (compex1 -> GTHANEQ addOperator sumexp .)
    LBRACKET        reduce using rule 72 (compex1 -> GTHANEQ addOperator sumexp .)


state 233

    (73) compex1 -> LTHANEQ addOperator sumexp .

    AND             reduce using rule 73 (compex1 -> LTHANEQ addOperator sumexp .)
    OR              reduce using rule 73 (compex1 -> LTHANEQ addOperator sumexp .)
    RPARENTHESIS    reduce using rule 73 (compex1 -> LTHANEQ addOperator sumexp .)
    RSQRBRACKET     reduce using rule 73 (compex1 -> LTHANEQ addOperator sumexp .)
    COMMA           reduce using rule 73 (compex1 -> LTHANEQ addOperator sumexp .)
    SEMICOLON       reduce using rule 73 (compex1 -> LTHANEQ addOperator sumexp .)
    LBRACKET        reduce using rule 73 (compex1 -> LTHANEQ addOperator sumexp .)


state 234

    (74) compex1 -> DIFFERENT addOperator sumexp .

    AND             reduce using rule 74 (compex1 -> DIFFERENT addOperator sumexp .)
    OR              reduce using rule 74 (compex1 -> DIFFERENT addOperator sumexp .)
    RPARENTHESIS    reduce using rule 74 (compex1 -> DIFFERENT addOperator sumexp .)
    RSQRBRACKET     reduce using rule 74 (compex1 -> DIFFERENT addOperator sumexp .)
    COMMA           reduce using rule 74 (compex1 -> DIFFERENT addOperator sumexp .)
    SEMICOLON       reduce using rule 74 (compex1 -> DIFFERENT addOperator sumexp .)
    LBRACKET        reduce using rule 74 (compex1 -> DIFFERENT addOperator sumexp .)


state 235

    (75) compex1 -> EQUALS addOperator sumexp .

    AND             reduce using rule 75 (compex1 -> EQUALS addOperator sumexp .)
    OR              reduce using rule 75 (compex1 -> EQUALS addOperator sumexp .)
    RPARENTHESIS    reduce using rule 75 (compex1 -> EQUALS addOperator sumexp .)
    RSQRBRACKET     reduce using rule 75 (compex1 -> EQUALS addOperator sumexp .)
    COMMA           reduce using rule 75 (compex1 -> EQUALS addOperator sumexp .)
    SEMICOLON       reduce using rule 75 (compex1 -> EQUALS addOperator sumexp .)
    LBRACKET        reduce using rule 75 (compex1 -> EQUALS addOperator sumexp .)


state 236

    (78) sumexp1 -> PLUS addOperator sumexp .

    GTHAN           reduce using rule 78 (sumexp1 -> PLUS addOperator sumexp .)
    LTHAN           reduce using rule 78 (sumexp1 -> PLUS addOperator sumexp .)
    GTHANEQ         reduce using rule 78 (sumexp1 -> PLUS addOperator sumexp .)
    LTHANEQ         reduce using rule 78 (sumexp1 -> PLUS addOperator sumexp .)
    DIFFERENT       reduce using rule 78 (sumexp1 -> PLUS addOperator sumexp .)
    EQUALS          reduce using rule 78 (sumexp1 -> PLUS addOperator sumexp .)
    AND             reduce using rule 78 (sumexp1 -> PLUS addOperator sumexp .)
    OR              reduce using rule 78 (sumexp1 -> PLUS addOperator sumexp .)
    RPARENTHESIS    reduce using rule 78 (sumexp1 -> PLUS addOperator sumexp .)
    RSQRBRACKET     reduce using rule 78 (sumexp1 -> PLUS addOperator sumexp .)
    COMMA           reduce using rule 78 (sumexp1 -> PLUS addOperator sumexp .)
    SEMICOLON       reduce using rule 78 (sumexp1 -> PLUS addOperator sumexp .)
    LBRACKET        reduce using rule 78 (sumexp1 -> PLUS addOperator sumexp .)


state 237

    (79) sumexp1 -> MINUS addOperator sumexp .

    GTHAN           reduce using rule 79 (sumexp1 -> MINUS addOperator sumexp .)
    LTHAN           reduce using rule 79 (sumexp1 -> MINUS addOperator sumexp .)
    GTHANEQ         reduce using rule 79 (sumexp1 -> MINUS addOperator sumexp .)
    LTHANEQ         reduce using rule 79 (sumexp1 -> MINUS addOperator sumexp .)
    DIFFERENT       reduce using rule 79 (sumexp1 -> MINUS addOperator sumexp .)
    EQUALS          reduce using rule 79 (sumexp1 -> MINUS addOperator sumexp .)
    AND             reduce using rule 79 (sumexp1 -> MINUS addOperator sumexp .)
    OR              reduce using rule 79 (sumexp1 -> MINUS addOperator sumexp .)
    RPARENTHESIS    reduce using rule 79 (sumexp1 -> MINUS addOperator sumexp .)
    RSQRBRACKET     reduce using rule 79 (sumexp1 -> MINUS addOperator sumexp .)
    COMMA           reduce using rule 79 (sumexp1 -> MINUS addOperator sumexp .)
    SEMICOLON       reduce using rule 79 (sumexp1 -> MINUS addOperator sumexp .)
    LBRACKET        reduce using rule 79 (sumexp1 -> MINUS addOperator sumexp .)


state 238

    (82) mulexp1 -> MULTIPLICATION addOperator mulexp .

    PLUS            reduce using rule 82 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    MINUS           reduce using rule 82 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    GTHAN           reduce using rule 82 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    LTHAN           reduce using rule 82 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    GTHANEQ         reduce using rule 82 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    LTHANEQ         reduce using rule 82 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    DIFFERENT       reduce using rule 82 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    EQUALS          reduce using rule 82 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    AND             reduce using rule 82 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    OR              reduce using rule 82 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    RPARENTHESIS    reduce using rule 82 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    RSQRBRACKET     reduce using rule 82 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    COMMA           reduce using rule 82 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    SEMICOLON       reduce using rule 82 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    LBRACKET        reduce using rule 82 (mulexp1 -> MULTIPLICATION addOperator mulexp .)


state 239

    (83) mulexp1 -> DIVISION addOperator mulexp .

    PLUS            reduce using rule 83 (mulexp1 -> DIVISION addOperator mulexp .)
    MINUS           reduce using rule 83 (mulexp1 -> DIVISION addOperator mulexp .)
    GTHAN           reduce using rule 83 (mulexp1 -> DIVISION addOperator mulexp .)
    LTHAN           reduce using rule 83 (mulexp1 -> DIVISION addOperator mulexp .)
    GTHANEQ         reduce using rule 83 (mulexp1 -> DIVISION addOperator mulexp .)
    LTHANEQ         reduce using rule 83 (mulexp1 -> DIVISION addOperator mulexp .)
    DIFFERENT       reduce using rule 83 (mulexp1 -> DIVISION addOperator mulexp .)
    EQUALS          reduce using rule 83 (mulexp1 -> DIVISION addOperator mulexp .)
    AND             reduce using rule 83 (mulexp1 -> DIVISION addOperator mulexp .)
    OR              reduce using rule 83 (mulexp1 -> DIVISION addOperator mulexp .)
    RPARENTHESIS    reduce using rule 83 (mulexp1 -> DIVISION addOperator mulexp .)
    RSQRBRACKET     reduce using rule 83 (mulexp1 -> DIVISION addOperator mulexp .)
    COMMA           reduce using rule 83 (mulexp1 -> DIVISION addOperator mulexp .)
    SEMICOLON       reduce using rule 83 (mulexp1 -> DIVISION addOperator mulexp .)
    LBRACKET        reduce using rule 83 (mulexp1 -> DIVISION addOperator mulexp .)


state 240

    (47) leearr -> LSQRBRACKET expresion RSQRBRACKET .

    MULTIPLICATION  reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)
    DIVISION        reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)
    PLUS            reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)
    MINUS           reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)
    GTHAN           reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)
    LTHAN           reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)
    GTHANEQ         reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)
    LTHANEQ         reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)
    DIFFERENT       reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)
    EQUALS          reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)
    AND             reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)
    OR              reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)
    RPARENTHESIS    reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)
    RSQRBRACKET     reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)
    COMMA           reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)
    SEMICOLON       reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)
    LBRACKET        reduce using rule 47 (leearr -> LSQRBRACKET expresion RSQRBRACKET .)


state 241

    (62) while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET . estatuto RBRACKET endWhile
    (34) estatuto -> . estatuto2 estatuto
    (35) estatuto -> . empty
    (36) estatuto2 -> . asignacion SEMICOLON
    (37) estatuto2 -> . llamada SEMICOLON
    (38) estatuto2 -> . lectura SEMICOLON
    (39) estatuto2 -> . escritura SEMICOLON
    (40) estatuto2 -> . for
    (41) estatuto2 -> . if
    (42) estatuto2 -> . while
    (124) empty -> .
    (43) asignacion -> . ID addId arreglo EQUAL addOperator expresion quadEqual
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (53) lectura -> . READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (54) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (58) for -> . FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (59) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (62) while -> . WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RBRACKET        reduce using rule 124 (empty -> .)
    ID              shift and go to state 76
    READ            shift and go to state 77
    PRINT           shift and go to state 78
    FOR             shift and go to state 79
    IF              shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 245
    estatuto2                      shift and go to state 67
    empty                          shift and go to state 68
    asignacion                     shift and go to state 69
    llamada                        shift and go to state 70
    lectura                        shift and go to state 71
    escritura                      shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    while                          shift and go to state 75

state 242

    (51) enviarAgrs2 -> COMMA enviarAgrs .

    RPARENTHESIS    reduce using rule 51 (enviarAgrs2 -> COMMA enviarAgrs .)


state 243

    (58) for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET . estatuto RBRACKET endFor
    (34) estatuto -> . estatuto2 estatuto
    (35) estatuto -> . empty
    (36) estatuto2 -> . asignacion SEMICOLON
    (37) estatuto2 -> . llamada SEMICOLON
    (38) estatuto2 -> . lectura SEMICOLON
    (39) estatuto2 -> . escritura SEMICOLON
    (40) estatuto2 -> . for
    (41) estatuto2 -> . if
    (42) estatuto2 -> . while
    (124) empty -> .
    (43) asignacion -> . ID addId arreglo EQUAL addOperator expresion quadEqual
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (53) lectura -> . READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (54) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (58) for -> . FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (59) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (62) while -> . WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RBRACKET        reduce using rule 124 (empty -> .)
    ID              shift and go to state 76
    READ            shift and go to state 77
    PRINT           shift and go to state 78
    FOR             shift and go to state 79
    IF              shift and go to state 80
    WHILE           shift and go to state 81

    asignacion                     shift and go to state 69
    estatuto                       shift and go to state 246
    estatuto2                      shift and go to state 67
    empty                          shift and go to state 68
    llamada                        shift and go to state 70
    lectura                        shift and go to state 71
    escritura                      shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    while                          shift and go to state 75

state 244

    (59) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto . RBRACKET else endIf

    RBRACKET        shift and go to state 247


state 245

    (62) while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto . RBRACKET endWhile

    RBRACKET        shift and go to state 248


state 246

    (58) for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto . RBRACKET endFor

    RBRACKET        shift and go to state 249


state 247

    (59) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET . else endIf
    (60) else -> . ELSE elseQuad LBRACKET estatuto RBRACKET
    (61) else -> . empty
    (124) empty -> .

    ELSE            shift and go to state 251
    ID              reduce using rule 124 (empty -> .)
    READ            reduce using rule 124 (empty -> .)
    PRINT           reduce using rule 124 (empty -> .)
    FOR             reduce using rule 124 (empty -> .)
    IF              reduce using rule 124 (empty -> .)
    WHILE           reduce using rule 124 (empty -> .)
    RBRACKET        reduce using rule 124 (empty -> .)
    RETURN          reduce using rule 124 (empty -> .)

    else                           shift and go to state 250
    empty                          shift and go to state 252

state 248

    (62) while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET . endWhile
    (108) endWhile -> .

    ID              reduce using rule 108 (endWhile -> .)
    READ            reduce using rule 108 (endWhile -> .)
    PRINT           reduce using rule 108 (endWhile -> .)
    FOR             reduce using rule 108 (endWhile -> .)
    IF              reduce using rule 108 (endWhile -> .)
    WHILE           reduce using rule 108 (endWhile -> .)
    RBRACKET        reduce using rule 108 (endWhile -> .)
    RETURN          reduce using rule 108 (endWhile -> .)

    endWhile                       shift and go to state 253

state 249

    (58) for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET . endFor
    (111) endFor -> .

    ID              reduce using rule 111 (endFor -> .)
    READ            reduce using rule 111 (endFor -> .)
    PRINT           reduce using rule 111 (endFor -> .)
    FOR             reduce using rule 111 (endFor -> .)
    IF              reduce using rule 111 (endFor -> .)
    WHILE           reduce using rule 111 (endFor -> .)
    RBRACKET        reduce using rule 111 (endFor -> .)
    RETURN          reduce using rule 111 (endFor -> .)

    endFor                         shift and go to state 254

state 250

    (59) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else . endIf
    (105) endIf -> .

    ID              reduce using rule 105 (endIf -> .)
    READ            reduce using rule 105 (endIf -> .)
    PRINT           reduce using rule 105 (endIf -> .)
    FOR             reduce using rule 105 (endIf -> .)
    IF              reduce using rule 105 (endIf -> .)
    WHILE           reduce using rule 105 (endIf -> .)
    RBRACKET        reduce using rule 105 (endIf -> .)
    RETURN          reduce using rule 105 (endIf -> .)

    endIf                          shift and go to state 255

state 251

    (60) else -> ELSE . elseQuad LBRACKET estatuto RBRACKET
    (104) elseQuad -> .

    LBRACKET        reduce using rule 104 (elseQuad -> .)

    elseQuad                       shift and go to state 256

state 252

    (61) else -> empty .

    ID              reduce using rule 61 (else -> empty .)
    READ            reduce using rule 61 (else -> empty .)
    PRINT           reduce using rule 61 (else -> empty .)
    FOR             reduce using rule 61 (else -> empty .)
    IF              reduce using rule 61 (else -> empty .)
    WHILE           reduce using rule 61 (else -> empty .)
    RBRACKET        reduce using rule 61 (else -> empty .)
    RETURN          reduce using rule 61 (else -> empty .)


state 253

    (62) while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .

    ID              reduce using rule 62 (while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .)
    READ            reduce using rule 62 (while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .)
    PRINT           reduce using rule 62 (while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .)
    FOR             reduce using rule 62 (while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .)
    IF              reduce using rule 62 (while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .)
    WHILE           reduce using rule 62 (while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .)
    RBRACKET        reduce using rule 62 (while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .)
    RETURN          reduce using rule 62 (while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .)


state 254

    (58) for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .

    ID              reduce using rule 58 (for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .)
    READ            reduce using rule 58 (for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .)
    PRINT           reduce using rule 58 (for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .)
    FOR             reduce using rule 58 (for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .)
    IF              reduce using rule 58 (for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .)
    WHILE           reduce using rule 58 (for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .)
    RBRACKET        reduce using rule 58 (for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .)
    RETURN          reduce using rule 58 (for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .)


state 255

    (59) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .

    ID              reduce using rule 59 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .)
    READ            reduce using rule 59 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .)
    PRINT           reduce using rule 59 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .)
    FOR             reduce using rule 59 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .)
    IF              reduce using rule 59 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .)
    WHILE           reduce using rule 59 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .)
    RBRACKET        reduce using rule 59 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .)
    RETURN          reduce using rule 59 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .)


state 256

    (60) else -> ELSE elseQuad . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 257


state 257

    (60) else -> ELSE elseQuad LBRACKET . estatuto RBRACKET
    (34) estatuto -> . estatuto2 estatuto
    (35) estatuto -> . empty
    (36) estatuto2 -> . asignacion SEMICOLON
    (37) estatuto2 -> . llamada SEMICOLON
    (38) estatuto2 -> . lectura SEMICOLON
    (39) estatuto2 -> . escritura SEMICOLON
    (40) estatuto2 -> . for
    (41) estatuto2 -> . if
    (42) estatuto2 -> . while
    (124) empty -> .
    (43) asignacion -> . ID addId arreglo EQUAL addOperator expresion quadEqual
    (48) llamada -> . ID addOperandFunc requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (53) lectura -> . READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (54) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (58) for -> . FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (59) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (62) while -> . WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RBRACKET        reduce using rule 124 (empty -> .)
    ID              shift and go to state 76
    READ            shift and go to state 77
    PRINT           shift and go to state 78
    FOR             shift and go to state 79
    IF              shift and go to state 80
    WHILE           shift and go to state 81

    estatuto                       shift and go to state 258
    estatuto2                      shift and go to state 67
    empty                          shift and go to state 68
    asignacion                     shift and go to state 69
    llamada                        shift and go to state 70
    lectura                        shift and go to state 71
    escritura                      shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    while                          shift and go to state 75

state 258

    (60) else -> ELSE elseQuad LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 259


state 259

    (60) else -> ELSE elseQuad LBRACKET estatuto RBRACKET .

    ID              reduce using rule 60 (else -> ELSE elseQuad LBRACKET estatuto RBRACKET .)
    READ            reduce using rule 60 (else -> ELSE elseQuad LBRACKET estatuto RBRACKET .)
    PRINT           reduce using rule 60 (else -> ELSE elseQuad LBRACKET estatuto RBRACKET .)
    FOR             reduce using rule 60 (else -> ELSE elseQuad LBRACKET estatuto RBRACKET .)
    IF              reduce using rule 60 (else -> ELSE elseQuad LBRACKET estatuto RBRACKET .)
    WHILE           reduce using rule 60 (else -> ELSE elseQuad LBRACKET estatuto RBRACKET .)
    RBRACKET        reduce using rule 60 (else -> ELSE elseQuad LBRACKET estatuto RBRACKET .)
    RETURN          reduce using rule 60 (else -> ELSE elseQuad LBRACKET estatuto RBRACKET .)


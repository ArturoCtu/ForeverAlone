Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FROM

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID addProgram SEMICOLON programa1 END
Rule 2     addProgram -> <empty>
Rule 3     programa1 -> vars funcion principal
Rule 4     principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
Rule 5     addMain -> <empty>
Rule 6     vars -> VAR vars1
Rule 7     vars -> empty
Rule 8     vars1 -> tipo vars2 SEMICOLON varsadd
Rule 9     vars2 -> ID addVariable arr vars3
Rule 10    vars3 -> COMMA vars2
Rule 11    vars3 -> empty
Rule 12    varsadd -> vars1
Rule 13    varsadd -> empty
Rule 14    tipo -> INT
Rule 15    tipo -> FLOAT
Rule 16    tipo -> CHAR
Rule 17    tipo -> STRING
Rule 18    arr -> LSQRBRACKET CTEI RSQRBRACKET
Rule 19    arr -> empty
Rule 20    parameters -> parameters2
Rule 21    parameters -> empty
Rule 22    parameters2 -> tipo ID addParameter
Rule 23    parameters2 -> tipo ID addParameter parameters3
Rule 24    parameters3 -> COMMA ID addParameter parameters3
Rule 25    parameters3 -> COMMA tipo ID addParameter parameters3
Rule 26    parameters3 -> COMMA ID addParameter
Rule 27    parameters3 -> COMMA tipo ID addParameter
Rule 28    addParameter -> <empty>
Rule 29    funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion
Rule 30    funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion
Rule 31    funcion -> empty
Rule 32    retorno -> RETURN expresion quadReturn SEMICOLON
Rule 33    estatuto -> estatuto2 estatuto
Rule 34    estatuto -> empty
Rule 35    estatuto2 -> asignacion SEMICOLON
Rule 36    estatuto2 -> llamada SEMICOLON
Rule 37    estatuto2 -> lectura SEMICOLON
Rule 38    estatuto2 -> escritura SEMICOLON
Rule 39    estatuto2 -> for
Rule 40    estatuto2 -> if
Rule 41    estatuto2 -> while
Rule 42    asignacion -> ID addId arr EQUAL addOperator expresion quadEqual
Rule 43    llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
Rule 44    enviarAgrs -> expresion quadArg enviarAgrs2
Rule 45    enviarAgrs -> empty
Rule 46    enviarAgrs2 -> COMMA enviarAgrs
Rule 47    enviarAgrs2 -> empty
Rule 48    lectura -> READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
Rule 49    escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS
Rule 50    escritura1 -> printOperator expresion printQuad escritura2
Rule 51    escritura2 -> COMMA escritura1
Rule 52    escritura2 -> empty
Rule 53    for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
Rule 54    if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
Rule 55    else -> ELSE elseQuad LBRACKET estatuto RBRACKET
Rule 56    else -> empty
Rule 57    while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile
Rule 58    expresion -> nexp orQuad expresion1
Rule 59    expresion1 -> OR addOperator expresion
Rule 60    expresion1 -> empty
Rule 61    nexp -> comexp andQuad nexp1
Rule 62    nexp1 -> AND addOperator nexp
Rule 63    nexp1 -> empty
Rule 64    comexp -> sumexp compQuad compex1 compQuad
Rule 65    compex1 -> GTHAN addOperator sumexp
Rule 66    compex1 -> LTHAN addOperator sumexp
Rule 67    compex1 -> GTHANEQ addOperator sumexp
Rule 68    compex1 -> LTHANEQ addOperator sumexp
Rule 69    compex1 -> DIFFERENT addOperator sumexp
Rule 70    compex1 -> EQUALS addOperator sumexp
Rule 71    compex1 -> empty
Rule 72    sumexp -> mulexp plusQuad sumexp1
Rule 73    sumexp1 -> PLUS addOperator sumexp
Rule 74    sumexp1 -> MINUS addOperator sumexp
Rule 75    sumexp1 -> empty
Rule 76    mulexp -> pexp multQuad mulexp1
Rule 77    mulexp1 -> MULTIPLICATION addOperator mulexp
Rule 78    mulexp1 -> DIVISION addOperator mulexp
Rule 79    mulexp1 -> empty
Rule 80    pexp -> CTEI addOperandCte
Rule 81    pexp -> CTEF addOperandCte
Rule 82    pexp -> CTEC addOperandCte
Rule 83    pexp -> CTESTRING addOperandCte
Rule 84    pexp -> llamada
Rule 85    pexp -> ID addOperandVar
Rule 86    pexp -> LPARENTHESIS expresion RPARENTHESIS
Rule 87    orQuad -> <empty>
Rule 88    andQuad -> <empty>
Rule 89    compQuad -> <empty>
Rule 90    multQuad -> <empty>
Rule 91    plusQuad -> <empty>
Rule 92    quadEqual -> <empty>
Rule 93    printOperator -> <empty>
Rule 94    printQuad -> <empty>
Rule 95    readOperator -> <empty>
Rule 96    readQuad -> <empty>
Rule 97    ifQuad -> <empty>
Rule 98    elseQuad -> <empty>
Rule 99    endIf -> <empty>
Rule 100   whileOperator -> <empty>
Rule 101   whileQuad -> <empty>
Rule 102   endWhile -> <empty>
Rule 103   forOperator -> <empty>
Rule 104   forQuad -> <empty>
Rule 105   endFor -> <empty>
Rule 106   requestCallMemory -> <empty>
Rule 107   quadArg -> <empty>
Rule 108   addFunction -> <empty>
Rule 109   endFunc -> <empty>
Rule 110   callQuad -> <empty>
Rule 111   quadReturn -> <empty>
Rule 112   addOperator -> <empty>
Rule 113   addVariable -> <empty>
Rule 114   addOperandVar -> <empty>
Rule 115   addOperandCte -> <empty>
Rule 116   addId -> <empty>
Rule 117   empty -> <empty>

Terminals, with rules where they appear

AND                  : 62
CHAR                 : 16
COMMA                : 10 24 25 26 27 46 51 53
CTEC                 : 82
CTEF                 : 81
CTEI                 : 18 80
CTESTRING            : 83
DIFFERENT            : 69
DIVISION             : 78
ELSE                 : 55
END                  : 1
EQUAL                : 42
EQUALS               : 70
FLOAT                : 15
FOR                  : 53
FROM                 : 
FUNCTION             : 29 30
GTHAN                : 65
GTHANEQ              : 67
ID                   : 1 9 22 23 24 25 26 27 29 30 42 43 85
IF                   : 54
INT                  : 14
LBRACKET             : 4 29 30 53 54 55 57
LPARENTHESIS         : 4 29 30 43 48 49 54 57 86
LSQRBRACKET          : 18
LTHAN                : 66
LTHANEQ              : 68
MAIN                 : 4
MINUS                : 74
MULTIPLICATION       : 77
OR                   : 59
PLUS                 : 73
PRINT                : 49
PROGRAM              : 1
RBRACKET             : 4 29 30 53 54 55 57
READ                 : 48
RETURN               : 32
RPARENTHESIS         : 4 29 30 43 48 49 54 57 86
RSQRBRACKET          : 18
SEMICOLON            : 1 8 32 35 36 37 38
STRING               : 17
THEN                 : 54
TO                   : 53
VAR                  : 6
VOID                 : 30
WHILE                : 57
error                : 

Nonterminals, with rules where they appear

addFunction          : 29 30
addId                : 42
addMain              : 4
addOperandCte        : 80 81 82 83
addOperandVar        : 85
addOperator          : 42 59 62 65 66 67 68 69 70 73 74 77 78
addParameter         : 22 23 24 25 26 27
addProgram           : 1
addVariable          : 9
andQuad              : 61
arr                  : 9 42
asignacion           : 35 53
callQuad             : 43
comexp               : 61
compQuad             : 64 64
compex1              : 64
else                 : 54
elseQuad             : 55
empty                : 7 11 13 19 21 31 34 45 47 52 56 60 63 71 75 79
endFor               : 53
endFunc              : 29 30
endIf                : 54
endWhile             : 57
enviarAgrs           : 43 46
enviarAgrs2          : 44
escritura            : 38
escritura1           : 49 51
escritura2           : 50
estatuto             : 4 29 30 33 53 54 55 57
estatuto2            : 33
expresion            : 32 42 44 48 50 53 54 57 59 86
expresion1           : 58
for                  : 39
forOperator          : 53
forQuad              : 53
funcion              : 3 29 30
if                   : 40
ifQuad               : 54
lectura              : 37
llamada              : 36 84
mulexp               : 72 77 78
mulexp1              : 76
multQuad             : 76
nexp                 : 58 62
nexp1                : 61
orQuad               : 58
parameters           : 4 29 30
parameters2          : 20
parameters3          : 23 24 25
pexp                 : 76
plusQuad             : 72
principal            : 3
printOperator        : 50
printQuad            : 50
programa             : 0
programa1            : 1
quadArg              : 44
quadEqual            : 42
quadReturn           : 32
readOperator         : 48
readQuad             : 48
requestCallMemory    : 43
retorno              : 29
sumexp               : 64 65 66 67 68 69 70 73 74
sumexp1              : 72
tipo                 : 8 22 23 25 27 29
vars                 : 3 4 29 30
vars1                : 6 12
vars2                : 8 10
vars3                : 9
varsadd              : 8
while                : 41
whileOperator        : 57
whileQuad            : 57

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID addProgram SEMICOLON programa1 END

    PROGRAM         shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAM . ID addProgram SEMICOLON programa1 END

    ID              shift and go to state 3


state 3

    (1) programa -> PROGRAM ID . addProgram SEMICOLON programa1 END
    (2) addProgram -> .

    SEMICOLON       reduce using rule 2 (addProgram -> .)

    addProgram                     shift and go to state 4

state 4

    (1) programa -> PROGRAM ID addProgram . SEMICOLON programa1 END

    SEMICOLON       shift and go to state 5


state 5

    (1) programa -> PROGRAM ID addProgram SEMICOLON . programa1 END
    (3) programa1 -> . vars funcion principal
    (6) vars -> . VAR vars1
    (7) vars -> . empty
    (117) empty -> .

    VAR             shift and go to state 8
    FUNCTION        reduce using rule 117 (empty -> .)
    MAIN            reduce using rule 117 (empty -> .)

    programa1                      shift and go to state 6
    vars                           shift and go to state 7
    empty                          shift and go to state 9

state 6

    (1) programa -> PROGRAM ID addProgram SEMICOLON programa1 . END

    END             shift and go to state 10


state 7

    (3) programa1 -> vars . funcion principal
    (29) funcion -> . FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion
    (30) funcion -> . FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion
    (31) funcion -> . empty
    (117) empty -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 117 (empty -> .)

    funcion                        shift and go to state 11
    empty                          shift and go to state 13

state 8

    (6) vars -> VAR . vars1
    (8) vars1 -> . tipo vars2 SEMICOLON varsadd
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    vars1                          shift and go to state 14
    tipo                           shift and go to state 15

state 9

    (7) vars -> empty .

    FUNCTION        reduce using rule 7 (vars -> empty .)
    MAIN            reduce using rule 7 (vars -> empty .)
    LBRACKET        reduce using rule 7 (vars -> empty .)


state 10

    (1) programa -> PROGRAM ID addProgram SEMICOLON programa1 END .

    $end            reduce using rule 1 (programa -> PROGRAM ID addProgram SEMICOLON programa1 END .)


state 11

    (3) programa1 -> vars funcion . principal
    (4) principal -> . MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET

    MAIN            shift and go to state 21

    principal                      shift and go to state 20

state 12

    (29) funcion -> FUNCTION . tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion
    (30) funcion -> FUNCTION . VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    VOID            shift and go to state 23
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 22

state 13

    (31) funcion -> empty .

    MAIN            reduce using rule 31 (funcion -> empty .)


state 14

    (6) vars -> VAR vars1 .

    FUNCTION        reduce using rule 6 (vars -> VAR vars1 .)
    MAIN            reduce using rule 6 (vars -> VAR vars1 .)
    LBRACKET        reduce using rule 6 (vars -> VAR vars1 .)


state 15

    (8) vars1 -> tipo . vars2 SEMICOLON varsadd
    (9) vars2 -> . ID addVariable arr vars3

    ID              shift and go to state 25

    vars2                          shift and go to state 24

state 16

    (14) tipo -> INT .

    ID              reduce using rule 14 (tipo -> INT .)


state 17

    (15) tipo -> FLOAT .

    ID              reduce using rule 15 (tipo -> FLOAT .)


state 18

    (16) tipo -> CHAR .

    ID              reduce using rule 16 (tipo -> CHAR .)


state 19

    (17) tipo -> STRING .

    ID              reduce using rule 17 (tipo -> STRING .)


state 20

    (3) programa1 -> vars funcion principal .

    END             reduce using rule 3 (programa1 -> vars funcion principal .)


state 21

    (4) principal -> MAIN . addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
    (5) addMain -> .

    LPARENTHESIS    reduce using rule 5 (addMain -> .)

    addMain                        shift and go to state 26

state 22

    (29) funcion -> FUNCTION tipo . ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion

    ID              shift and go to state 27


state 23

    (30) funcion -> FUNCTION VOID . ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion

    ID              shift and go to state 28


state 24

    (8) vars1 -> tipo vars2 . SEMICOLON varsadd

    SEMICOLON       shift and go to state 29


state 25

    (9) vars2 -> ID . addVariable arr vars3
    (113) addVariable -> .

    LSQRBRACKET     reduce using rule 113 (addVariable -> .)
    COMMA           reduce using rule 113 (addVariable -> .)
    SEMICOLON       reduce using rule 113 (addVariable -> .)

    addVariable                    shift and go to state 30

state 26

    (4) principal -> MAIN addMain . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET

    LPARENTHESIS    shift and go to state 31


state 27

    (29) funcion -> FUNCTION tipo ID . addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion
    (108) addFunction -> .

    LPARENTHESIS    reduce using rule 108 (addFunction -> .)

    addFunction                    shift and go to state 32

state 28

    (30) funcion -> FUNCTION VOID ID . addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion
    (108) addFunction -> .

    LPARENTHESIS    reduce using rule 108 (addFunction -> .)

    addFunction                    shift and go to state 33

state 29

    (8) vars1 -> tipo vars2 SEMICOLON . varsadd
    (12) varsadd -> . vars1
    (13) varsadd -> . empty
    (8) vars1 -> . tipo vars2 SEMICOLON varsadd
    (117) empty -> .
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    FUNCTION        reduce using rule 117 (empty -> .)
    MAIN            reduce using rule 117 (empty -> .)
    LBRACKET        reduce using rule 117 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 15
    varsadd                        shift and go to state 34
    vars1                          shift and go to state 35
    empty                          shift and go to state 36

state 30

    (9) vars2 -> ID addVariable . arr vars3
    (18) arr -> . LSQRBRACKET CTEI RSQRBRACKET
    (19) arr -> . empty
    (117) empty -> .

    LSQRBRACKET     shift and go to state 38
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)

    arr                            shift and go to state 37
    empty                          shift and go to state 39

state 31

    (4) principal -> MAIN addMain LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET
    (20) parameters -> . parameters2
    (21) parameters -> . empty
    (22) parameters2 -> . tipo ID addParameter
    (23) parameters2 -> . tipo ID addParameter parameters3
    (117) empty -> .
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    RPARENTHESIS    reduce using rule 117 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    parameters                     shift and go to state 40
    parameters2                    shift and go to state 41
    empty                          shift and go to state 42
    tipo                           shift and go to state 43

state 32

    (29) funcion -> FUNCTION tipo ID addFunction . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion

    LPARENTHESIS    shift and go to state 44


state 33

    (30) funcion -> FUNCTION VOID ID addFunction . LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion

    LPARENTHESIS    shift and go to state 45


state 34

    (8) vars1 -> tipo vars2 SEMICOLON varsadd .

    FUNCTION        reduce using rule 8 (vars1 -> tipo vars2 SEMICOLON varsadd .)
    MAIN            reduce using rule 8 (vars1 -> tipo vars2 SEMICOLON varsadd .)
    LBRACKET        reduce using rule 8 (vars1 -> tipo vars2 SEMICOLON varsadd .)


state 35

    (12) varsadd -> vars1 .

    FUNCTION        reduce using rule 12 (varsadd -> vars1 .)
    MAIN            reduce using rule 12 (varsadd -> vars1 .)
    LBRACKET        reduce using rule 12 (varsadd -> vars1 .)


state 36

    (13) varsadd -> empty .

    FUNCTION        reduce using rule 13 (varsadd -> empty .)
    MAIN            reduce using rule 13 (varsadd -> empty .)
    LBRACKET        reduce using rule 13 (varsadd -> empty .)


state 37

    (9) vars2 -> ID addVariable arr . vars3
    (10) vars3 -> . COMMA vars2
    (11) vars3 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 47
    SEMICOLON       reduce using rule 117 (empty -> .)

    vars3                          shift and go to state 46
    empty                          shift and go to state 48

state 38

    (18) arr -> LSQRBRACKET . CTEI RSQRBRACKET

    CTEI            shift and go to state 49


state 39

    (19) arr -> empty .

    COMMA           reduce using rule 19 (arr -> empty .)
    SEMICOLON       reduce using rule 19 (arr -> empty .)
    EQUAL           reduce using rule 19 (arr -> empty .)


state 40

    (4) principal -> MAIN addMain LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto RBRACKET

    RPARENTHESIS    shift and go to state 50


state 41

    (20) parameters -> parameters2 .

    RPARENTHESIS    reduce using rule 20 (parameters -> parameters2 .)


state 42

    (21) parameters -> empty .

    RPARENTHESIS    reduce using rule 21 (parameters -> empty .)


state 43

    (22) parameters2 -> tipo . ID addParameter
    (23) parameters2 -> tipo . ID addParameter parameters3

    ID              shift and go to state 51


state 44

    (29) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion
    (20) parameters -> . parameters2
    (21) parameters -> . empty
    (22) parameters2 -> . tipo ID addParameter
    (23) parameters2 -> . tipo ID addParameter parameters3
    (117) empty -> .
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    RPARENTHESIS    reduce using rule 117 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 43
    parameters                     shift and go to state 52
    parameters2                    shift and go to state 41
    empty                          shift and go to state 42

state 45

    (30) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS . parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion
    (20) parameters -> . parameters2
    (21) parameters -> . empty
    (22) parameters2 -> . tipo ID addParameter
    (23) parameters2 -> . tipo ID addParameter parameters3
    (117) empty -> .
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    RPARENTHESIS    reduce using rule 117 (empty -> .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    parameters                     shift and go to state 53
    parameters2                    shift and go to state 41
    empty                          shift and go to state 42
    tipo                           shift and go to state 43

state 46

    (9) vars2 -> ID addVariable arr vars3 .

    SEMICOLON       reduce using rule 9 (vars2 -> ID addVariable arr vars3 .)


state 47

    (10) vars3 -> COMMA . vars2
    (9) vars2 -> . ID addVariable arr vars3

    ID              shift and go to state 25

    vars2                          shift and go to state 54

state 48

    (11) vars3 -> empty .

    SEMICOLON       reduce using rule 11 (vars3 -> empty .)


state 49

    (18) arr -> LSQRBRACKET CTEI . RSQRBRACKET

    RSQRBRACKET     shift and go to state 55


state 50

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto RBRACKET
    (6) vars -> . VAR vars1
    (7) vars -> . empty
    (117) empty -> .

    VAR             shift and go to state 8
    LBRACKET        reduce using rule 117 (empty -> .)

    vars                           shift and go to state 56
    empty                          shift and go to state 9

state 51

    (22) parameters2 -> tipo ID . addParameter
    (23) parameters2 -> tipo ID . addParameter parameters3
    (28) addParameter -> .

    COMMA           reduce using rule 28 (addParameter -> .)
    RPARENTHESIS    reduce using rule 28 (addParameter -> .)

    addParameter                   shift and go to state 57

state 52

    (29) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion

    RPARENTHESIS    shift and go to state 58


state 53

    (30) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters . RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion

    RPARENTHESIS    shift and go to state 59


state 54

    (10) vars3 -> COMMA vars2 .

    SEMICOLON       reduce using rule 10 (vars3 -> COMMA vars2 .)


state 55

    (18) arr -> LSQRBRACKET CTEI RSQRBRACKET .

    COMMA           reduce using rule 18 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)
    SEMICOLON       reduce using rule 18 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)
    EQUAL           reduce using rule 18 (arr -> LSQRBRACKET CTEI RSQRBRACKET .)


state 56

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 60


state 57

    (22) parameters2 -> tipo ID addParameter .
    (23) parameters2 -> tipo ID addParameter . parameters3
    (24) parameters3 -> . COMMA ID addParameter parameters3
    (25) parameters3 -> . COMMA tipo ID addParameter parameters3
    (26) parameters3 -> . COMMA ID addParameter
    (27) parameters3 -> . COMMA tipo ID addParameter

    RPARENTHESIS    reduce using rule 22 (parameters2 -> tipo ID addParameter .)
    COMMA           shift and go to state 62

    parameters3                    shift and go to state 61

state 58

    (29) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto retorno RBRACKET endFunc funcion
    (6) vars -> . VAR vars1
    (7) vars -> . empty
    (117) empty -> .

    VAR             shift and go to state 8
    LBRACKET        reduce using rule 117 (empty -> .)

    vars                           shift and go to state 63
    empty                          shift and go to state 9

state 59

    (30) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS . vars LBRACKET estatuto RBRACKET endFunc funcion
    (6) vars -> . VAR vars1
    (7) vars -> . empty
    (117) empty -> .

    VAR             shift and go to state 8
    LBRACKET        reduce using rule 117 (empty -> .)

    vars                           shift and go to state 64
    empty                          shift and go to state 9

state 60

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto RBRACKET
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (117) empty -> .
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (48) lectura -> . READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (49) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (53) for -> . FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (54) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (57) while -> . WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RBRACKET        reduce using rule 117 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 65
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 61

    (23) parameters2 -> tipo ID addParameter parameters3 .

    RPARENTHESIS    reduce using rule 23 (parameters2 -> tipo ID addParameter parameters3 .)


state 62

    (24) parameters3 -> COMMA . ID addParameter parameters3
    (25) parameters3 -> COMMA . tipo ID addParameter parameters3
    (26) parameters3 -> COMMA . ID addParameter
    (27) parameters3 -> COMMA . tipo ID addParameter
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR
    (17) tipo -> . STRING

    ID              shift and go to state 81
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19

    tipo                           shift and go to state 82

state 63

    (29) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto retorno RBRACKET endFunc funcion

    LBRACKET        shift and go to state 83


state 64

    (30) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars . LBRACKET estatuto RBRACKET endFunc funcion

    LBRACKET        shift and go to state 84


state 65

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 85


state 66

    (33) estatuto -> estatuto2 . estatuto
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (117) empty -> .
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (48) lectura -> . READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (49) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (53) for -> . FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (54) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (57) while -> . WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RBRACKET        reduce using rule 117 (empty -> .)
    RETURN          reduce using rule 117 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto2                      shift and go to state 66
    estatuto                       shift and go to state 86
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 67

    (34) estatuto -> empty .

    RBRACKET        reduce using rule 34 (estatuto -> empty .)
    RETURN          reduce using rule 34 (estatuto -> empty .)


state 68

    (35) estatuto2 -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 87


state 69

    (36) estatuto2 -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 88


state 70

    (37) estatuto2 -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 89


state 71

    (38) estatuto2 -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 90


state 72

    (39) estatuto2 -> for .

    ID              reduce using rule 39 (estatuto2 -> for .)
    READ            reduce using rule 39 (estatuto2 -> for .)
    PRINT           reduce using rule 39 (estatuto2 -> for .)
    FOR             reduce using rule 39 (estatuto2 -> for .)
    IF              reduce using rule 39 (estatuto2 -> for .)
    WHILE           reduce using rule 39 (estatuto2 -> for .)
    RBRACKET        reduce using rule 39 (estatuto2 -> for .)
    RETURN          reduce using rule 39 (estatuto2 -> for .)


state 73

    (40) estatuto2 -> if .

    ID              reduce using rule 40 (estatuto2 -> if .)
    READ            reduce using rule 40 (estatuto2 -> if .)
    PRINT           reduce using rule 40 (estatuto2 -> if .)
    FOR             reduce using rule 40 (estatuto2 -> if .)
    IF              reduce using rule 40 (estatuto2 -> if .)
    WHILE           reduce using rule 40 (estatuto2 -> if .)
    RBRACKET        reduce using rule 40 (estatuto2 -> if .)
    RETURN          reduce using rule 40 (estatuto2 -> if .)


state 74

    (41) estatuto2 -> while .

    ID              reduce using rule 41 (estatuto2 -> while .)
    READ            reduce using rule 41 (estatuto2 -> while .)
    PRINT           reduce using rule 41 (estatuto2 -> while .)
    FOR             reduce using rule 41 (estatuto2 -> while .)
    IF              reduce using rule 41 (estatuto2 -> while .)
    WHILE           reduce using rule 41 (estatuto2 -> while .)
    RBRACKET        reduce using rule 41 (estatuto2 -> while .)
    RETURN          reduce using rule 41 (estatuto2 -> while .)


state 75

    (42) asignacion -> ID . addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> ID . requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (116) addId -> .
    (106) requestCallMemory -> .

    LSQRBRACKET     reduce using rule 116 (addId -> .)
    EQUAL           reduce using rule 116 (addId -> .)
    LPARENTHESIS    reduce using rule 106 (requestCallMemory -> .)

    addId                          shift and go to state 91
    requestCallMemory              shift and go to state 92

state 76

    (48) lectura -> READ . readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (95) readOperator -> .

    LPARENTHESIS    reduce using rule 95 (readOperator -> .)

    readOperator                   shift and go to state 93

state 77

    (49) escritura -> PRINT . LPARENTHESIS escritura1 RPARENTHESIS

    LPARENTHESIS    shift and go to state 94


state 78

    (53) for -> FOR . forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (103) forOperator -> .

    ID              reduce using rule 103 (forOperator -> .)

    forOperator                    shift and go to state 95

state 79

    (54) if -> IF . LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf

    LPARENTHESIS    shift and go to state 96


state 80

    (57) while -> WHILE . whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile
    (100) whileOperator -> .

    LPARENTHESIS    reduce using rule 100 (whileOperator -> .)

    whileOperator                  shift and go to state 97

state 81

    (24) parameters3 -> COMMA ID . addParameter parameters3
    (26) parameters3 -> COMMA ID . addParameter
    (28) addParameter -> .

    COMMA           reduce using rule 28 (addParameter -> .)
    RPARENTHESIS    reduce using rule 28 (addParameter -> .)

    addParameter                   shift and go to state 98

state 82

    (25) parameters3 -> COMMA tipo . ID addParameter parameters3
    (27) parameters3 -> COMMA tipo . ID addParameter

    ID              shift and go to state 99


state 83

    (29) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto retorno RBRACKET endFunc funcion
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (117) empty -> .
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (48) lectura -> . READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (49) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (53) for -> . FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (54) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (57) while -> . WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RETURN          reduce using rule 117 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 100
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 84

    (30) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET . estatuto RBRACKET endFunc funcion
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (117) empty -> .
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (48) lectura -> . READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (49) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (53) for -> . FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (54) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (57) while -> . WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RBRACKET        reduce using rule 117 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 101
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 85

    (4) principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET .

    END             reduce using rule 4 (principal -> MAIN addMain LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET .)


state 86

    (33) estatuto -> estatuto2 estatuto .

    RBRACKET        reduce using rule 33 (estatuto -> estatuto2 estatuto .)
    RETURN          reduce using rule 33 (estatuto -> estatuto2 estatuto .)


state 87

    (35) estatuto2 -> asignacion SEMICOLON .

    ID              reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    READ            reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    PRINT           reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    FOR             reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    IF              reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    WHILE           reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    RBRACKET        reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)
    RETURN          reduce using rule 35 (estatuto2 -> asignacion SEMICOLON .)


state 88

    (36) estatuto2 -> llamada SEMICOLON .

    ID              reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    READ            reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    PRINT           reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    FOR             reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    IF              reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    WHILE           reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    RBRACKET        reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)
    RETURN          reduce using rule 36 (estatuto2 -> llamada SEMICOLON .)


state 89

    (37) estatuto2 -> lectura SEMICOLON .

    ID              reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    READ            reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    PRINT           reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    FOR             reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    IF              reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    WHILE           reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    RBRACKET        reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)
    RETURN          reduce using rule 37 (estatuto2 -> lectura SEMICOLON .)


state 90

    (38) estatuto2 -> escritura SEMICOLON .

    ID              reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    READ            reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    PRINT           reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    FOR             reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    IF              reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    WHILE           reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    RBRACKET        reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)
    RETURN          reduce using rule 38 (estatuto2 -> escritura SEMICOLON .)


state 91

    (42) asignacion -> ID addId . arr EQUAL addOperator expresion quadEqual
    (18) arr -> . LSQRBRACKET CTEI RSQRBRACKET
    (19) arr -> . empty
    (117) empty -> .

    LSQRBRACKET     shift and go to state 38
    EQUAL           reduce using rule 117 (empty -> .)

    arr                            shift and go to state 102
    empty                          shift and go to state 39

state 92

    (43) llamada -> ID requestCallMemory . LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    LPARENTHESIS    shift and go to state 103


state 93

    (48) lectura -> READ readOperator . LPARENTHESIS expresion readQuad RPARENTHESIS

    LPARENTHESIS    shift and go to state 104


state 94

    (49) escritura -> PRINT LPARENTHESIS . escritura1 RPARENTHESIS
    (50) escritura1 -> . printOperator expresion printQuad escritura2
    (93) printOperator -> .

    CTEI            reduce using rule 93 (printOperator -> .)
    CTEF            reduce using rule 93 (printOperator -> .)
    CTEC            reduce using rule 93 (printOperator -> .)
    CTESTRING       reduce using rule 93 (printOperator -> .)
    ID              reduce using rule 93 (printOperator -> .)
    LPARENTHESIS    reduce using rule 93 (printOperator -> .)

    escritura1                     shift and go to state 105
    printOperator                  shift and go to state 106

state 95

    (53) for -> FOR forOperator . asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual

    ID              shift and go to state 108

    asignacion                     shift and go to state 107

state 96

    (54) if -> IF LPARENTHESIS . expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (58) expresion -> . nexp orQuad expresion1
    (61) nexp -> . comexp andQuad nexp1
    (64) comexp -> . sumexp compQuad compex1 compQuad
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    expresion                      shift and go to state 110
    nexp                           shift and go to state 111
    comexp                         shift and go to state 112
    sumexp                         shift and go to state 113
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 97

    (57) while -> WHILE whileOperator . LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    LPARENTHESIS    shift and go to state 122


state 98

    (24) parameters3 -> COMMA ID addParameter . parameters3
    (26) parameters3 -> COMMA ID addParameter .
    (24) parameters3 -> . COMMA ID addParameter parameters3
    (25) parameters3 -> . COMMA tipo ID addParameter parameters3
    (26) parameters3 -> . COMMA ID addParameter
    (27) parameters3 -> . COMMA tipo ID addParameter

    RPARENTHESIS    reduce using rule 26 (parameters3 -> COMMA ID addParameter .)
    COMMA           shift and go to state 62

    parameters3                    shift and go to state 123

state 99

    (25) parameters3 -> COMMA tipo ID . addParameter parameters3
    (27) parameters3 -> COMMA tipo ID . addParameter
    (28) addParameter -> .

    COMMA           reduce using rule 28 (addParameter -> .)
    RPARENTHESIS    reduce using rule 28 (addParameter -> .)

    addParameter                   shift and go to state 124

state 100

    (29) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . retorno RBRACKET endFunc funcion
    (32) retorno -> . RETURN expresion quadReturn SEMICOLON

    RETURN          shift and go to state 126

    retorno                        shift and go to state 125

state 101

    (30) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto . RBRACKET endFunc funcion

    RBRACKET        shift and go to state 127


state 102

    (42) asignacion -> ID addId arr . EQUAL addOperator expresion quadEqual

    EQUAL           shift and go to state 128


state 103

    (43) llamada -> ID requestCallMemory LPARENTHESIS . enviarAgrs RPARENTHESIS callQuad
    (44) enviarAgrs -> . expresion quadArg enviarAgrs2
    (45) enviarAgrs -> . empty
    (58) expresion -> . nexp orQuad expresion1
    (117) empty -> .
    (61) nexp -> . comexp andQuad nexp1
    (64) comexp -> . sumexp compQuad compex1 compQuad
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    RPARENTHESIS    reduce using rule 117 (empty -> .)
    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    enviarAgrs                     shift and go to state 129
    expresion                      shift and go to state 130
    empty                          shift and go to state 131
    nexp                           shift and go to state 111
    comexp                         shift and go to state 112
    sumexp                         shift and go to state 113
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 104

    (48) lectura -> READ readOperator LPARENTHESIS . expresion readQuad RPARENTHESIS
    (58) expresion -> . nexp orQuad expresion1
    (61) nexp -> . comexp andQuad nexp1
    (64) comexp -> . sumexp compQuad compex1 compQuad
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    expresion                      shift and go to state 132
    nexp                           shift and go to state 111
    comexp                         shift and go to state 112
    sumexp                         shift and go to state 113
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 105

    (49) escritura -> PRINT LPARENTHESIS escritura1 . RPARENTHESIS

    RPARENTHESIS    shift and go to state 133


state 106

    (50) escritura1 -> printOperator . expresion printQuad escritura2
    (58) expresion -> . nexp orQuad expresion1
    (61) nexp -> . comexp andQuad nexp1
    (64) comexp -> . sumexp compQuad compex1 compQuad
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    expresion                      shift and go to state 134
    nexp                           shift and go to state 111
    comexp                         shift and go to state 112
    sumexp                         shift and go to state 113
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 107

    (53) for -> FOR forOperator asignacion . COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor

    COMMA           shift and go to state 135


state 108

    (42) asignacion -> ID . addId arr EQUAL addOperator expresion quadEqual
    (116) addId -> .

    LSQRBRACKET     reduce using rule 116 (addId -> .)
    EQUAL           reduce using rule 116 (addId -> .)

    addId                          shift and go to state 91

state 109

    (86) pexp -> LPARENTHESIS . expresion RPARENTHESIS
    (58) expresion -> . nexp orQuad expresion1
    (61) nexp -> . comexp andQuad nexp1
    (64) comexp -> . sumexp compQuad compex1 compQuad
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    expresion                      shift and go to state 136
    nexp                           shift and go to state 111
    comexp                         shift and go to state 112
    sumexp                         shift and go to state 113
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 110

    (54) if -> IF LPARENTHESIS expresion . RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf

    RPARENTHESIS    shift and go to state 137


state 111

    (58) expresion -> nexp . orQuad expresion1
    (87) orQuad -> .

    OR              reduce using rule 87 (orQuad -> .)
    RPARENTHESIS    reduce using rule 87 (orQuad -> .)
    COMMA           reduce using rule 87 (orQuad -> .)
    SEMICOLON       reduce using rule 87 (orQuad -> .)
    LBRACKET        reduce using rule 87 (orQuad -> .)

    orQuad                         shift and go to state 138

state 112

    (61) nexp -> comexp . andQuad nexp1
    (88) andQuad -> .

    AND             reduce using rule 88 (andQuad -> .)
    OR              reduce using rule 88 (andQuad -> .)
    RPARENTHESIS    reduce using rule 88 (andQuad -> .)
    COMMA           reduce using rule 88 (andQuad -> .)
    SEMICOLON       reduce using rule 88 (andQuad -> .)
    LBRACKET        reduce using rule 88 (andQuad -> .)

    andQuad                        shift and go to state 139

state 113

    (64) comexp -> sumexp . compQuad compex1 compQuad
    (89) compQuad -> .

    GTHAN           reduce using rule 89 (compQuad -> .)
    LTHAN           reduce using rule 89 (compQuad -> .)
    GTHANEQ         reduce using rule 89 (compQuad -> .)
    LTHANEQ         reduce using rule 89 (compQuad -> .)
    DIFFERENT       reduce using rule 89 (compQuad -> .)
    EQUALS          reduce using rule 89 (compQuad -> .)
    AND             reduce using rule 89 (compQuad -> .)
    OR              reduce using rule 89 (compQuad -> .)
    RPARENTHESIS    reduce using rule 89 (compQuad -> .)
    COMMA           reduce using rule 89 (compQuad -> .)
    SEMICOLON       reduce using rule 89 (compQuad -> .)
    LBRACKET        reduce using rule 89 (compQuad -> .)

    compQuad                       shift and go to state 140

state 114

    (72) sumexp -> mulexp . plusQuad sumexp1
    (91) plusQuad -> .

    PLUS            reduce using rule 91 (plusQuad -> .)
    MINUS           reduce using rule 91 (plusQuad -> .)
    GTHAN           reduce using rule 91 (plusQuad -> .)
    LTHAN           reduce using rule 91 (plusQuad -> .)
    GTHANEQ         reduce using rule 91 (plusQuad -> .)
    LTHANEQ         reduce using rule 91 (plusQuad -> .)
    DIFFERENT       reduce using rule 91 (plusQuad -> .)
    EQUALS          reduce using rule 91 (plusQuad -> .)
    AND             reduce using rule 91 (plusQuad -> .)
    OR              reduce using rule 91 (plusQuad -> .)
    RPARENTHESIS    reduce using rule 91 (plusQuad -> .)
    COMMA           reduce using rule 91 (plusQuad -> .)
    SEMICOLON       reduce using rule 91 (plusQuad -> .)
    LBRACKET        reduce using rule 91 (plusQuad -> .)

    plusQuad                       shift and go to state 141

state 115

    (76) mulexp -> pexp . multQuad mulexp1
    (90) multQuad -> .

    MULTIPLICATION  reduce using rule 90 (multQuad -> .)
    DIVISION        reduce using rule 90 (multQuad -> .)
    PLUS            reduce using rule 90 (multQuad -> .)
    MINUS           reduce using rule 90 (multQuad -> .)
    GTHAN           reduce using rule 90 (multQuad -> .)
    LTHAN           reduce using rule 90 (multQuad -> .)
    GTHANEQ         reduce using rule 90 (multQuad -> .)
    LTHANEQ         reduce using rule 90 (multQuad -> .)
    DIFFERENT       reduce using rule 90 (multQuad -> .)
    EQUALS          reduce using rule 90 (multQuad -> .)
    AND             reduce using rule 90 (multQuad -> .)
    OR              reduce using rule 90 (multQuad -> .)
    RPARENTHESIS    reduce using rule 90 (multQuad -> .)
    COMMA           reduce using rule 90 (multQuad -> .)
    SEMICOLON       reduce using rule 90 (multQuad -> .)
    LBRACKET        reduce using rule 90 (multQuad -> .)

    multQuad                       shift and go to state 142

state 116

    (80) pexp -> CTEI . addOperandCte
    (115) addOperandCte -> .

    MULTIPLICATION  reduce using rule 115 (addOperandCte -> .)
    DIVISION        reduce using rule 115 (addOperandCte -> .)
    PLUS            reduce using rule 115 (addOperandCte -> .)
    MINUS           reduce using rule 115 (addOperandCte -> .)
    GTHAN           reduce using rule 115 (addOperandCte -> .)
    LTHAN           reduce using rule 115 (addOperandCte -> .)
    GTHANEQ         reduce using rule 115 (addOperandCte -> .)
    LTHANEQ         reduce using rule 115 (addOperandCte -> .)
    DIFFERENT       reduce using rule 115 (addOperandCte -> .)
    EQUALS          reduce using rule 115 (addOperandCte -> .)
    AND             reduce using rule 115 (addOperandCte -> .)
    OR              reduce using rule 115 (addOperandCte -> .)
    RPARENTHESIS    reduce using rule 115 (addOperandCte -> .)
    COMMA           reduce using rule 115 (addOperandCte -> .)
    SEMICOLON       reduce using rule 115 (addOperandCte -> .)
    LBRACKET        reduce using rule 115 (addOperandCte -> .)

    addOperandCte                  shift and go to state 143

state 117

    (81) pexp -> CTEF . addOperandCte
    (115) addOperandCte -> .

    MULTIPLICATION  reduce using rule 115 (addOperandCte -> .)
    DIVISION        reduce using rule 115 (addOperandCte -> .)
    PLUS            reduce using rule 115 (addOperandCte -> .)
    MINUS           reduce using rule 115 (addOperandCte -> .)
    GTHAN           reduce using rule 115 (addOperandCte -> .)
    LTHAN           reduce using rule 115 (addOperandCte -> .)
    GTHANEQ         reduce using rule 115 (addOperandCte -> .)
    LTHANEQ         reduce using rule 115 (addOperandCte -> .)
    DIFFERENT       reduce using rule 115 (addOperandCte -> .)
    EQUALS          reduce using rule 115 (addOperandCte -> .)
    AND             reduce using rule 115 (addOperandCte -> .)
    OR              reduce using rule 115 (addOperandCte -> .)
    RPARENTHESIS    reduce using rule 115 (addOperandCte -> .)
    COMMA           reduce using rule 115 (addOperandCte -> .)
    SEMICOLON       reduce using rule 115 (addOperandCte -> .)
    LBRACKET        reduce using rule 115 (addOperandCte -> .)

    addOperandCte                  shift and go to state 144

state 118

    (82) pexp -> CTEC . addOperandCte
    (115) addOperandCte -> .

    MULTIPLICATION  reduce using rule 115 (addOperandCte -> .)
    DIVISION        reduce using rule 115 (addOperandCte -> .)
    PLUS            reduce using rule 115 (addOperandCte -> .)
    MINUS           reduce using rule 115 (addOperandCte -> .)
    GTHAN           reduce using rule 115 (addOperandCte -> .)
    LTHAN           reduce using rule 115 (addOperandCte -> .)
    GTHANEQ         reduce using rule 115 (addOperandCte -> .)
    LTHANEQ         reduce using rule 115 (addOperandCte -> .)
    DIFFERENT       reduce using rule 115 (addOperandCte -> .)
    EQUALS          reduce using rule 115 (addOperandCte -> .)
    AND             reduce using rule 115 (addOperandCte -> .)
    OR              reduce using rule 115 (addOperandCte -> .)
    RPARENTHESIS    reduce using rule 115 (addOperandCte -> .)
    COMMA           reduce using rule 115 (addOperandCte -> .)
    SEMICOLON       reduce using rule 115 (addOperandCte -> .)
    LBRACKET        reduce using rule 115 (addOperandCte -> .)

    addOperandCte                  shift and go to state 145

state 119

    (83) pexp -> CTESTRING . addOperandCte
    (115) addOperandCte -> .

    MULTIPLICATION  reduce using rule 115 (addOperandCte -> .)
    DIVISION        reduce using rule 115 (addOperandCte -> .)
    PLUS            reduce using rule 115 (addOperandCte -> .)
    MINUS           reduce using rule 115 (addOperandCte -> .)
    GTHAN           reduce using rule 115 (addOperandCte -> .)
    LTHAN           reduce using rule 115 (addOperandCte -> .)
    GTHANEQ         reduce using rule 115 (addOperandCte -> .)
    LTHANEQ         reduce using rule 115 (addOperandCte -> .)
    DIFFERENT       reduce using rule 115 (addOperandCte -> .)
    EQUALS          reduce using rule 115 (addOperandCte -> .)
    AND             reduce using rule 115 (addOperandCte -> .)
    OR              reduce using rule 115 (addOperandCte -> .)
    RPARENTHESIS    reduce using rule 115 (addOperandCte -> .)
    COMMA           reduce using rule 115 (addOperandCte -> .)
    SEMICOLON       reduce using rule 115 (addOperandCte -> .)
    LBRACKET        reduce using rule 115 (addOperandCte -> .)

    addOperandCte                  shift and go to state 146

state 120

    (84) pexp -> llamada .

    MULTIPLICATION  reduce using rule 84 (pexp -> llamada .)
    DIVISION        reduce using rule 84 (pexp -> llamada .)
    PLUS            reduce using rule 84 (pexp -> llamada .)
    MINUS           reduce using rule 84 (pexp -> llamada .)
    GTHAN           reduce using rule 84 (pexp -> llamada .)
    LTHAN           reduce using rule 84 (pexp -> llamada .)
    GTHANEQ         reduce using rule 84 (pexp -> llamada .)
    LTHANEQ         reduce using rule 84 (pexp -> llamada .)
    DIFFERENT       reduce using rule 84 (pexp -> llamada .)
    EQUALS          reduce using rule 84 (pexp -> llamada .)
    AND             reduce using rule 84 (pexp -> llamada .)
    OR              reduce using rule 84 (pexp -> llamada .)
    RPARENTHESIS    reduce using rule 84 (pexp -> llamada .)
    COMMA           reduce using rule 84 (pexp -> llamada .)
    SEMICOLON       reduce using rule 84 (pexp -> llamada .)
    LBRACKET        reduce using rule 84 (pexp -> llamada .)


state 121

    (85) pexp -> ID . addOperandVar
    (43) llamada -> ID . requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (114) addOperandVar -> .
    (106) requestCallMemory -> .

    MULTIPLICATION  reduce using rule 114 (addOperandVar -> .)
    DIVISION        reduce using rule 114 (addOperandVar -> .)
    PLUS            reduce using rule 114 (addOperandVar -> .)
    MINUS           reduce using rule 114 (addOperandVar -> .)
    GTHAN           reduce using rule 114 (addOperandVar -> .)
    LTHAN           reduce using rule 114 (addOperandVar -> .)
    GTHANEQ         reduce using rule 114 (addOperandVar -> .)
    LTHANEQ         reduce using rule 114 (addOperandVar -> .)
    DIFFERENT       reduce using rule 114 (addOperandVar -> .)
    EQUALS          reduce using rule 114 (addOperandVar -> .)
    AND             reduce using rule 114 (addOperandVar -> .)
    OR              reduce using rule 114 (addOperandVar -> .)
    RPARENTHESIS    reduce using rule 114 (addOperandVar -> .)
    COMMA           reduce using rule 114 (addOperandVar -> .)
    SEMICOLON       reduce using rule 114 (addOperandVar -> .)
    LBRACKET        reduce using rule 114 (addOperandVar -> .)
    LPARENTHESIS    reduce using rule 106 (requestCallMemory -> .)

    addOperandVar                  shift and go to state 147
    requestCallMemory              shift and go to state 92

state 122

    (57) while -> WHILE whileOperator LPARENTHESIS . expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile
    (58) expresion -> . nexp orQuad expresion1
    (61) nexp -> . comexp andQuad nexp1
    (64) comexp -> . sumexp compQuad compex1 compQuad
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    expresion                      shift and go to state 148
    nexp                           shift and go to state 111
    comexp                         shift and go to state 112
    sumexp                         shift and go to state 113
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 123

    (24) parameters3 -> COMMA ID addParameter parameters3 .

    RPARENTHESIS    reduce using rule 24 (parameters3 -> COMMA ID addParameter parameters3 .)


state 124

    (25) parameters3 -> COMMA tipo ID addParameter . parameters3
    (27) parameters3 -> COMMA tipo ID addParameter .
    (24) parameters3 -> . COMMA ID addParameter parameters3
    (25) parameters3 -> . COMMA tipo ID addParameter parameters3
    (26) parameters3 -> . COMMA ID addParameter
    (27) parameters3 -> . COMMA tipo ID addParameter

    RPARENTHESIS    reduce using rule 27 (parameters3 -> COMMA tipo ID addParameter .)
    COMMA           shift and go to state 62

    parameters3                    shift and go to state 149

state 125

    (29) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno . RBRACKET endFunc funcion

    RBRACKET        shift and go to state 150


state 126

    (32) retorno -> RETURN . expresion quadReturn SEMICOLON
    (58) expresion -> . nexp orQuad expresion1
    (61) nexp -> . comexp andQuad nexp1
    (64) comexp -> . sumexp compQuad compex1 compQuad
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    expresion                      shift and go to state 151
    nexp                           shift and go to state 111
    comexp                         shift and go to state 112
    sumexp                         shift and go to state 113
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 127

    (30) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET . endFunc funcion
    (109) endFunc -> .

    FUNCTION        reduce using rule 109 (endFunc -> .)
    MAIN            reduce using rule 109 (endFunc -> .)

    endFunc                        shift and go to state 152

state 128

    (42) asignacion -> ID addId arr EQUAL . addOperator expresion quadEqual
    (112) addOperator -> .

    CTEI            reduce using rule 112 (addOperator -> .)
    CTEF            reduce using rule 112 (addOperator -> .)
    CTEC            reduce using rule 112 (addOperator -> .)
    CTESTRING       reduce using rule 112 (addOperator -> .)
    ID              reduce using rule 112 (addOperator -> .)
    LPARENTHESIS    reduce using rule 112 (addOperator -> .)

    addOperator                    shift and go to state 153

state 129

    (43) llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs . RPARENTHESIS callQuad

    RPARENTHESIS    shift and go to state 154


state 130

    (44) enviarAgrs -> expresion . quadArg enviarAgrs2
    (107) quadArg -> .

    COMMA           reduce using rule 107 (quadArg -> .)
    RPARENTHESIS    reduce using rule 107 (quadArg -> .)

    quadArg                        shift and go to state 155

state 131

    (45) enviarAgrs -> empty .

    RPARENTHESIS    reduce using rule 45 (enviarAgrs -> empty .)


state 132

    (48) lectura -> READ readOperator LPARENTHESIS expresion . readQuad RPARENTHESIS
    (96) readQuad -> .

    RPARENTHESIS    reduce using rule 96 (readQuad -> .)

    readQuad                       shift and go to state 156

state 133

    (49) escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS .

    SEMICOLON       reduce using rule 49 (escritura -> PRINT LPARENTHESIS escritura1 RPARENTHESIS .)


state 134

    (50) escritura1 -> printOperator expresion . printQuad escritura2
    (94) printQuad -> .

    COMMA           reduce using rule 94 (printQuad -> .)
    RPARENTHESIS    reduce using rule 94 (printQuad -> .)

    printQuad                      shift and go to state 157

state 135

    (53) for -> FOR forOperator asignacion COMMA . TO expresion forQuad LBRACKET estatuto RBRACKET endFor

    TO              shift and go to state 158


state 136

    (86) pexp -> LPARENTHESIS expresion . RPARENTHESIS

    RPARENTHESIS    shift and go to state 159


state 137

    (54) if -> IF LPARENTHESIS expresion RPARENTHESIS . ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (97) ifQuad -> .

    THEN            reduce using rule 97 (ifQuad -> .)

    ifQuad                         shift and go to state 160

state 138

    (58) expresion -> nexp orQuad . expresion1
    (59) expresion1 -> . OR addOperator expresion
    (60) expresion1 -> . empty
    (117) empty -> .

    OR              shift and go to state 162
    RPARENTHESIS    reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    LBRACKET        reduce using rule 117 (empty -> .)

    expresion1                     shift and go to state 161
    empty                          shift and go to state 163

state 139

    (61) nexp -> comexp andQuad . nexp1
    (62) nexp1 -> . AND addOperator nexp
    (63) nexp1 -> . empty
    (117) empty -> .

    AND             shift and go to state 165
    OR              reduce using rule 117 (empty -> .)
    RPARENTHESIS    reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    LBRACKET        reduce using rule 117 (empty -> .)

    nexp1                          shift and go to state 164
    empty                          shift and go to state 166

state 140

    (64) comexp -> sumexp compQuad . compex1 compQuad
    (65) compex1 -> . GTHAN addOperator sumexp
    (66) compex1 -> . LTHAN addOperator sumexp
    (67) compex1 -> . GTHANEQ addOperator sumexp
    (68) compex1 -> . LTHANEQ addOperator sumexp
    (69) compex1 -> . DIFFERENT addOperator sumexp
    (70) compex1 -> . EQUALS addOperator sumexp
    (71) compex1 -> . empty
    (117) empty -> .

    GTHAN           shift and go to state 168
    LTHAN           shift and go to state 169
    GTHANEQ         shift and go to state 170
    LTHANEQ         shift and go to state 171
    DIFFERENT       shift and go to state 172
    EQUALS          shift and go to state 173
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    RPARENTHESIS    reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    LBRACKET        reduce using rule 117 (empty -> .)

    compex1                        shift and go to state 167
    empty                          shift and go to state 174

state 141

    (72) sumexp -> mulexp plusQuad . sumexp1
    (73) sumexp1 -> . PLUS addOperator sumexp
    (74) sumexp1 -> . MINUS addOperator sumexp
    (75) sumexp1 -> . empty
    (117) empty -> .

    PLUS            shift and go to state 176
    MINUS           shift and go to state 177
    GTHAN           reduce using rule 117 (empty -> .)
    LTHAN           reduce using rule 117 (empty -> .)
    GTHANEQ         reduce using rule 117 (empty -> .)
    LTHANEQ         reduce using rule 117 (empty -> .)
    DIFFERENT       reduce using rule 117 (empty -> .)
    EQUALS          reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    RPARENTHESIS    reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    LBRACKET        reduce using rule 117 (empty -> .)

    sumexp1                        shift and go to state 175
    empty                          shift and go to state 178

state 142

    (76) mulexp -> pexp multQuad . mulexp1
    (77) mulexp1 -> . MULTIPLICATION addOperator mulexp
    (78) mulexp1 -> . DIVISION addOperator mulexp
    (79) mulexp1 -> . empty
    (117) empty -> .

    MULTIPLICATION  shift and go to state 180
    DIVISION        shift and go to state 181
    PLUS            reduce using rule 117 (empty -> .)
    MINUS           reduce using rule 117 (empty -> .)
    GTHAN           reduce using rule 117 (empty -> .)
    LTHAN           reduce using rule 117 (empty -> .)
    GTHANEQ         reduce using rule 117 (empty -> .)
    LTHANEQ         reduce using rule 117 (empty -> .)
    DIFFERENT       reduce using rule 117 (empty -> .)
    EQUALS          reduce using rule 117 (empty -> .)
    AND             reduce using rule 117 (empty -> .)
    OR              reduce using rule 117 (empty -> .)
    RPARENTHESIS    reduce using rule 117 (empty -> .)
    COMMA           reduce using rule 117 (empty -> .)
    SEMICOLON       reduce using rule 117 (empty -> .)
    LBRACKET        reduce using rule 117 (empty -> .)

    mulexp1                        shift and go to state 179
    empty                          shift and go to state 182

state 143

    (80) pexp -> CTEI addOperandCte .

    MULTIPLICATION  reduce using rule 80 (pexp -> CTEI addOperandCte .)
    DIVISION        reduce using rule 80 (pexp -> CTEI addOperandCte .)
    PLUS            reduce using rule 80 (pexp -> CTEI addOperandCte .)
    MINUS           reduce using rule 80 (pexp -> CTEI addOperandCte .)
    GTHAN           reduce using rule 80 (pexp -> CTEI addOperandCte .)
    LTHAN           reduce using rule 80 (pexp -> CTEI addOperandCte .)
    GTHANEQ         reduce using rule 80 (pexp -> CTEI addOperandCte .)
    LTHANEQ         reduce using rule 80 (pexp -> CTEI addOperandCte .)
    DIFFERENT       reduce using rule 80 (pexp -> CTEI addOperandCte .)
    EQUALS          reduce using rule 80 (pexp -> CTEI addOperandCte .)
    AND             reduce using rule 80 (pexp -> CTEI addOperandCte .)
    OR              reduce using rule 80 (pexp -> CTEI addOperandCte .)
    RPARENTHESIS    reduce using rule 80 (pexp -> CTEI addOperandCte .)
    COMMA           reduce using rule 80 (pexp -> CTEI addOperandCte .)
    SEMICOLON       reduce using rule 80 (pexp -> CTEI addOperandCte .)
    LBRACKET        reduce using rule 80 (pexp -> CTEI addOperandCte .)


state 144

    (81) pexp -> CTEF addOperandCte .

    MULTIPLICATION  reduce using rule 81 (pexp -> CTEF addOperandCte .)
    DIVISION        reduce using rule 81 (pexp -> CTEF addOperandCte .)
    PLUS            reduce using rule 81 (pexp -> CTEF addOperandCte .)
    MINUS           reduce using rule 81 (pexp -> CTEF addOperandCte .)
    GTHAN           reduce using rule 81 (pexp -> CTEF addOperandCte .)
    LTHAN           reduce using rule 81 (pexp -> CTEF addOperandCte .)
    GTHANEQ         reduce using rule 81 (pexp -> CTEF addOperandCte .)
    LTHANEQ         reduce using rule 81 (pexp -> CTEF addOperandCte .)
    DIFFERENT       reduce using rule 81 (pexp -> CTEF addOperandCte .)
    EQUALS          reduce using rule 81 (pexp -> CTEF addOperandCte .)
    AND             reduce using rule 81 (pexp -> CTEF addOperandCte .)
    OR              reduce using rule 81 (pexp -> CTEF addOperandCte .)
    RPARENTHESIS    reduce using rule 81 (pexp -> CTEF addOperandCte .)
    COMMA           reduce using rule 81 (pexp -> CTEF addOperandCte .)
    SEMICOLON       reduce using rule 81 (pexp -> CTEF addOperandCte .)
    LBRACKET        reduce using rule 81 (pexp -> CTEF addOperandCte .)


state 145

    (82) pexp -> CTEC addOperandCte .

    MULTIPLICATION  reduce using rule 82 (pexp -> CTEC addOperandCte .)
    DIVISION        reduce using rule 82 (pexp -> CTEC addOperandCte .)
    PLUS            reduce using rule 82 (pexp -> CTEC addOperandCte .)
    MINUS           reduce using rule 82 (pexp -> CTEC addOperandCte .)
    GTHAN           reduce using rule 82 (pexp -> CTEC addOperandCte .)
    LTHAN           reduce using rule 82 (pexp -> CTEC addOperandCte .)
    GTHANEQ         reduce using rule 82 (pexp -> CTEC addOperandCte .)
    LTHANEQ         reduce using rule 82 (pexp -> CTEC addOperandCte .)
    DIFFERENT       reduce using rule 82 (pexp -> CTEC addOperandCte .)
    EQUALS          reduce using rule 82 (pexp -> CTEC addOperandCte .)
    AND             reduce using rule 82 (pexp -> CTEC addOperandCte .)
    OR              reduce using rule 82 (pexp -> CTEC addOperandCte .)
    RPARENTHESIS    reduce using rule 82 (pexp -> CTEC addOperandCte .)
    COMMA           reduce using rule 82 (pexp -> CTEC addOperandCte .)
    SEMICOLON       reduce using rule 82 (pexp -> CTEC addOperandCte .)
    LBRACKET        reduce using rule 82 (pexp -> CTEC addOperandCte .)


state 146

    (83) pexp -> CTESTRING addOperandCte .

    MULTIPLICATION  reduce using rule 83 (pexp -> CTESTRING addOperandCte .)
    DIVISION        reduce using rule 83 (pexp -> CTESTRING addOperandCte .)
    PLUS            reduce using rule 83 (pexp -> CTESTRING addOperandCte .)
    MINUS           reduce using rule 83 (pexp -> CTESTRING addOperandCte .)
    GTHAN           reduce using rule 83 (pexp -> CTESTRING addOperandCte .)
    LTHAN           reduce using rule 83 (pexp -> CTESTRING addOperandCte .)
    GTHANEQ         reduce using rule 83 (pexp -> CTESTRING addOperandCte .)
    LTHANEQ         reduce using rule 83 (pexp -> CTESTRING addOperandCte .)
    DIFFERENT       reduce using rule 83 (pexp -> CTESTRING addOperandCte .)
    EQUALS          reduce using rule 83 (pexp -> CTESTRING addOperandCte .)
    AND             reduce using rule 83 (pexp -> CTESTRING addOperandCte .)
    OR              reduce using rule 83 (pexp -> CTESTRING addOperandCte .)
    RPARENTHESIS    reduce using rule 83 (pexp -> CTESTRING addOperandCte .)
    COMMA           reduce using rule 83 (pexp -> CTESTRING addOperandCte .)
    SEMICOLON       reduce using rule 83 (pexp -> CTESTRING addOperandCte .)
    LBRACKET        reduce using rule 83 (pexp -> CTESTRING addOperandCte .)


state 147

    (85) pexp -> ID addOperandVar .

    MULTIPLICATION  reduce using rule 85 (pexp -> ID addOperandVar .)
    DIVISION        reduce using rule 85 (pexp -> ID addOperandVar .)
    PLUS            reduce using rule 85 (pexp -> ID addOperandVar .)
    MINUS           reduce using rule 85 (pexp -> ID addOperandVar .)
    GTHAN           reduce using rule 85 (pexp -> ID addOperandVar .)
    LTHAN           reduce using rule 85 (pexp -> ID addOperandVar .)
    GTHANEQ         reduce using rule 85 (pexp -> ID addOperandVar .)
    LTHANEQ         reduce using rule 85 (pexp -> ID addOperandVar .)
    DIFFERENT       reduce using rule 85 (pexp -> ID addOperandVar .)
    EQUALS          reduce using rule 85 (pexp -> ID addOperandVar .)
    AND             reduce using rule 85 (pexp -> ID addOperandVar .)
    OR              reduce using rule 85 (pexp -> ID addOperandVar .)
    RPARENTHESIS    reduce using rule 85 (pexp -> ID addOperandVar .)
    COMMA           reduce using rule 85 (pexp -> ID addOperandVar .)
    SEMICOLON       reduce using rule 85 (pexp -> ID addOperandVar .)
    LBRACKET        reduce using rule 85 (pexp -> ID addOperandVar .)


state 148

    (57) while -> WHILE whileOperator LPARENTHESIS expresion . RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RPARENTHESIS    shift and go to state 183


state 149

    (25) parameters3 -> COMMA tipo ID addParameter parameters3 .

    RPARENTHESIS    reduce using rule 25 (parameters3 -> COMMA tipo ID addParameter parameters3 .)


state 150

    (29) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET . endFunc funcion
    (109) endFunc -> .

    FUNCTION        reduce using rule 109 (endFunc -> .)
    MAIN            reduce using rule 109 (endFunc -> .)

    endFunc                        shift and go to state 184

state 151

    (32) retorno -> RETURN expresion . quadReturn SEMICOLON
    (111) quadReturn -> .

    SEMICOLON       reduce using rule 111 (quadReturn -> .)

    quadReturn                     shift and go to state 185

state 152

    (30) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc . funcion
    (29) funcion -> . FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion
    (30) funcion -> . FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion
    (31) funcion -> . empty
    (117) empty -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 117 (empty -> .)

    funcion                        shift and go to state 186
    empty                          shift and go to state 13

state 153

    (42) asignacion -> ID addId arr EQUAL addOperator . expresion quadEqual
    (58) expresion -> . nexp orQuad expresion1
    (61) nexp -> . comexp andQuad nexp1
    (64) comexp -> . sumexp compQuad compex1 compQuad
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    expresion                      shift and go to state 187
    nexp                           shift and go to state 111
    comexp                         shift and go to state 112
    sumexp                         shift and go to state 113
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 154

    (43) llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS . callQuad
    (110) callQuad -> .

    SEMICOLON       reduce using rule 110 (callQuad -> .)
    MULTIPLICATION  reduce using rule 110 (callQuad -> .)
    DIVISION        reduce using rule 110 (callQuad -> .)
    PLUS            reduce using rule 110 (callQuad -> .)
    MINUS           reduce using rule 110 (callQuad -> .)
    GTHAN           reduce using rule 110 (callQuad -> .)
    LTHAN           reduce using rule 110 (callQuad -> .)
    GTHANEQ         reduce using rule 110 (callQuad -> .)
    LTHANEQ         reduce using rule 110 (callQuad -> .)
    DIFFERENT       reduce using rule 110 (callQuad -> .)
    EQUALS          reduce using rule 110 (callQuad -> .)
    AND             reduce using rule 110 (callQuad -> .)
    OR              reduce using rule 110 (callQuad -> .)
    RPARENTHESIS    reduce using rule 110 (callQuad -> .)
    COMMA           reduce using rule 110 (callQuad -> .)
    LBRACKET        reduce using rule 110 (callQuad -> .)

    callQuad                       shift and go to state 188

state 155

    (44) enviarAgrs -> expresion quadArg . enviarAgrs2
    (46) enviarAgrs2 -> . COMMA enviarAgrs
    (47) enviarAgrs2 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 190
    RPARENTHESIS    reduce using rule 117 (empty -> .)

    enviarAgrs2                    shift and go to state 189
    empty                          shift and go to state 191

state 156

    (48) lectura -> READ readOperator LPARENTHESIS expresion readQuad . RPARENTHESIS

    RPARENTHESIS    shift and go to state 192


state 157

    (50) escritura1 -> printOperator expresion printQuad . escritura2
    (51) escritura2 -> . COMMA escritura1
    (52) escritura2 -> . empty
    (117) empty -> .

    COMMA           shift and go to state 194
    RPARENTHESIS    reduce using rule 117 (empty -> .)

    escritura2                     shift and go to state 193
    empty                          shift and go to state 195

state 158

    (53) for -> FOR forOperator asignacion COMMA TO . expresion forQuad LBRACKET estatuto RBRACKET endFor
    (58) expresion -> . nexp orQuad expresion1
    (61) nexp -> . comexp andQuad nexp1
    (64) comexp -> . sumexp compQuad compex1 compQuad
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    expresion                      shift and go to state 196
    nexp                           shift and go to state 111
    comexp                         shift and go to state 112
    sumexp                         shift and go to state 113
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 159

    (86) pexp -> LPARENTHESIS expresion RPARENTHESIS .

    MULTIPLICATION  reduce using rule 86 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    DIVISION        reduce using rule 86 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    PLUS            reduce using rule 86 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    MINUS           reduce using rule 86 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    GTHAN           reduce using rule 86 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    LTHAN           reduce using rule 86 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    GTHANEQ         reduce using rule 86 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    LTHANEQ         reduce using rule 86 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    DIFFERENT       reduce using rule 86 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    EQUALS          reduce using rule 86 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    AND             reduce using rule 86 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    OR              reduce using rule 86 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 86 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    COMMA           reduce using rule 86 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    SEMICOLON       reduce using rule 86 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)
    LBRACKET        reduce using rule 86 (pexp -> LPARENTHESIS expresion RPARENTHESIS .)


state 160

    (54) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad . THEN LBRACKET estatuto RBRACKET else endIf

    THEN            shift and go to state 197


state 161

    (58) expresion -> nexp orQuad expresion1 .

    RPARENTHESIS    reduce using rule 58 (expresion -> nexp orQuad expresion1 .)
    COMMA           reduce using rule 58 (expresion -> nexp orQuad expresion1 .)
    SEMICOLON       reduce using rule 58 (expresion -> nexp orQuad expresion1 .)
    LBRACKET        reduce using rule 58 (expresion -> nexp orQuad expresion1 .)


state 162

    (59) expresion1 -> OR . addOperator expresion
    (112) addOperator -> .

    CTEI            reduce using rule 112 (addOperator -> .)
    CTEF            reduce using rule 112 (addOperator -> .)
    CTEC            reduce using rule 112 (addOperator -> .)
    CTESTRING       reduce using rule 112 (addOperator -> .)
    ID              reduce using rule 112 (addOperator -> .)
    LPARENTHESIS    reduce using rule 112 (addOperator -> .)

    addOperator                    shift and go to state 198

state 163

    (60) expresion1 -> empty .

    RPARENTHESIS    reduce using rule 60 (expresion1 -> empty .)
    COMMA           reduce using rule 60 (expresion1 -> empty .)
    SEMICOLON       reduce using rule 60 (expresion1 -> empty .)
    LBRACKET        reduce using rule 60 (expresion1 -> empty .)


state 164

    (61) nexp -> comexp andQuad nexp1 .

    OR              reduce using rule 61 (nexp -> comexp andQuad nexp1 .)
    RPARENTHESIS    reduce using rule 61 (nexp -> comexp andQuad nexp1 .)
    COMMA           reduce using rule 61 (nexp -> comexp andQuad nexp1 .)
    SEMICOLON       reduce using rule 61 (nexp -> comexp andQuad nexp1 .)
    LBRACKET        reduce using rule 61 (nexp -> comexp andQuad nexp1 .)


state 165

    (62) nexp1 -> AND . addOperator nexp
    (112) addOperator -> .

    CTEI            reduce using rule 112 (addOperator -> .)
    CTEF            reduce using rule 112 (addOperator -> .)
    CTEC            reduce using rule 112 (addOperator -> .)
    CTESTRING       reduce using rule 112 (addOperator -> .)
    ID              reduce using rule 112 (addOperator -> .)
    LPARENTHESIS    reduce using rule 112 (addOperator -> .)

    addOperator                    shift and go to state 199

state 166

    (63) nexp1 -> empty .

    OR              reduce using rule 63 (nexp1 -> empty .)
    RPARENTHESIS    reduce using rule 63 (nexp1 -> empty .)
    COMMA           reduce using rule 63 (nexp1 -> empty .)
    SEMICOLON       reduce using rule 63 (nexp1 -> empty .)
    LBRACKET        reduce using rule 63 (nexp1 -> empty .)


state 167

    (64) comexp -> sumexp compQuad compex1 . compQuad
    (89) compQuad -> .

    AND             reduce using rule 89 (compQuad -> .)
    OR              reduce using rule 89 (compQuad -> .)
    RPARENTHESIS    reduce using rule 89 (compQuad -> .)
    COMMA           reduce using rule 89 (compQuad -> .)
    SEMICOLON       reduce using rule 89 (compQuad -> .)
    LBRACKET        reduce using rule 89 (compQuad -> .)

    compQuad                       shift and go to state 200

state 168

    (65) compex1 -> GTHAN . addOperator sumexp
    (112) addOperator -> .

    CTEI            reduce using rule 112 (addOperator -> .)
    CTEF            reduce using rule 112 (addOperator -> .)
    CTEC            reduce using rule 112 (addOperator -> .)
    CTESTRING       reduce using rule 112 (addOperator -> .)
    ID              reduce using rule 112 (addOperator -> .)
    LPARENTHESIS    reduce using rule 112 (addOperator -> .)

    addOperator                    shift and go to state 201

state 169

    (66) compex1 -> LTHAN . addOperator sumexp
    (112) addOperator -> .

    CTEI            reduce using rule 112 (addOperator -> .)
    CTEF            reduce using rule 112 (addOperator -> .)
    CTEC            reduce using rule 112 (addOperator -> .)
    CTESTRING       reduce using rule 112 (addOperator -> .)
    ID              reduce using rule 112 (addOperator -> .)
    LPARENTHESIS    reduce using rule 112 (addOperator -> .)

    addOperator                    shift and go to state 202

state 170

    (67) compex1 -> GTHANEQ . addOperator sumexp
    (112) addOperator -> .

    CTEI            reduce using rule 112 (addOperator -> .)
    CTEF            reduce using rule 112 (addOperator -> .)
    CTEC            reduce using rule 112 (addOperator -> .)
    CTESTRING       reduce using rule 112 (addOperator -> .)
    ID              reduce using rule 112 (addOperator -> .)
    LPARENTHESIS    reduce using rule 112 (addOperator -> .)

    addOperator                    shift and go to state 203

state 171

    (68) compex1 -> LTHANEQ . addOperator sumexp
    (112) addOperator -> .

    CTEI            reduce using rule 112 (addOperator -> .)
    CTEF            reduce using rule 112 (addOperator -> .)
    CTEC            reduce using rule 112 (addOperator -> .)
    CTESTRING       reduce using rule 112 (addOperator -> .)
    ID              reduce using rule 112 (addOperator -> .)
    LPARENTHESIS    reduce using rule 112 (addOperator -> .)

    addOperator                    shift and go to state 204

state 172

    (69) compex1 -> DIFFERENT . addOperator sumexp
    (112) addOperator -> .

    CTEI            reduce using rule 112 (addOperator -> .)
    CTEF            reduce using rule 112 (addOperator -> .)
    CTEC            reduce using rule 112 (addOperator -> .)
    CTESTRING       reduce using rule 112 (addOperator -> .)
    ID              reduce using rule 112 (addOperator -> .)
    LPARENTHESIS    reduce using rule 112 (addOperator -> .)

    addOperator                    shift and go to state 205

state 173

    (70) compex1 -> EQUALS . addOperator sumexp
    (112) addOperator -> .

    CTEI            reduce using rule 112 (addOperator -> .)
    CTEF            reduce using rule 112 (addOperator -> .)
    CTEC            reduce using rule 112 (addOperator -> .)
    CTESTRING       reduce using rule 112 (addOperator -> .)
    ID              reduce using rule 112 (addOperator -> .)
    LPARENTHESIS    reduce using rule 112 (addOperator -> .)

    addOperator                    shift and go to state 206

state 174

    (71) compex1 -> empty .

    AND             reduce using rule 71 (compex1 -> empty .)
    OR              reduce using rule 71 (compex1 -> empty .)
    RPARENTHESIS    reduce using rule 71 (compex1 -> empty .)
    COMMA           reduce using rule 71 (compex1 -> empty .)
    SEMICOLON       reduce using rule 71 (compex1 -> empty .)
    LBRACKET        reduce using rule 71 (compex1 -> empty .)


state 175

    (72) sumexp -> mulexp plusQuad sumexp1 .

    GTHAN           reduce using rule 72 (sumexp -> mulexp plusQuad sumexp1 .)
    LTHAN           reduce using rule 72 (sumexp -> mulexp plusQuad sumexp1 .)
    GTHANEQ         reduce using rule 72 (sumexp -> mulexp plusQuad sumexp1 .)
    LTHANEQ         reduce using rule 72 (sumexp -> mulexp plusQuad sumexp1 .)
    DIFFERENT       reduce using rule 72 (sumexp -> mulexp plusQuad sumexp1 .)
    EQUALS          reduce using rule 72 (sumexp -> mulexp plusQuad sumexp1 .)
    AND             reduce using rule 72 (sumexp -> mulexp plusQuad sumexp1 .)
    OR              reduce using rule 72 (sumexp -> mulexp plusQuad sumexp1 .)
    RPARENTHESIS    reduce using rule 72 (sumexp -> mulexp plusQuad sumexp1 .)
    COMMA           reduce using rule 72 (sumexp -> mulexp plusQuad sumexp1 .)
    SEMICOLON       reduce using rule 72 (sumexp -> mulexp plusQuad sumexp1 .)
    LBRACKET        reduce using rule 72 (sumexp -> mulexp plusQuad sumexp1 .)


state 176

    (73) sumexp1 -> PLUS . addOperator sumexp
    (112) addOperator -> .

    CTEI            reduce using rule 112 (addOperator -> .)
    CTEF            reduce using rule 112 (addOperator -> .)
    CTEC            reduce using rule 112 (addOperator -> .)
    CTESTRING       reduce using rule 112 (addOperator -> .)
    ID              reduce using rule 112 (addOperator -> .)
    LPARENTHESIS    reduce using rule 112 (addOperator -> .)

    addOperator                    shift and go to state 207

state 177

    (74) sumexp1 -> MINUS . addOperator sumexp
    (112) addOperator -> .

    CTEI            reduce using rule 112 (addOperator -> .)
    CTEF            reduce using rule 112 (addOperator -> .)
    CTEC            reduce using rule 112 (addOperator -> .)
    CTESTRING       reduce using rule 112 (addOperator -> .)
    ID              reduce using rule 112 (addOperator -> .)
    LPARENTHESIS    reduce using rule 112 (addOperator -> .)

    addOperator                    shift and go to state 208

state 178

    (75) sumexp1 -> empty .

    GTHAN           reduce using rule 75 (sumexp1 -> empty .)
    LTHAN           reduce using rule 75 (sumexp1 -> empty .)
    GTHANEQ         reduce using rule 75 (sumexp1 -> empty .)
    LTHANEQ         reduce using rule 75 (sumexp1 -> empty .)
    DIFFERENT       reduce using rule 75 (sumexp1 -> empty .)
    EQUALS          reduce using rule 75 (sumexp1 -> empty .)
    AND             reduce using rule 75 (sumexp1 -> empty .)
    OR              reduce using rule 75 (sumexp1 -> empty .)
    RPARENTHESIS    reduce using rule 75 (sumexp1 -> empty .)
    COMMA           reduce using rule 75 (sumexp1 -> empty .)
    SEMICOLON       reduce using rule 75 (sumexp1 -> empty .)
    LBRACKET        reduce using rule 75 (sumexp1 -> empty .)


state 179

    (76) mulexp -> pexp multQuad mulexp1 .

    PLUS            reduce using rule 76 (mulexp -> pexp multQuad mulexp1 .)
    MINUS           reduce using rule 76 (mulexp -> pexp multQuad mulexp1 .)
    GTHAN           reduce using rule 76 (mulexp -> pexp multQuad mulexp1 .)
    LTHAN           reduce using rule 76 (mulexp -> pexp multQuad mulexp1 .)
    GTHANEQ         reduce using rule 76 (mulexp -> pexp multQuad mulexp1 .)
    LTHANEQ         reduce using rule 76 (mulexp -> pexp multQuad mulexp1 .)
    DIFFERENT       reduce using rule 76 (mulexp -> pexp multQuad mulexp1 .)
    EQUALS          reduce using rule 76 (mulexp -> pexp multQuad mulexp1 .)
    AND             reduce using rule 76 (mulexp -> pexp multQuad mulexp1 .)
    OR              reduce using rule 76 (mulexp -> pexp multQuad mulexp1 .)
    RPARENTHESIS    reduce using rule 76 (mulexp -> pexp multQuad mulexp1 .)
    COMMA           reduce using rule 76 (mulexp -> pexp multQuad mulexp1 .)
    SEMICOLON       reduce using rule 76 (mulexp -> pexp multQuad mulexp1 .)
    LBRACKET        reduce using rule 76 (mulexp -> pexp multQuad mulexp1 .)


state 180

    (77) mulexp1 -> MULTIPLICATION . addOperator mulexp
    (112) addOperator -> .

    CTEI            reduce using rule 112 (addOperator -> .)
    CTEF            reduce using rule 112 (addOperator -> .)
    CTEC            reduce using rule 112 (addOperator -> .)
    CTESTRING       reduce using rule 112 (addOperator -> .)
    ID              reduce using rule 112 (addOperator -> .)
    LPARENTHESIS    reduce using rule 112 (addOperator -> .)

    addOperator                    shift and go to state 209

state 181

    (78) mulexp1 -> DIVISION . addOperator mulexp
    (112) addOperator -> .

    CTEI            reduce using rule 112 (addOperator -> .)
    CTEF            reduce using rule 112 (addOperator -> .)
    CTEC            reduce using rule 112 (addOperator -> .)
    CTESTRING       reduce using rule 112 (addOperator -> .)
    ID              reduce using rule 112 (addOperator -> .)
    LPARENTHESIS    reduce using rule 112 (addOperator -> .)

    addOperator                    shift and go to state 210

state 182

    (79) mulexp1 -> empty .

    PLUS            reduce using rule 79 (mulexp1 -> empty .)
    MINUS           reduce using rule 79 (mulexp1 -> empty .)
    GTHAN           reduce using rule 79 (mulexp1 -> empty .)
    LTHAN           reduce using rule 79 (mulexp1 -> empty .)
    GTHANEQ         reduce using rule 79 (mulexp1 -> empty .)
    LTHANEQ         reduce using rule 79 (mulexp1 -> empty .)
    DIFFERENT       reduce using rule 79 (mulexp1 -> empty .)
    EQUALS          reduce using rule 79 (mulexp1 -> empty .)
    AND             reduce using rule 79 (mulexp1 -> empty .)
    OR              reduce using rule 79 (mulexp1 -> empty .)
    RPARENTHESIS    reduce using rule 79 (mulexp1 -> empty .)
    COMMA           reduce using rule 79 (mulexp1 -> empty .)
    SEMICOLON       reduce using rule 79 (mulexp1 -> empty .)
    LBRACKET        reduce using rule 79 (mulexp1 -> empty .)


state 183

    (57) while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS . whileQuad LBRACKET estatuto RBRACKET endWhile
    (101) whileQuad -> .

    LBRACKET        reduce using rule 101 (whileQuad -> .)

    whileQuad                      shift and go to state 211

state 184

    (29) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc . funcion
    (29) funcion -> . FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion
    (30) funcion -> . FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion
    (31) funcion -> . empty
    (117) empty -> .

    FUNCTION        shift and go to state 12
    MAIN            reduce using rule 117 (empty -> .)

    funcion                        shift and go to state 212
    empty                          shift and go to state 13

state 185

    (32) retorno -> RETURN expresion quadReturn . SEMICOLON

    SEMICOLON       shift and go to state 213


state 186

    (30) funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion .

    MAIN            reduce using rule 30 (funcion -> FUNCTION VOID ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto RBRACKET endFunc funcion .)


state 187

    (42) asignacion -> ID addId arr EQUAL addOperator expresion . quadEqual
    (92) quadEqual -> .

    SEMICOLON       reduce using rule 92 (quadEqual -> .)
    COMMA           reduce using rule 92 (quadEqual -> .)

    quadEqual                      shift and go to state 214

state 188

    (43) llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .

    SEMICOLON       reduce using rule 43 (llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    MULTIPLICATION  reduce using rule 43 (llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    DIVISION        reduce using rule 43 (llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    PLUS            reduce using rule 43 (llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    MINUS           reduce using rule 43 (llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    GTHAN           reduce using rule 43 (llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    LTHAN           reduce using rule 43 (llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    GTHANEQ         reduce using rule 43 (llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    LTHANEQ         reduce using rule 43 (llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    DIFFERENT       reduce using rule 43 (llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    EQUALS          reduce using rule 43 (llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    AND             reduce using rule 43 (llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    OR              reduce using rule 43 (llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    RPARENTHESIS    reduce using rule 43 (llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    COMMA           reduce using rule 43 (llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)
    LBRACKET        reduce using rule 43 (llamada -> ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad .)


state 189

    (44) enviarAgrs -> expresion quadArg enviarAgrs2 .

    RPARENTHESIS    reduce using rule 44 (enviarAgrs -> expresion quadArg enviarAgrs2 .)


state 190

    (46) enviarAgrs2 -> COMMA . enviarAgrs
    (44) enviarAgrs -> . expresion quadArg enviarAgrs2
    (45) enviarAgrs -> . empty
    (58) expresion -> . nexp orQuad expresion1
    (117) empty -> .
    (61) nexp -> . comexp andQuad nexp1
    (64) comexp -> . sumexp compQuad compex1 compQuad
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    RPARENTHESIS    reduce using rule 117 (empty -> .)
    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    enviarAgrs                     shift and go to state 215
    expresion                      shift and go to state 130
    empty                          shift and go to state 131
    nexp                           shift and go to state 111
    comexp                         shift and go to state 112
    sumexp                         shift and go to state 113
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 191

    (47) enviarAgrs2 -> empty .

    RPARENTHESIS    reduce using rule 47 (enviarAgrs2 -> empty .)


state 192

    (48) lectura -> READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS .

    SEMICOLON       reduce using rule 48 (lectura -> READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS .)


state 193

    (50) escritura1 -> printOperator expresion printQuad escritura2 .

    RPARENTHESIS    reduce using rule 50 (escritura1 -> printOperator expresion printQuad escritura2 .)


state 194

    (51) escritura2 -> COMMA . escritura1
    (50) escritura1 -> . printOperator expresion printQuad escritura2
    (93) printOperator -> .

    CTEI            reduce using rule 93 (printOperator -> .)
    CTEF            reduce using rule 93 (printOperator -> .)
    CTEC            reduce using rule 93 (printOperator -> .)
    CTESTRING       reduce using rule 93 (printOperator -> .)
    ID              reduce using rule 93 (printOperator -> .)
    LPARENTHESIS    reduce using rule 93 (printOperator -> .)

    escritura1                     shift and go to state 216
    printOperator                  shift and go to state 106

state 195

    (52) escritura2 -> empty .

    RPARENTHESIS    reduce using rule 52 (escritura2 -> empty .)


state 196

    (53) for -> FOR forOperator asignacion COMMA TO expresion . forQuad LBRACKET estatuto RBRACKET endFor
    (104) forQuad -> .

    LBRACKET        reduce using rule 104 (forQuad -> .)

    forQuad                        shift and go to state 217

state 197

    (54) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN . LBRACKET estatuto RBRACKET else endIf

    LBRACKET        shift and go to state 218


state 198

    (59) expresion1 -> OR addOperator . expresion
    (58) expresion -> . nexp orQuad expresion1
    (61) nexp -> . comexp andQuad nexp1
    (64) comexp -> . sumexp compQuad compex1 compQuad
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    expresion                      shift and go to state 219
    nexp                           shift and go to state 111
    comexp                         shift and go to state 112
    sumexp                         shift and go to state 113
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 199

    (62) nexp1 -> AND addOperator . nexp
    (61) nexp -> . comexp andQuad nexp1
    (64) comexp -> . sumexp compQuad compex1 compQuad
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    nexp                           shift and go to state 220
    comexp                         shift and go to state 112
    sumexp                         shift and go to state 113
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 200

    (64) comexp -> sumexp compQuad compex1 compQuad .

    AND             reduce using rule 64 (comexp -> sumexp compQuad compex1 compQuad .)
    OR              reduce using rule 64 (comexp -> sumexp compQuad compex1 compQuad .)
    RPARENTHESIS    reduce using rule 64 (comexp -> sumexp compQuad compex1 compQuad .)
    COMMA           reduce using rule 64 (comexp -> sumexp compQuad compex1 compQuad .)
    SEMICOLON       reduce using rule 64 (comexp -> sumexp compQuad compex1 compQuad .)
    LBRACKET        reduce using rule 64 (comexp -> sumexp compQuad compex1 compQuad .)


state 201

    (65) compex1 -> GTHAN addOperator . sumexp
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    sumexp                         shift and go to state 221
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 202

    (66) compex1 -> LTHAN addOperator . sumexp
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    sumexp                         shift and go to state 222
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 203

    (67) compex1 -> GTHANEQ addOperator . sumexp
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    sumexp                         shift and go to state 223
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 204

    (68) compex1 -> LTHANEQ addOperator . sumexp
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    sumexp                         shift and go to state 224
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 205

    (69) compex1 -> DIFFERENT addOperator . sumexp
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    sumexp                         shift and go to state 225
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 206

    (70) compex1 -> EQUALS addOperator . sumexp
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    sumexp                         shift and go to state 226
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 207

    (73) sumexp1 -> PLUS addOperator . sumexp
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    sumexp                         shift and go to state 227
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 208

    (74) sumexp1 -> MINUS addOperator . sumexp
    (72) sumexp -> . mulexp plusQuad sumexp1
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    sumexp                         shift and go to state 228
    mulexp                         shift and go to state 114
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 209

    (77) mulexp1 -> MULTIPLICATION addOperator . mulexp
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    mulexp                         shift and go to state 229
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 210

    (78) mulexp1 -> DIVISION addOperator . mulexp
    (76) mulexp -> . pexp multQuad mulexp1
    (80) pexp -> . CTEI addOperandCte
    (81) pexp -> . CTEF addOperandCte
    (82) pexp -> . CTEC addOperandCte
    (83) pexp -> . CTESTRING addOperandCte
    (84) pexp -> . llamada
    (85) pexp -> . ID addOperandVar
    (86) pexp -> . LPARENTHESIS expresion RPARENTHESIS
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad

    CTEI            shift and go to state 116
    CTEF            shift and go to state 117
    CTEC            shift and go to state 118
    CTESTRING       shift and go to state 119
    ID              shift and go to state 121
    LPARENTHESIS    shift and go to state 109

    mulexp                         shift and go to state 230
    pexp                           shift and go to state 115
    llamada                        shift and go to state 120

state 211

    (57) while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad . LBRACKET estatuto RBRACKET endWhile

    LBRACKET        shift and go to state 231


state 212

    (29) funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion .

    MAIN            reduce using rule 29 (funcion -> FUNCTION tipo ID addFunction LPARENTHESIS parameters RPARENTHESIS vars LBRACKET estatuto retorno RBRACKET endFunc funcion .)


state 213

    (32) retorno -> RETURN expresion quadReturn SEMICOLON .

    RBRACKET        reduce using rule 32 (retorno -> RETURN expresion quadReturn SEMICOLON .)


state 214

    (42) asignacion -> ID addId arr EQUAL addOperator expresion quadEqual .

    SEMICOLON       reduce using rule 42 (asignacion -> ID addId arr EQUAL addOperator expresion quadEqual .)
    COMMA           reduce using rule 42 (asignacion -> ID addId arr EQUAL addOperator expresion quadEqual .)


state 215

    (46) enviarAgrs2 -> COMMA enviarAgrs .

    RPARENTHESIS    reduce using rule 46 (enviarAgrs2 -> COMMA enviarAgrs .)


state 216

    (51) escritura2 -> COMMA escritura1 .

    RPARENTHESIS    reduce using rule 51 (escritura2 -> COMMA escritura1 .)


state 217

    (53) for -> FOR forOperator asignacion COMMA TO expresion forQuad . LBRACKET estatuto RBRACKET endFor

    LBRACKET        shift and go to state 232


state 218

    (54) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET . estatuto RBRACKET else endIf
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (117) empty -> .
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (48) lectura -> . READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (49) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (53) for -> . FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (54) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (57) while -> . WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RBRACKET        reduce using rule 117 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 233
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 219

    (59) expresion1 -> OR addOperator expresion .

    RPARENTHESIS    reduce using rule 59 (expresion1 -> OR addOperator expresion .)
    COMMA           reduce using rule 59 (expresion1 -> OR addOperator expresion .)
    SEMICOLON       reduce using rule 59 (expresion1 -> OR addOperator expresion .)
    LBRACKET        reduce using rule 59 (expresion1 -> OR addOperator expresion .)


state 220

    (62) nexp1 -> AND addOperator nexp .

    OR              reduce using rule 62 (nexp1 -> AND addOperator nexp .)
    RPARENTHESIS    reduce using rule 62 (nexp1 -> AND addOperator nexp .)
    COMMA           reduce using rule 62 (nexp1 -> AND addOperator nexp .)
    SEMICOLON       reduce using rule 62 (nexp1 -> AND addOperator nexp .)
    LBRACKET        reduce using rule 62 (nexp1 -> AND addOperator nexp .)


state 221

    (65) compex1 -> GTHAN addOperator sumexp .

    AND             reduce using rule 65 (compex1 -> GTHAN addOperator sumexp .)
    OR              reduce using rule 65 (compex1 -> GTHAN addOperator sumexp .)
    RPARENTHESIS    reduce using rule 65 (compex1 -> GTHAN addOperator sumexp .)
    COMMA           reduce using rule 65 (compex1 -> GTHAN addOperator sumexp .)
    SEMICOLON       reduce using rule 65 (compex1 -> GTHAN addOperator sumexp .)
    LBRACKET        reduce using rule 65 (compex1 -> GTHAN addOperator sumexp .)


state 222

    (66) compex1 -> LTHAN addOperator sumexp .

    AND             reduce using rule 66 (compex1 -> LTHAN addOperator sumexp .)
    OR              reduce using rule 66 (compex1 -> LTHAN addOperator sumexp .)
    RPARENTHESIS    reduce using rule 66 (compex1 -> LTHAN addOperator sumexp .)
    COMMA           reduce using rule 66 (compex1 -> LTHAN addOperator sumexp .)
    SEMICOLON       reduce using rule 66 (compex1 -> LTHAN addOperator sumexp .)
    LBRACKET        reduce using rule 66 (compex1 -> LTHAN addOperator sumexp .)


state 223

    (67) compex1 -> GTHANEQ addOperator sumexp .

    AND             reduce using rule 67 (compex1 -> GTHANEQ addOperator sumexp .)
    OR              reduce using rule 67 (compex1 -> GTHANEQ addOperator sumexp .)
    RPARENTHESIS    reduce using rule 67 (compex1 -> GTHANEQ addOperator sumexp .)
    COMMA           reduce using rule 67 (compex1 -> GTHANEQ addOperator sumexp .)
    SEMICOLON       reduce using rule 67 (compex1 -> GTHANEQ addOperator sumexp .)
    LBRACKET        reduce using rule 67 (compex1 -> GTHANEQ addOperator sumexp .)


state 224

    (68) compex1 -> LTHANEQ addOperator sumexp .

    AND             reduce using rule 68 (compex1 -> LTHANEQ addOperator sumexp .)
    OR              reduce using rule 68 (compex1 -> LTHANEQ addOperator sumexp .)
    RPARENTHESIS    reduce using rule 68 (compex1 -> LTHANEQ addOperator sumexp .)
    COMMA           reduce using rule 68 (compex1 -> LTHANEQ addOperator sumexp .)
    SEMICOLON       reduce using rule 68 (compex1 -> LTHANEQ addOperator sumexp .)
    LBRACKET        reduce using rule 68 (compex1 -> LTHANEQ addOperator sumexp .)


state 225

    (69) compex1 -> DIFFERENT addOperator sumexp .

    AND             reduce using rule 69 (compex1 -> DIFFERENT addOperator sumexp .)
    OR              reduce using rule 69 (compex1 -> DIFFERENT addOperator sumexp .)
    RPARENTHESIS    reduce using rule 69 (compex1 -> DIFFERENT addOperator sumexp .)
    COMMA           reduce using rule 69 (compex1 -> DIFFERENT addOperator sumexp .)
    SEMICOLON       reduce using rule 69 (compex1 -> DIFFERENT addOperator sumexp .)
    LBRACKET        reduce using rule 69 (compex1 -> DIFFERENT addOperator sumexp .)


state 226

    (70) compex1 -> EQUALS addOperator sumexp .

    AND             reduce using rule 70 (compex1 -> EQUALS addOperator sumexp .)
    OR              reduce using rule 70 (compex1 -> EQUALS addOperator sumexp .)
    RPARENTHESIS    reduce using rule 70 (compex1 -> EQUALS addOperator sumexp .)
    COMMA           reduce using rule 70 (compex1 -> EQUALS addOperator sumexp .)
    SEMICOLON       reduce using rule 70 (compex1 -> EQUALS addOperator sumexp .)
    LBRACKET        reduce using rule 70 (compex1 -> EQUALS addOperator sumexp .)


state 227

    (73) sumexp1 -> PLUS addOperator sumexp .

    GTHAN           reduce using rule 73 (sumexp1 -> PLUS addOperator sumexp .)
    LTHAN           reduce using rule 73 (sumexp1 -> PLUS addOperator sumexp .)
    GTHANEQ         reduce using rule 73 (sumexp1 -> PLUS addOperator sumexp .)
    LTHANEQ         reduce using rule 73 (sumexp1 -> PLUS addOperator sumexp .)
    DIFFERENT       reduce using rule 73 (sumexp1 -> PLUS addOperator sumexp .)
    EQUALS          reduce using rule 73 (sumexp1 -> PLUS addOperator sumexp .)
    AND             reduce using rule 73 (sumexp1 -> PLUS addOperator sumexp .)
    OR              reduce using rule 73 (sumexp1 -> PLUS addOperator sumexp .)
    RPARENTHESIS    reduce using rule 73 (sumexp1 -> PLUS addOperator sumexp .)
    COMMA           reduce using rule 73 (sumexp1 -> PLUS addOperator sumexp .)
    SEMICOLON       reduce using rule 73 (sumexp1 -> PLUS addOperator sumexp .)
    LBRACKET        reduce using rule 73 (sumexp1 -> PLUS addOperator sumexp .)


state 228

    (74) sumexp1 -> MINUS addOperator sumexp .

    GTHAN           reduce using rule 74 (sumexp1 -> MINUS addOperator sumexp .)
    LTHAN           reduce using rule 74 (sumexp1 -> MINUS addOperator sumexp .)
    GTHANEQ         reduce using rule 74 (sumexp1 -> MINUS addOperator sumexp .)
    LTHANEQ         reduce using rule 74 (sumexp1 -> MINUS addOperator sumexp .)
    DIFFERENT       reduce using rule 74 (sumexp1 -> MINUS addOperator sumexp .)
    EQUALS          reduce using rule 74 (sumexp1 -> MINUS addOperator sumexp .)
    AND             reduce using rule 74 (sumexp1 -> MINUS addOperator sumexp .)
    OR              reduce using rule 74 (sumexp1 -> MINUS addOperator sumexp .)
    RPARENTHESIS    reduce using rule 74 (sumexp1 -> MINUS addOperator sumexp .)
    COMMA           reduce using rule 74 (sumexp1 -> MINUS addOperator sumexp .)
    SEMICOLON       reduce using rule 74 (sumexp1 -> MINUS addOperator sumexp .)
    LBRACKET        reduce using rule 74 (sumexp1 -> MINUS addOperator sumexp .)


state 229

    (77) mulexp1 -> MULTIPLICATION addOperator mulexp .

    PLUS            reduce using rule 77 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    MINUS           reduce using rule 77 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    GTHAN           reduce using rule 77 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    LTHAN           reduce using rule 77 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    GTHANEQ         reduce using rule 77 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    LTHANEQ         reduce using rule 77 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    DIFFERENT       reduce using rule 77 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    EQUALS          reduce using rule 77 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    AND             reduce using rule 77 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    OR              reduce using rule 77 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    RPARENTHESIS    reduce using rule 77 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    COMMA           reduce using rule 77 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    SEMICOLON       reduce using rule 77 (mulexp1 -> MULTIPLICATION addOperator mulexp .)
    LBRACKET        reduce using rule 77 (mulexp1 -> MULTIPLICATION addOperator mulexp .)


state 230

    (78) mulexp1 -> DIVISION addOperator mulexp .

    PLUS            reduce using rule 78 (mulexp1 -> DIVISION addOperator mulexp .)
    MINUS           reduce using rule 78 (mulexp1 -> DIVISION addOperator mulexp .)
    GTHAN           reduce using rule 78 (mulexp1 -> DIVISION addOperator mulexp .)
    LTHAN           reduce using rule 78 (mulexp1 -> DIVISION addOperator mulexp .)
    GTHANEQ         reduce using rule 78 (mulexp1 -> DIVISION addOperator mulexp .)
    LTHANEQ         reduce using rule 78 (mulexp1 -> DIVISION addOperator mulexp .)
    DIFFERENT       reduce using rule 78 (mulexp1 -> DIVISION addOperator mulexp .)
    EQUALS          reduce using rule 78 (mulexp1 -> DIVISION addOperator mulexp .)
    AND             reduce using rule 78 (mulexp1 -> DIVISION addOperator mulexp .)
    OR              reduce using rule 78 (mulexp1 -> DIVISION addOperator mulexp .)
    RPARENTHESIS    reduce using rule 78 (mulexp1 -> DIVISION addOperator mulexp .)
    COMMA           reduce using rule 78 (mulexp1 -> DIVISION addOperator mulexp .)
    SEMICOLON       reduce using rule 78 (mulexp1 -> DIVISION addOperator mulexp .)
    LBRACKET        reduce using rule 78 (mulexp1 -> DIVISION addOperator mulexp .)


state 231

    (57) while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET . estatuto RBRACKET endWhile
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (117) empty -> .
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (48) lectura -> . READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (49) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (53) for -> . FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (54) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (57) while -> . WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RBRACKET        reduce using rule 117 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 234
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 232

    (53) for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET . estatuto RBRACKET endFor
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (117) empty -> .
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (48) lectura -> . READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (49) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (53) for -> . FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (54) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (57) while -> . WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RBRACKET        reduce using rule 117 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    asignacion                     shift and go to state 68
    estatuto                       shift and go to state 235
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 233

    (54) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto . RBRACKET else endIf

    RBRACKET        shift and go to state 236


state 234

    (57) while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto . RBRACKET endWhile

    RBRACKET        shift and go to state 237


state 235

    (53) for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto . RBRACKET endFor

    RBRACKET        shift and go to state 238


state 236

    (54) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET . else endIf
    (55) else -> . ELSE elseQuad LBRACKET estatuto RBRACKET
    (56) else -> . empty
    (117) empty -> .

    ELSE            shift and go to state 240
    ID              reduce using rule 117 (empty -> .)
    READ            reduce using rule 117 (empty -> .)
    PRINT           reduce using rule 117 (empty -> .)
    FOR             reduce using rule 117 (empty -> .)
    IF              reduce using rule 117 (empty -> .)
    WHILE           reduce using rule 117 (empty -> .)
    RBRACKET        reduce using rule 117 (empty -> .)
    RETURN          reduce using rule 117 (empty -> .)

    else                           shift and go to state 239
    empty                          shift and go to state 241

state 237

    (57) while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET . endWhile
    (102) endWhile -> .

    ID              reduce using rule 102 (endWhile -> .)
    READ            reduce using rule 102 (endWhile -> .)
    PRINT           reduce using rule 102 (endWhile -> .)
    FOR             reduce using rule 102 (endWhile -> .)
    IF              reduce using rule 102 (endWhile -> .)
    WHILE           reduce using rule 102 (endWhile -> .)
    RBRACKET        reduce using rule 102 (endWhile -> .)
    RETURN          reduce using rule 102 (endWhile -> .)

    endWhile                       shift and go to state 242

state 238

    (53) for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET . endFor
    (105) endFor -> .

    ID              reduce using rule 105 (endFor -> .)
    READ            reduce using rule 105 (endFor -> .)
    PRINT           reduce using rule 105 (endFor -> .)
    FOR             reduce using rule 105 (endFor -> .)
    IF              reduce using rule 105 (endFor -> .)
    WHILE           reduce using rule 105 (endFor -> .)
    RBRACKET        reduce using rule 105 (endFor -> .)
    RETURN          reduce using rule 105 (endFor -> .)

    endFor                         shift and go to state 243

state 239

    (54) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else . endIf
    (99) endIf -> .

    ID              reduce using rule 99 (endIf -> .)
    READ            reduce using rule 99 (endIf -> .)
    PRINT           reduce using rule 99 (endIf -> .)
    FOR             reduce using rule 99 (endIf -> .)
    IF              reduce using rule 99 (endIf -> .)
    WHILE           reduce using rule 99 (endIf -> .)
    RBRACKET        reduce using rule 99 (endIf -> .)
    RETURN          reduce using rule 99 (endIf -> .)

    endIf                          shift and go to state 244

state 240

    (55) else -> ELSE . elseQuad LBRACKET estatuto RBRACKET
    (98) elseQuad -> .

    LBRACKET        reduce using rule 98 (elseQuad -> .)

    elseQuad                       shift and go to state 245

state 241

    (56) else -> empty .

    ID              reduce using rule 56 (else -> empty .)
    READ            reduce using rule 56 (else -> empty .)
    PRINT           reduce using rule 56 (else -> empty .)
    FOR             reduce using rule 56 (else -> empty .)
    IF              reduce using rule 56 (else -> empty .)
    WHILE           reduce using rule 56 (else -> empty .)
    RBRACKET        reduce using rule 56 (else -> empty .)
    RETURN          reduce using rule 56 (else -> empty .)


state 242

    (57) while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .

    ID              reduce using rule 57 (while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .)
    READ            reduce using rule 57 (while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .)
    PRINT           reduce using rule 57 (while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .)
    FOR             reduce using rule 57 (while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .)
    IF              reduce using rule 57 (while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .)
    WHILE           reduce using rule 57 (while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .)
    RBRACKET        reduce using rule 57 (while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .)
    RETURN          reduce using rule 57 (while -> WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile .)


state 243

    (53) for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .

    ID              reduce using rule 53 (for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .)
    READ            reduce using rule 53 (for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .)
    PRINT           reduce using rule 53 (for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .)
    FOR             reduce using rule 53 (for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .)
    IF              reduce using rule 53 (for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .)
    WHILE           reduce using rule 53 (for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .)
    RBRACKET        reduce using rule 53 (for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .)
    RETURN          reduce using rule 53 (for -> FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor .)


state 244

    (54) if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .

    ID              reduce using rule 54 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .)
    READ            reduce using rule 54 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .)
    PRINT           reduce using rule 54 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .)
    FOR             reduce using rule 54 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .)
    IF              reduce using rule 54 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .)
    WHILE           reduce using rule 54 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .)
    RBRACKET        reduce using rule 54 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .)
    RETURN          reduce using rule 54 (if -> IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf .)


state 245

    (55) else -> ELSE elseQuad . LBRACKET estatuto RBRACKET

    LBRACKET        shift and go to state 246


state 246

    (55) else -> ELSE elseQuad LBRACKET . estatuto RBRACKET
    (33) estatuto -> . estatuto2 estatuto
    (34) estatuto -> . empty
    (35) estatuto2 -> . asignacion SEMICOLON
    (36) estatuto2 -> . llamada SEMICOLON
    (37) estatuto2 -> . lectura SEMICOLON
    (38) estatuto2 -> . escritura SEMICOLON
    (39) estatuto2 -> . for
    (40) estatuto2 -> . if
    (41) estatuto2 -> . while
    (117) empty -> .
    (42) asignacion -> . ID addId arr EQUAL addOperator expresion quadEqual
    (43) llamada -> . ID requestCallMemory LPARENTHESIS enviarAgrs RPARENTHESIS callQuad
    (48) lectura -> . READ readOperator LPARENTHESIS expresion readQuad RPARENTHESIS
    (49) escritura -> . PRINT LPARENTHESIS escritura1 RPARENTHESIS
    (53) for -> . FOR forOperator asignacion COMMA TO expresion forQuad LBRACKET estatuto RBRACKET endFor
    (54) if -> . IF LPARENTHESIS expresion RPARENTHESIS ifQuad THEN LBRACKET estatuto RBRACKET else endIf
    (57) while -> . WHILE whileOperator LPARENTHESIS expresion RPARENTHESIS whileQuad LBRACKET estatuto RBRACKET endWhile

    RBRACKET        reduce using rule 117 (empty -> .)
    ID              shift and go to state 75
    READ            shift and go to state 76
    PRINT           shift and go to state 77
    FOR             shift and go to state 78
    IF              shift and go to state 79
    WHILE           shift and go to state 80

    estatuto                       shift and go to state 247
    estatuto2                      shift and go to state 66
    empty                          shift and go to state 67
    asignacion                     shift and go to state 68
    llamada                        shift and go to state 69
    lectura                        shift and go to state 70
    escritura                      shift and go to state 71
    for                            shift and go to state 72
    if                             shift and go to state 73
    while                          shift and go to state 74

state 247

    (55) else -> ELSE elseQuad LBRACKET estatuto . RBRACKET

    RBRACKET        shift and go to state 248


state 248

    (55) else -> ELSE elseQuad LBRACKET estatuto RBRACKET .

    ID              reduce using rule 55 (else -> ELSE elseQuad LBRACKET estatuto RBRACKET .)
    READ            reduce using rule 55 (else -> ELSE elseQuad LBRACKET estatuto RBRACKET .)
    PRINT           reduce using rule 55 (else -> ELSE elseQuad LBRACKET estatuto RBRACKET .)
    FOR             reduce using rule 55 (else -> ELSE elseQuad LBRACKET estatuto RBRACKET .)
    IF              reduce using rule 55 (else -> ELSE elseQuad LBRACKET estatuto RBRACKET .)
    WHILE           reduce using rule 55 (else -> ELSE elseQuad LBRACKET estatuto RBRACKET .)
    RBRACKET        reduce using rule 55 (else -> ELSE elseQuad LBRACKET estatuto RBRACKET .)
    RETURN          reduce using rule 55 (else -> ELSE elseQuad LBRACKET estatuto RBRACKET .)

